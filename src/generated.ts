// Generated by @wagmi/cli@0.1.10 on 3/2/2023 at 8:02:30 AM
import {
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/SampleIntegration.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSampleIntegrationJsonABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_synthetix', internalType: 'address', type: 'address' },
      { name: '_snxUsd', internalType: 'address', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'snxUsd',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'synthetix',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
] as const

export const deploymentsSampleIntegrationJsonAddress =
  '0x5Da804cB89D7ebA627DA7D17015B64718074F78d' as const

export const deploymentsSampleIntegrationJsonConfig = {
  address: deploymentsSampleIntegrationJsonAddress,
  abi: deploymentsSampleIntegrationJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/collateralChainlinkMock/MockV3Aggregator.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_decimals', internalType: 'uint8', type: 'uint8' },
      { name: '_initialAnswer', internalType: 'int256', type: 'int256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'description',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getAnswer',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_roundId', internalType: 'uint80', type: 'uint80' }],
    name: 'getRoundData',
    outputs: [
      { name: 'roundId', internalType: 'uint80', type: 'uint80' },
      { name: 'answer', internalType: 'int256', type: 'int256' },
      { name: 'startedAt', internalType: 'uint256', type: 'uint256' },
      { name: 'updatedAt', internalType: 'uint256', type: 'uint256' },
      { name: 'answeredInRound', internalType: 'uint80', type: 'uint80' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getTimestamp',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'latestAnswer',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'latestRound',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'latestRoundData',
    outputs: [
      { name: 'roundId', internalType: 'uint80', type: 'uint80' },
      { name: 'answer', internalType: 'int256', type: 'int256' },
      { name: 'startedAt', internalType: 'uint256', type: 'uint256' },
      { name: 'updatedAt', internalType: 'uint256', type: 'uint256' },
      { name: 'answeredInRound', internalType: 'uint80', type: 'uint80' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'latestTimestamp',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_answer', internalType: 'int256', type: 'int256' }],
    name: 'updateAnswer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_roundId', internalType: 'uint80', type: 'uint80' },
      { name: '_answer', internalType: 'int256', type: 'int256' },
      { name: '_timestamp', internalType: 'uint256', type: 'uint256' },
      { name: '_startedAt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateRoundData',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'version',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

export const deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress =
  '0xE4c370cc7478d3bFC96A5A95fe308F19d5D0d12E' as const

export const deploymentsCollateralChainlinkMockMockV3AggregatorJsonConfig = {
  address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
  abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/collateralToken/MintableToken.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsCollateralTokenMintableTokenJsonABI = [
  {
    stateMutability: 'payable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'initialSupply', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'address', type: 'address' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

export const deploymentsCollateralTokenMintableTokenJsonAddress =
  '0x7B05A2baA61dFd56951c14597550c803e92B1C95' as const

export const deploymentsCollateralTokenMintableTokenJsonConfig = {
  address: deploymentsCollateralTokenMintableTokenJsonAddress,
  abi: deploymentsCollateralTokenMintableTokenJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/AsyncOrderConfigurationModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'marketOwner', internalType: 'address', type: 'address' },
      { name: 'sender', internalType: 'address', type: 'address' },
    ],
    name: 'OnlyMarketOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'strategyId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SettlementStrategyAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'strategyId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'enabled', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'SettlementStrategyUpdated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'strategy',
        internalType: 'struct SettlementStrategy.Data',
        type: 'tuple',
        components: [
          {
            name: 'strategyType',
            internalType: 'enum SettlementStrategy.Type',
            type: 'uint8',
          },
          { name: 'settlementDelay', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementWindowDuration',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceVerificationContract',
            internalType: 'address',
            type: 'address',
          },
          { name: 'feedId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'url', internalType: 'string', type: 'string' },
          {
            name: 'settlementReward',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceDeviationTolerance',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'disabled', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
    name: 'addSettlementStrategy',
    outputs: [{ name: 'strategyId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'strategyId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSettlementStrategy',
    outputs: [
      {
        name: '',
        internalType: 'struct SettlementStrategy.Data',
        type: 'tuple',
        components: [
          {
            name: 'strategyType',
            internalType: 'enum SettlementStrategy.Type',
            type: 'uint8',
          },
          { name: 'settlementDelay', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementWindowDuration',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceVerificationContract',
            internalType: 'address',
            type: 'address',
          },
          { name: 'feedId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'url', internalType: 'string', type: 'string' },
          {
            name: 'settlementReward',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceDeviationTolerance',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'disabled', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'strategyId', internalType: 'uint256', type: 'uint256' },
      { name: 'enabled', internalType: 'bool', type: 'bool' },
    ],
    name: 'setSettlementStrategyEnabled',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress =
  '0xe2c91D7F445eBb40EF1fb9410597D10224039c6c' as const

export const deploymentsSpotMarketAsyncOrderConfigurationModuleJsonConfig = {
  address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
  abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/AsyncOrderModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketAsyncOrderModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IneligibleForCancellation',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'transactionType',
        internalType: 'enum Transaction.Type',
        type: 'uint8',
      },
    ],
    name: 'InvalidAsyncTransactionType',
  },
  {
    type: 'error',
    inputs: [
      { name: 'asyncOrderId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InvalidClaim',
  },
  {
    type: 'error',
    inputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'settlementReward', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InvalidCommitmentAmount',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'InvalidMarket',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'settlementStrategyId',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InvalidSettlementStrategy',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [
      { name: 'asyncOrderId', internalType: 'uint256', type: 'uint256' },
      { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'OrderAlreadySettled',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'asyncOrderId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'asyncOrderClaim',
        internalType: 'struct AsyncOrderClaim.Data',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint128', type: 'uint128' },
          { name: 'owner', internalType: 'address', type: 'address' },
          {
            name: 'orderType',
            internalType: 'enum Transaction.Type',
            type: 'uint8',
          },
          { name: 'amountEscrowed', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementStrategyId',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settlementTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'committedAmountUsd',
            internalType: 'int256',
            type: 'int256',
          },
          {
            name: 'minimumSettlementAmount',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OrderCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'orderType',
        internalType: 'enum Transaction.Type',
        type: 'uint8',
        indexed: true,
      },
      {
        name: 'amountProvided',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'asyncOrderId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OrderCommitted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'cancelOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'orderType',
        internalType: 'enum Transaction.Type',
        type: 'uint8',
      },
      { name: 'amountProvided', internalType: 'uint256', type: 'uint256' },
      {
        name: 'settlementStrategyId',
        internalType: 'uint256',
        type: 'uint256',
      },
      {
        name: 'minimumSettlementAmount',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'commitOrder',
    outputs: [
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'asyncOrderClaim',
        internalType: 'struct AsyncOrderClaim.Data',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint128', type: 'uint128' },
          { name: 'owner', internalType: 'address', type: 'address' },
          {
            name: 'orderType',
            internalType: 'enum Transaction.Type',
            type: 'uint8',
          },
          { name: 'amountEscrowed', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementStrategyId',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settlementTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'committedAmountUsd',
            internalType: 'int256',
            type: 'int256',
          },
          {
            name: 'minimumSettlementAmount',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'getAsyncOrderClaim',
    outputs: [
      {
        name: '',
        internalType: 'struct AsyncOrderClaim.Data',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint128', type: 'uint128' },
          { name: 'owner', internalType: 'address', type: 'address' },
          {
            name: 'orderType',
            internalType: 'enum Transaction.Type',
            type: 'uint8',
          },
          { name: 'amountEscrowed', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementStrategyId',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settlementTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'committedAmountUsd',
            internalType: 'int256',
            type: 'int256',
          },
          {
            name: 'minimumSettlementAmount',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
] as const

export const deploymentsSpotMarketAsyncOrderModuleJsonAddress =
  '0x6cF107A8B46df420bB8E67EE8e2443f9F496f92D' as const

export const deploymentsSpotMarketAsyncOrderModuleJsonConfig = {
  address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
  abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/AsyncOrderSettlementModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'asyncOrderId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InvalidClaim',
  },
  { type: 'error', inputs: [], name: 'InvalidVerificationResponse' },
  {
    type: 'error',
    inputs: [
      { name: 'minimum', internalType: 'uint256', type: 'uint256' },
      { name: 'actual', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'MinimumSettlementAmountNotMet',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'urls', internalType: 'string[]', type: 'string[]' },
      { name: 'callData', internalType: 'bytes', type: 'bytes' },
      { name: 'callbackFunction', internalType: 'bytes4', type: 'bytes4' },
      { name: 'extraData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'OffchainLookup',
  },
  {
    type: 'error',
    inputs: [
      { name: 'asyncOrderId', internalType: 'uint256', type: 'uint256' },
      { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'OrderAlreadySettled',
  },
  {
    type: 'error',
    inputs: [
      { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'startTime', internalType: 'uint256', type: 'uint256' },
      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'OutsideSettlementWindow',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint64' },
  {
    type: 'error',
    inputs: [
      { name: 'deviation', internalType: 'uint256', type: 'uint256' },
      { name: 'tolerance', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'PriceDeviationToleranceExceeded',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'strategyType',
        internalType: 'enum SettlementStrategy.Type',
        type: 'uint8',
      },
    ],
    name: 'SettlementStrategyNotFound',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'asyncOrderId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'finalOrderAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'collectedFees',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OrderSettled',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'PRECISION',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'settleOrder',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'int256', type: 'int256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'result', internalType: 'bytes', type: 'bytes' },
      { name: 'extraData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'settlePythOrder',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'int256', type: 'int256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const

export const deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress =
  '0xbc2BF4aFe98383Dfb870F7e3727afFc7A836b600' as const

export const deploymentsSpotMarketAsyncOrderSettlementModuleJsonConfig = {
  address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
  abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/AtomicOrderModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketAtomicOrderModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'uint256', type: 'uint256' },
      { name: 'current', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'uint256', type: 'uint256' },
      { name: 'current', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAmountReceived',
  },
  { type: 'error', inputs: [], name: 'InsufficientFunds' },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'InvalidMarket',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'synthReturned',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'collectedFees',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthBought',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amountReturned',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'collectedFees',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthSold',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'usdAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'buy',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'synthAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'sell',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

export const deploymentsSpotMarketAtomicOrderModuleJsonAddress =
  '0xDB9ce01380fB463d41C8F58085910BA2D628fa38' as const

export const deploymentsSpotMarketAtomicOrderModuleJsonConfig = {
  address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
  abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/CoreModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketCoreModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketCoreModuleJsonAddress =
  '0xD8aAaD19E284C4481738d088A09A0f879dA8A3dF' as const

export const deploymentsSpotMarketCoreModuleJsonConfig = {
  address: deploymentsSpotMarketCoreModuleJsonAddress,
  abi: deploymentsSpotMarketCoreModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/FeatureFlagModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketFeatureFlagModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'allowAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagAllowAllSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'deniers',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
    ],
    name: 'FeatureFlagDeniersReset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'denyAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagDenyAllSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'addToFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDeniers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowlist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagDenyAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'isFeatureAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'removeFromFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'deniers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'setDeniers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagAllowAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'denyAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagDenyAll',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketFeatureFlagModuleJsonAddress =
  '0x8bc7Fd740fFBc1640b3a4EE489f35250a63C20F2' as const

export const deploymentsSpotMarketFeatureFlagModuleJsonConfig = {
  address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
  abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/FeeConfigurationModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketFeeConfigurationModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'invalidFeeCollector', internalType: 'address', type: 'address' },
    ],
    name: 'InvalidFeeCollectorInterface',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketOwner', internalType: 'address', type: 'address' },
      { name: 'sender', internalType: 'address', type: 'address' },
    ],
    name: 'OnlyMarketOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'asyncFixedFee',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AsyncFixedFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'atomicFixedFee',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AtomicFixedFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'feeCollector',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeeCollectorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'skewScale',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketSkewScaleSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'utilizationFeeRate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketUtilizationFeesSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'transactor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'fixedFeeAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'TransactorFixedFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'wrapFee',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'unwrapFee',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
    ],
    name: 'WrapperFeesSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncFixedFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAsyncFixedFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'atomicFixedFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAtomicFixedFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'transactor', internalType: 'address', type: 'address' },
      { name: 'fixedFeeAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setCustomTransactorFees',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'feeCollector', internalType: 'address', type: 'address' },
    ],
    name: 'setFeeCollector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'skewScale', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMarketSkewScale',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'utilizationFeeRate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMarketUtilizationFees',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'wrapFee', internalType: 'int256', type: 'int256' },
      { name: 'unwrapFee', internalType: 'int256', type: 'int256' },
    ],
    name: 'setWrapperFees',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketFeeConfigurationModuleJsonAddress =
  '0xcF8d02dD544EeA1403AD1d36Ef52078F982316Bb' as const

export const deploymentsSpotMarketFeeConfigurationModuleJsonConfig = {
  address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
  abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/InitialSpotMarketProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketInitialSpotMarketProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketInitialSpotMarketProxyJsonAddress =
  '0xE8Dd9Ad218141193F355782AAdebBC2a8e438001' as const

export const deploymentsSpotMarketInitialSpotMarketProxyJsonConfig = {
  address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
  abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/SpotMarketFactoryModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSpotMarketFactoryModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  { type: 'error', inputs: [], name: 'NotInitialized' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketOwner', internalType: 'address', type: 'address' },
      { name: 'sender', internalType: 'address', type: 'address' },
    ],
    name: 'OnlyMarketOwner',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'MarketOwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'MarketOwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SynthImplementationUpgraded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'buyFeedId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'sellFeedId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'SynthPriceDataUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'SynthRegistered',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'acceptMarketOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'synthOwner', internalType: 'address', type: 'address' },
    ],
    name: 'createSynth',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'getMarketOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getSynth',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snxAddress', internalType: 'address', type: 'address' },
      { name: 'usdTokenAddress', internalType: 'address', type: 'address' },
      { name: 'oracleManager', internalType: 'address', type: 'address' },
      {
        name: 'initialSynthImplementation',
        internalType: 'address',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'locked',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateMarketOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'reportedDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'buyFeedId', internalType: 'bytes32', type: 'bytes32' },
      { name: 'sellFeedId', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'updatePriceData',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'synthImpl', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeSynthImpl',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress =
  '0xa2bdBFfbe6c8037dE11752A8D514a4635674d306' as const

export const deploymentsSpotMarketSpotMarketFactoryModuleJsonConfig = {
  address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
  abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/SpotMarketProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSpotMarketProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  { type: 'error', inputs: [], name: 'NotInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'marketOwner', internalType: 'address', type: 'address' },
      { name: 'sender', internalType: 'address', type: 'address' },
    ],
    name: 'OnlyMarketOwner',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'MarketOwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'MarketOwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SynthImplementationUpgraded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'buyFeedId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'sellFeedId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'SynthPriceDataUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'SynthRegistered',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'acceptMarketOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'synthOwner', internalType: 'address', type: 'address' },
    ],
    name: 'createSynth',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'getMarketOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getSynth',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snxAddress', internalType: 'address', type: 'address' },
      { name: 'usdTokenAddress', internalType: 'address', type: 'address' },
      { name: 'oracleManager', internalType: 'address', type: 'address' },
      {
        name: 'initialSynthImplementation',
        internalType: 'address',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'locked',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateMarketOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'reportedDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'buyFeedId', internalType: 'bytes32', type: 'bytes32' },
      { name: 'sellFeedId', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'updatePriceData',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'synthImpl', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeSynthImpl',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'uint256', type: 'uint256' },
      { name: 'current', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'uint256', type: 'uint256' },
      { name: 'current', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAmountReceived',
  },
  { type: 'error', inputs: [], name: 'InsufficientFunds' },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'InvalidMarket',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'synthReturned',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'collectedFees',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthBought',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amountReturned',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'collectedFees',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthSold',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'usdAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'buy',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'synthAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'sell',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    type: 'error',
    inputs: [
      { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IneligibleForCancellation',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'transactionType',
        internalType: 'enum Transaction.Type',
        type: 'uint8',
      },
    ],
    name: 'InvalidAsyncTransactionType',
  },
  {
    type: 'error',
    inputs: [
      { name: 'asyncOrderId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InvalidClaim',
  },
  {
    type: 'error',
    inputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'settlementReward', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InvalidCommitmentAmount',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'settlementStrategyId',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InvalidSettlementStrategy',
  },
  {
    type: 'error',
    inputs: [
      { name: 'asyncOrderId', internalType: 'uint256', type: 'uint256' },
      { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'OrderAlreadySettled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'asyncOrderId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'asyncOrderClaim',
        internalType: 'struct AsyncOrderClaim.Data',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint128', type: 'uint128' },
          { name: 'owner', internalType: 'address', type: 'address' },
          {
            name: 'orderType',
            internalType: 'enum Transaction.Type',
            type: 'uint8',
          },
          { name: 'amountEscrowed', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementStrategyId',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settlementTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'committedAmountUsd',
            internalType: 'int256',
            type: 'int256',
          },
          {
            name: 'minimumSettlementAmount',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OrderCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'orderType',
        internalType: 'enum Transaction.Type',
        type: 'uint8',
        indexed: true,
      },
      {
        name: 'amountProvided',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'asyncOrderId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OrderCommitted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'cancelOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'orderType',
        internalType: 'enum Transaction.Type',
        type: 'uint8',
      },
      { name: 'amountProvided', internalType: 'uint256', type: 'uint256' },
      {
        name: 'settlementStrategyId',
        internalType: 'uint256',
        type: 'uint256',
      },
      {
        name: 'minimumSettlementAmount',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'commitOrder',
    outputs: [
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'asyncOrderClaim',
        internalType: 'struct AsyncOrderClaim.Data',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint128', type: 'uint128' },
          { name: 'owner', internalType: 'address', type: 'address' },
          {
            name: 'orderType',
            internalType: 'enum Transaction.Type',
            type: 'uint8',
          },
          { name: 'amountEscrowed', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementStrategyId',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settlementTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'committedAmountUsd',
            internalType: 'int256',
            type: 'int256',
          },
          {
            name: 'minimumSettlementAmount',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'getAsyncOrderClaim',
    outputs: [
      {
        name: '',
        internalType: 'struct AsyncOrderClaim.Data',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint128', type: 'uint128' },
          { name: 'owner', internalType: 'address', type: 'address' },
          {
            name: 'orderType',
            internalType: 'enum Transaction.Type',
            type: 'uint8',
          },
          { name: 'amountEscrowed', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementStrategyId',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settlementTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'committedAmountUsd',
            internalType: 'int256',
            type: 'int256',
          },
          {
            name: 'minimumSettlementAmount',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  { type: 'error', inputs: [], name: 'InvalidVerificationResponse' },
  {
    type: 'error',
    inputs: [
      { name: 'minimum', internalType: 'uint256', type: 'uint256' },
      { name: 'actual', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'MinimumSettlementAmountNotMet',
  },
  {
    type: 'error',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'urls', internalType: 'string[]', type: 'string[]' },
      { name: 'callData', internalType: 'bytes', type: 'bytes' },
      { name: 'callbackFunction', internalType: 'bytes4', type: 'bytes4' },
      { name: 'extraData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'OffchainLookup',
  },
  {
    type: 'error',
    inputs: [
      { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'startTime', internalType: 'uint256', type: 'uint256' },
      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'OutsideSettlementWindow',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint64' },
  {
    type: 'error',
    inputs: [
      { name: 'deviation', internalType: 'uint256', type: 'uint256' },
      { name: 'tolerance', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'PriceDeviationToleranceExceeded',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'strategyType',
        internalType: 'enum SettlementStrategy.Type',
        type: 'uint8',
      },
    ],
    name: 'SettlementStrategyNotFound',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'asyncOrderId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'finalOrderAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'collectedFees',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OrderSettled',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'PRECISION',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'settleOrder',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'int256', type: 'int256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'result', internalType: 'bytes', type: 'bytes' },
      { name: 'extraData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'settlePythOrder',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'int256', type: 'int256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'strategyId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SettlementStrategyAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'strategyId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'enabled', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'SettlementStrategyUpdated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'strategy',
        internalType: 'struct SettlementStrategy.Data',
        type: 'tuple',
        components: [
          {
            name: 'strategyType',
            internalType: 'enum SettlementStrategy.Type',
            type: 'uint8',
          },
          { name: 'settlementDelay', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementWindowDuration',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceVerificationContract',
            internalType: 'address',
            type: 'address',
          },
          { name: 'feedId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'url', internalType: 'string', type: 'string' },
          {
            name: 'settlementReward',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceDeviationTolerance',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'disabled', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
    name: 'addSettlementStrategy',
    outputs: [{ name: 'strategyId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'strategyId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSettlementStrategy',
    outputs: [
      {
        name: '',
        internalType: 'struct SettlementStrategy.Data',
        type: 'tuple',
        components: [
          {
            name: 'strategyType',
            internalType: 'enum SettlementStrategy.Type',
            type: 'uint8',
          },
          { name: 'settlementDelay', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementWindowDuration',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceVerificationContract',
            internalType: 'address',
            type: 'address',
          },
          { name: 'feedId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'url', internalType: 'string', type: 'string' },
          {
            name: 'settlementReward',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceDeviationTolerance',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'disabled', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'strategyId', internalType: 'uint256', type: 'uint256' },
      { name: 'enabled', internalType: 'bool', type: 'bool' },
    ],
    name: 'setSettlementStrategyEnabled',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'InvalidCollateralType' },
  {
    type: 'error',
    inputs: [
      { name: 'maxWrappableAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'currentSupply', internalType: 'uint256', type: 'uint256' },
      { name: 'amountToWrap', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'WrapperExceedsMaxAmount',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amountUnwrapped',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'feesCollected',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthUnwrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amountWrapped',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'feesCollected',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthWrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'wrapCollateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'maxWrappableAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'WrapperSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'wrapCollateralType', internalType: 'address', type: 'address' },
      { name: 'maxWrappableAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setWrapper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'unwrapAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'unwrap',
    outputs: [
      {
        name: 'returnCollateralAmount',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'wrapAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'wrap',
    outputs: [
      { name: 'amountToMint', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'error',
    inputs: [
      { name: 'invalidFeeCollector', internalType: 'address', type: 'address' },
    ],
    name: 'InvalidFeeCollectorInterface',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'asyncFixedFee',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AsyncFixedFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'atomicFixedFee',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AtomicFixedFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'feeCollector',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeeCollectorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'skewScale',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketSkewScaleSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'utilizationFeeRate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketUtilizationFeesSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'transactor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'fixedFeeAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'TransactorFixedFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'wrapFee',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'unwrapFee',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
    ],
    name: 'WrapperFeesSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncFixedFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAsyncFixedFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'atomicFixedFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAtomicFixedFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'transactor', internalType: 'address', type: 'address' },
      { name: 'fixedFeeAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setCustomTransactorFees',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'feeCollector', internalType: 'address', type: 'address' },
    ],
    name: 'setFeeCollector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'skewScale', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMarketSkewScale',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'utilizationFeeRate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMarketUtilizationFees',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'wrapFee', internalType: 'int256', type: 'int256' },
      { name: 'unwrapFee', internalType: 'int256', type: 'int256' },
    ],
    name: 'setWrapperFees',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'allowAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagAllowAllSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'deniers',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
    ],
    name: 'FeatureFlagDeniersReset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'denyAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagDenyAllSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'addToFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDeniers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowlist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagDenyAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'isFeatureAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'removeFromFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'deniers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'setDeniers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagAllowAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'denyAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagDenyAll',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSpotMarketProxyJsonAddress =
  '0xE8Dd9Ad218141193F355782AAdebBC2a8e438001' as const

export const deploymentsSpotMarketSpotMarketProxyJsonConfig = {
  address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
  abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/SpotMarketRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSpotMarketRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  { type: 'error', inputs: [], name: 'NotInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'marketOwner', internalType: 'address', type: 'address' },
      { name: 'sender', internalType: 'address', type: 'address' },
    ],
    name: 'OnlyMarketOwner',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'MarketOwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'MarketOwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SynthImplementationUpgraded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'buyFeedId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'sellFeedId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'SynthPriceDataUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'SynthRegistered',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'acceptMarketOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'synthOwner', internalType: 'address', type: 'address' },
    ],
    name: 'createSynth',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'getMarketOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getSynth',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snxAddress', internalType: 'address', type: 'address' },
      { name: 'usdTokenAddress', internalType: 'address', type: 'address' },
      { name: 'oracleManager', internalType: 'address', type: 'address' },
      {
        name: 'initialSynthImplementation',
        internalType: 'address',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'locked',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateMarketOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'reportedDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'buyFeedId', internalType: 'bytes32', type: 'bytes32' },
      { name: 'sellFeedId', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'updatePriceData',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'synthImpl', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeSynthImpl',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'uint256', type: 'uint256' },
      { name: 'current', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'uint256', type: 'uint256' },
      { name: 'current', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAmountReceived',
  },
  { type: 'error', inputs: [], name: 'InsufficientFunds' },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'InvalidMarket',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'synthReturned',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'collectedFees',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthBought',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amountReturned',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'collectedFees',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthSold',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'usdAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'buy',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'synthAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'sell',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    type: 'error',
    inputs: [
      { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IneligibleForCancellation',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'transactionType',
        internalType: 'enum Transaction.Type',
        type: 'uint8',
      },
    ],
    name: 'InvalidAsyncTransactionType',
  },
  {
    type: 'error',
    inputs: [
      { name: 'asyncOrderId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InvalidClaim',
  },
  {
    type: 'error',
    inputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'settlementReward', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InvalidCommitmentAmount',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'settlementStrategyId',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InvalidSettlementStrategy',
  },
  {
    type: 'error',
    inputs: [
      { name: 'asyncOrderId', internalType: 'uint256', type: 'uint256' },
      { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'OrderAlreadySettled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'asyncOrderId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'asyncOrderClaim',
        internalType: 'struct AsyncOrderClaim.Data',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint128', type: 'uint128' },
          { name: 'owner', internalType: 'address', type: 'address' },
          {
            name: 'orderType',
            internalType: 'enum Transaction.Type',
            type: 'uint8',
          },
          { name: 'amountEscrowed', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementStrategyId',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settlementTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'committedAmountUsd',
            internalType: 'int256',
            type: 'int256',
          },
          {
            name: 'minimumSettlementAmount',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OrderCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'orderType',
        internalType: 'enum Transaction.Type',
        type: 'uint8',
        indexed: true,
      },
      {
        name: 'amountProvided',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'asyncOrderId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OrderCommitted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'cancelOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'orderType',
        internalType: 'enum Transaction.Type',
        type: 'uint8',
      },
      { name: 'amountProvided', internalType: 'uint256', type: 'uint256' },
      {
        name: 'settlementStrategyId',
        internalType: 'uint256',
        type: 'uint256',
      },
      {
        name: 'minimumSettlementAmount',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'commitOrder',
    outputs: [
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'asyncOrderClaim',
        internalType: 'struct AsyncOrderClaim.Data',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint128', type: 'uint128' },
          { name: 'owner', internalType: 'address', type: 'address' },
          {
            name: 'orderType',
            internalType: 'enum Transaction.Type',
            type: 'uint8',
          },
          { name: 'amountEscrowed', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementStrategyId',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settlementTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'committedAmountUsd',
            internalType: 'int256',
            type: 'int256',
          },
          {
            name: 'minimumSettlementAmount',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'getAsyncOrderClaim',
    outputs: [
      {
        name: '',
        internalType: 'struct AsyncOrderClaim.Data',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint128', type: 'uint128' },
          { name: 'owner', internalType: 'address', type: 'address' },
          {
            name: 'orderType',
            internalType: 'enum Transaction.Type',
            type: 'uint8',
          },
          { name: 'amountEscrowed', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementStrategyId',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settlementTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'committedAmountUsd',
            internalType: 'int256',
            type: 'int256',
          },
          {
            name: 'minimumSettlementAmount',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'settledAt', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  { type: 'error', inputs: [], name: 'InvalidVerificationResponse' },
  {
    type: 'error',
    inputs: [
      { name: 'minimum', internalType: 'uint256', type: 'uint256' },
      { name: 'actual', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'MinimumSettlementAmountNotMet',
  },
  {
    type: 'error',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'urls', internalType: 'string[]', type: 'string[]' },
      { name: 'callData', internalType: 'bytes', type: 'bytes' },
      { name: 'callbackFunction', internalType: 'bytes4', type: 'bytes4' },
      { name: 'extraData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'OffchainLookup',
  },
  {
    type: 'error',
    inputs: [
      { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'startTime', internalType: 'uint256', type: 'uint256' },
      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'OutsideSettlementWindow',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint64' },
  {
    type: 'error',
    inputs: [
      { name: 'deviation', internalType: 'uint256', type: 'uint256' },
      { name: 'tolerance', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'PriceDeviationToleranceExceeded',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'strategyType',
        internalType: 'enum SettlementStrategy.Type',
        type: 'uint8',
      },
    ],
    name: 'SettlementStrategyNotFound',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'asyncOrderId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'finalOrderAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'collectedFees',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OrderSettled',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'PRECISION',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncOrderId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'settleOrder',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'int256', type: 'int256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'result', internalType: 'bytes', type: 'bytes' },
      { name: 'extraData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'settlePythOrder',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'int256', type: 'int256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'strategyId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SettlementStrategyAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'strategyId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'enabled', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'SettlementStrategyUpdated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'strategy',
        internalType: 'struct SettlementStrategy.Data',
        type: 'tuple',
        components: [
          {
            name: 'strategyType',
            internalType: 'enum SettlementStrategy.Type',
            type: 'uint8',
          },
          { name: 'settlementDelay', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementWindowDuration',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceVerificationContract',
            internalType: 'address',
            type: 'address',
          },
          { name: 'feedId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'url', internalType: 'string', type: 'string' },
          {
            name: 'settlementReward',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceDeviationTolerance',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'disabled', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
    name: 'addSettlementStrategy',
    outputs: [{ name: 'strategyId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'strategyId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSettlementStrategy',
    outputs: [
      {
        name: '',
        internalType: 'struct SettlementStrategy.Data',
        type: 'tuple',
        components: [
          {
            name: 'strategyType',
            internalType: 'enum SettlementStrategy.Type',
            type: 'uint8',
          },
          { name: 'settlementDelay', internalType: 'uint256', type: 'uint256' },
          {
            name: 'settlementWindowDuration',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceVerificationContract',
            internalType: 'address',
            type: 'address',
          },
          { name: 'feedId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'url', internalType: 'string', type: 'string' },
          {
            name: 'settlementReward',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'priceDeviationTolerance',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'disabled', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'strategyId', internalType: 'uint256', type: 'uint256' },
      { name: 'enabled', internalType: 'bool', type: 'bool' },
    ],
    name: 'setSettlementStrategyEnabled',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'InvalidCollateralType' },
  {
    type: 'error',
    inputs: [
      { name: 'maxWrappableAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'currentSupply', internalType: 'uint256', type: 'uint256' },
      { name: 'amountToWrap', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'WrapperExceedsMaxAmount',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amountUnwrapped',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'feesCollected',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthUnwrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amountWrapped',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'feesCollected',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthWrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'wrapCollateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'maxWrappableAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'WrapperSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'wrapCollateralType', internalType: 'address', type: 'address' },
      { name: 'maxWrappableAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setWrapper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'unwrapAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'unwrap',
    outputs: [
      {
        name: 'returnCollateralAmount',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'wrapAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'wrap',
    outputs: [
      { name: 'amountToMint', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'error',
    inputs: [
      { name: 'invalidFeeCollector', internalType: 'address', type: 'address' },
    ],
    name: 'InvalidFeeCollectorInterface',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'asyncFixedFee',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AsyncFixedFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'atomicFixedFee',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AtomicFixedFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'feeCollector',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeeCollectorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'skewScale',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketSkewScaleSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'utilizationFeeRate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketUtilizationFeesSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'transactor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'fixedFeeAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'TransactorFixedFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'wrapFee',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'unwrapFee',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
    ],
    name: 'WrapperFeesSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'asyncFixedFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAsyncFixedFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'atomicFixedFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAtomicFixedFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'transactor', internalType: 'address', type: 'address' },
      { name: 'fixedFeeAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setCustomTransactorFees',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'feeCollector', internalType: 'address', type: 'address' },
    ],
    name: 'setFeeCollector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'skewScale', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMarketSkewScale',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'utilizationFeeRate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMarketUtilizationFees',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'synthMarketId', internalType: 'uint128', type: 'uint128' },
      { name: 'wrapFee', internalType: 'int256', type: 'int256' },
      { name: 'unwrapFee', internalType: 'int256', type: 'int256' },
    ],
    name: 'setWrapperFees',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'allowAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagAllowAllSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'deniers',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
    ],
    name: 'FeatureFlagDeniersReset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'denyAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagDenyAllSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'addToFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDeniers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowlist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagDenyAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'isFeatureAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'removeFromFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'deniers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'setDeniers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagAllowAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'denyAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagDenyAll',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSpotMarketRouterJsonAddress =
  '0x7e2a4c9D1f9854c2fB733d083F368FE82487D9CA' as const

export const deploymentsSpotMarketSpotMarketRouterJsonConfig = {
  address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
  abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/SynthRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientBalance',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'advanceEpoch',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decayRate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'tokenDecimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_rate', internalType: 'uint256', type: 'uint256' }],
    name: 'setDecayRate',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalShares',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: 'supply', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

export const deploymentsSpotMarketSynthRouterJsonAddress =
  '0x6D9337486A1f9dCcA051204caf821Dde3a0E419c' as const

export const deploymentsSpotMarketSynthRouterJsonConfig = {
  address: deploymentsSpotMarketSynthRouterJsonAddress,
  abi: deploymentsSpotMarketSynthRouterJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/SynthTokenModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthTokenModuleJsonABI = [
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientBalance',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'advanceEpoch',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decayRate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'tokenDecimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_rate', internalType: 'uint256', type: 'uint256' }],
    name: 'setDecayRate',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalShares',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: 'supply', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

export const deploymentsSpotMarketSynthTokenModuleJsonAddress =
  '0xD9522d65892cc87d6A77676062E1b8D85EBD80eD' as const

export const deploymentsSpotMarketSynthTokenModuleJsonConfig = {
  address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
  abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/WrapperModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketWrapperModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'uint256', type: 'uint256' },
      { name: 'current', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'uint256', type: 'uint256' },
      { name: 'current', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAmountReceived',
  },
  { type: 'error', inputs: [], name: 'InsufficientFunds' },
  { type: 'error', inputs: [], name: 'InvalidCollateralType' },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'InvalidMarket',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketOwner', internalType: 'address', type: 'address' },
      { name: 'sender', internalType: 'address', type: 'address' },
    ],
    name: 'OnlyMarketOwner',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  {
    type: 'error',
    inputs: [
      { name: 'maxWrappableAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'currentSupply', internalType: 'uint256', type: 'uint256' },
      { name: 'amountToWrap', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'WrapperExceedsMaxAmount',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amountUnwrapped',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'feesCollected',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthUnwrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amountWrapped',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'totalFees',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
      {
        name: 'feesCollected',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SynthWrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'synthMarketId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'wrapCollateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'maxWrappableAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'WrapperSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'wrapCollateralType', internalType: 'address', type: 'address' },
      { name: 'maxWrappableAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setWrapper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'unwrapAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'unwrap',
    outputs: [
      {
        name: 'returnCollateralAmount',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'wrapAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountReceived', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'wrap',
    outputs: [
      { name: 'amountToMint', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const

export const deploymentsSpotMarketWrapperModuleJsonAddress =
  '0x1Ffcc3E3DA1D03696bA615D9bb74EC0E4fDEE07E' as const

export const deploymentsSpotMarketWrapperModuleJsonConfig = {
  address: deploymentsSpotMarketWrapperModuleJsonAddress,
  abi: deploymentsSpotMarketWrapperModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/AccountModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixAccountModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'permission', internalType: 'bytes32', type: 'bytes32' }],
    name: 'InvalidPermission',
  },
  {
    type: 'error',
    inputs: [{ name: 'origin', internalType: 'address', type: 'address' }],
    name: 'OnlyAccountTokenProxy',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionNotGranted',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AccountCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionRevoked',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedAccountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'createAccount',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountLastInteraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountPermissions',
    outputs: [
      {
        name: 'accountPerms',
        internalType: 'struct IAccountModule.AccountPermissions[]',
        type: 'tuple[]',
        components: [
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'permissions', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAccountTokenAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'grantPermission',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'hasPermission',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'isAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'notifyAccountTransfer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'renouncePermission',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'revokePermission',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixAccountModuleJsonAddress =
  '0x90C404c29BcCdA60502740AC27b0fc6C6381F665' as const

export const deploymentsSpotMarketSynthetixAccountModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/AccountProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixAccountProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'CannotSelfApprove',
  },
  {
    type: 'error',
    inputs: [
      { name: 'requestedIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'length', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IndexOverrun',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidOwner',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidTransferRecipient',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenAlreadyMinted',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenDoesNotExist',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'holder', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'holder', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeMint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixAccountProxyJsonAddress =
  '0xE06fE85b65E0110f78638022FA9AD58c6b6c69bF' as const

export const deploymentsSpotMarketSynthetixAccountProxyJsonConfig = {
  address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
  abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/AccountRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixAccountRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'CannotSelfApprove',
  },
  {
    type: 'error',
    inputs: [
      { name: 'requestedIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'length', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IndexOverrun',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidOwner',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidTransferRecipient',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenAlreadyMinted',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenDoesNotExist',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'holder', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'holder', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeMint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixAccountRouterJsonAddress =
  '0xc2b36298B9e2260F6C335B835f2127907aC1228A' as const

export const deploymentsSpotMarketSynthetixAccountRouterJsonConfig = {
  address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
  abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/AccountTokenModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI = [
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'CannotSelfApprove',
  },
  {
    type: 'error',
    inputs: [
      { name: 'requestedIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'length', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IndexOverrun',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidOwner',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidTransferRecipient',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenAlreadyMinted',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenDoesNotExist',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'holder', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'holder', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeMint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress =
  '0x951F26ef562926b9e869fA9e7330c0552443C72d' as const

export const deploymentsSpotMarketSynthetixAccountTokenModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/AssociateDebtModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint256', type: 'uint256' },
      { name: 'poolId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotFundedByPool',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'updatedDebt',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
    ],
    name: 'DebtAssociated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'associateDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
] as const

export const deploymentsSpotMarketSynthetixAssociateDebtModuleJsonAddress =
  '0x2f3DADC43AC4aF1dF2A3abE527FBa90Aae7B7Ec8' as const

export const deploymentsSpotMarketSynthetixAssociateDebtModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/AssociatedSystemsModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress =
  '0x12A315fc9EeE2C86FDAfeD19f68110C501c63fCd' as const

export const deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/CollateralConfigurationModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI =
  [
    {
      type: 'error',
      inputs: [
        { name: 'parameter', internalType: 'string', type: 'string' },
        { name: 'reason', internalType: 'string', type: 'string' },
      ],
      name: 'InvalidParameter',
    },
    { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
    { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
    {
      type: 'error',
      inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
      name: 'Unauthorized',
    },
    { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        {
          name: 'collateralType',
          internalType: 'address',
          type: 'address',
          indexed: true,
        },
        {
          name: 'config',
          internalType: 'struct CollateralConfiguration.Data',
          type: 'tuple',
          components: [
            { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
            {
              name: 'issuanceRatioD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            {
              name: 'liquidationRatioD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            {
              name: 'liquidationRewardD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
            { name: 'tokenAddress', internalType: 'address', type: 'address' },
            {
              name: 'minDelegationD18',
              internalType: 'uint256',
              type: 'uint256',
            },
          ],
          indexed: false,
        },
      ],
      name: 'CollateralConfigured',
    },
    {
      stateMutability: 'nonpayable',
      type: 'function',
      inputs: [
        {
          name: 'config',
          internalType: 'struct CollateralConfiguration.Data',
          type: 'tuple',
          components: [
            { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
            {
              name: 'issuanceRatioD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            {
              name: 'liquidationRatioD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            {
              name: 'liquidationRewardD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
            { name: 'tokenAddress', internalType: 'address', type: 'address' },
            {
              name: 'minDelegationD18',
              internalType: 'uint256',
              type: 'uint256',
            },
          ],
        },
      ],
      name: 'configureCollateral',
      outputs: [],
    },
    {
      stateMutability: 'view',
      type: 'function',
      inputs: [
        { name: 'collateralType', internalType: 'address', type: 'address' },
      ],
      name: 'getCollateralConfiguration',
      outputs: [
        {
          name: '',
          internalType: 'struct CollateralConfiguration.Data',
          type: 'tuple',
          components: [
            { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
            {
              name: 'issuanceRatioD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            {
              name: 'liquidationRatioD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            {
              name: 'liquidationRewardD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
            { name: 'tokenAddress', internalType: 'address', type: 'address' },
            {
              name: 'minDelegationD18',
              internalType: 'uint256',
              type: 'uint256',
            },
          ],
        },
      ],
    },
    {
      stateMutability: 'view',
      type: 'function',
      inputs: [{ name: 'hideDisabled', internalType: 'bool', type: 'bool' }],
      name: 'getCollateralConfigurations',
      outputs: [
        {
          name: '',
          internalType: 'struct CollateralConfiguration.Data[]',
          type: 'tuple[]',
          components: [
            { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
            {
              name: 'issuanceRatioD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            {
              name: 'liquidationRatioD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            {
              name: 'liquidationRewardD18',
              internalType: 'uint256',
              type: 'uint256',
            },
            { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
            { name: 'tokenAddress', internalType: 'address', type: 'address' },
            {
              name: 'minDelegationD18',
              internalType: 'uint256',
              type: 'uint256',
            },
          ],
        },
      ],
    },
    {
      stateMutability: 'view',
      type: 'function',
      inputs: [
        { name: 'collateralType', internalType: 'address', type: 'address' },
      ],
      name: 'getCollateralPrice',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
  ] as const

export const deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress =
  '0x87d5F5ff6047D97AFBFe5F756215E1083B9C3d49' as const

export const deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonConfig =
  {
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
  } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/CollateralModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixCollateralModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'currentTime', internalType: 'uint256', type: 'uint256' },
      { name: 'requiredTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'AccountActivityTimeoutPending',
  },
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'CollateralNotFound' },
  {
    type: 'error',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'FailedTransfer',
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'InsufficientAccountCollateral',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint64' },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  {
    type: 'error',
    inputs: [
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'PrecisionLost',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockExpired',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Deposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Withdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cleanExpiredLocks',
    outputs: [{ name: 'cleared', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'expireTimestamp', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'createLock',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'deposit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountAvailableCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountCollateral',
    outputs: [
      { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
      { name: 'totalAssigned', internalType: 'uint256', type: 'uint256' },
      { name: 'totalLocked', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getLocks',
    outputs: [
      {
        name: 'locks',
        internalType: 'struct CollateralLock.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'amountD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'lockExpirationTime',
            internalType: 'uint64',
            type: 'uint64',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdraw',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixCollateralModuleJsonAddress =
  '0xB79aA53f2c7a5aa252c5006EbFA6055f67aA167f' as const

export const deploymentsSpotMarketSynthetixCollateralModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/CoreProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixCoreProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'allowAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagAllowAllSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'deniers',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
    ],
    name: 'FeatureFlagDeniersReset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'denyAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagDenyAllSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'addToFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDeniers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowlist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagDenyAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'isFeatureAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'removeFromFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'deniers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'setDeniers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagAllowAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'denyAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagDenyAll',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'permission', internalType: 'bytes32', type: 'bytes32' }],
    name: 'InvalidPermission',
  },
  {
    type: 'error',
    inputs: [{ name: 'origin', internalType: 'address', type: 'address' }],
    name: 'OnlyAccountTokenProxy',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionNotGranted',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AccountCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionRevoked',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedAccountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'createAccount',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountLastInteraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountPermissions',
    outputs: [
      {
        name: 'accountPerms',
        internalType: 'struct IAccountModule.AccountPermissions[]',
        type: 'tuple[]',
        components: [
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'permissions', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAccountTokenAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'grantPermission',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'hasPermission',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'isAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'notifyAccountTransfer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'renouncePermission',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'revokePermission',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint256', type: 'uint256' },
      { name: 'poolId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotFundedByPool',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'updatedDebt',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
    ],
    name: 'DebtAssociated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'associateDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'currentTime', internalType: 'uint256', type: 'uint256' },
      { name: 'requiredTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'AccountActivityTimeoutPending',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'CollateralNotFound' },
  {
    type: 'error',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'FailedTransfer',
  },
  {
    type: 'error',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'InsufficientAccountCollateral',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint64' },
  {
    type: 'error',
    inputs: [
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'PrecisionLost',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockExpired',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Deposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Withdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cleanExpiredLocks',
    outputs: [{ name: 'cleared', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'expireTimestamp', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'createLock',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'deposit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountAvailableCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountCollateral',
    outputs: [
      { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
      { name: 'totalAssigned', internalType: 'uint256', type: 'uint256' },
      { name: 'totalLocked', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getLocks',
    outputs: [
      {
        name: 'locks',
        internalType: 'struct CollateralLock.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'amountD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'lockExpirationTime',
            internalType: 'uint64',
            type: 'uint64',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdraw',
    outputs: [],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
        indexed: false,
      },
    ],
    name: 'CollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
    name: 'configureCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'hideDisabled', internalType: 'bool', type: 'bool' }],
    name: 'getCollateralConfigurations',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    type: 'error',
    inputs: [{ name: 'currentDebt', internalType: 'int256', type: 'int256' }],
    name: 'InsufficientDebt',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdBurned',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdMinted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintUsd',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'CannotScaleEmptyMapping' },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      { name: 'currentCRatio', internalType: 'uint256', type: 'uint256' },
      { name: 'cratio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IneligibleForLiquidation',
  },
  { type: 'error', inputs: [], name: 'InsufficientMappedAmount' },
  { type: 'error', inputs: [], name: 'MustBeVaultLiquidated' },
  { type: 'error', inputs: [], name: 'OverflowInt128ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Liquidation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'VaultLiquidation',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isPositionLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isVaultLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
    ],
    name: 'liquidate',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
      { name: 'maxUsd', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'liquidateVault',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToDeposit',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralDepositable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToWithdraw',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralWithdrawable',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralWithdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'systemAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MaximumMarketCollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'configureMaximumMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMarketCollateralAmount',
    outputs: [
      { name: 'collateralAmountD18', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateralValue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMaximumMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketCollateral',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'IncorrectMarketInterface',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotEnoughLiquidity',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdWithdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'maxIter', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'distributeDebtToPools',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketDebtPerShare',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketNetIssuance',
    outputs: [{ name: '', internalType: 'int128', type: 'int128' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketReportedDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketTotalDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getWithdrawableMarketUsd',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'isMarketCapacityLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'registerMarket',
    outputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PreferredPoolSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'addApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getApprovedPools',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPreferredPool',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'removeApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'setPreferredPool',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint256', type: 'uint256' }],
    name: 'CapacityLocked',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolAlreadyExists',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'markets',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolConfigurationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      { name: 'name', internalType: 'string', type: 'string', indexed: false },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNameUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRenounced',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'nominatedOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnershipAccepted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'acceptPoolOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedPoolId', internalType: 'uint128', type: 'uint128' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
    name: 'createPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMinLiquidityRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getNominatedPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolName',
    outputs: [{ name: 'poolName', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'nominatedOwner', internalType: 'address', type: 'address' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'nominatePoolOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'renouncePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'revokePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'minLiquidityRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMinLiquidityRatio',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'newMarketConfigurations',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
    name: 'setPoolConfiguration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'name', internalType: 'string', type: 'string' },
    ],
    name: 'setPoolName',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint32' },
  { type: 'error', inputs: [], name: 'OverflowUint32ToInt32' },
  { type: 'error', inputs: [], name: 'OverflowUint64ToInt64' },
  { type: 'error', inputs: [], name: 'RewardDistributorNotFound' },
  {
    type: 'error',
    inputs: [{ name: 'distributor', internalType: 'address', type: 'address' }],
    name: 'RewardUnavailable',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsClaimed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'start',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'duration',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsDistributed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRemoved',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'claimRewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'start', internalType: 'uint64', type: 'uint64' },
      { name: 'duration', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'distributeRewards',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'getRewardRate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'registerRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'removeRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'updateRewards',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'address[]', type: 'address[]' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'oracleManagerAddress',
        internalType: 'address',
        type: 'address',
      },
    ],
    name: 'configureOracleManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'k', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getConfig',
    outputs: [{ name: 'v', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ccipSend', internalType: 'address', type: 'address' },
      { name: 'ccipReceive', internalType: 'address', type: 'address' },
      { name: 'ccipTokenPool', internalType: 'address', type: 'address' },
    ],
    name: 'registerCcip',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'k', internalType: 'bytes32', type: 'bytes32' },
      { name: 'v', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setConfig',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'minDelegation', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientDelegation',
  },
  { type: 'error', inputs: [], name: 'InvalidCollateralAmount' },
  {
    type: 'error',
    inputs: [{ name: 'leverage', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidLeverage',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'leverage',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'DelegationUpdated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'newCollateralAmountD18',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'leverage', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'delegateCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPosition',
    outputs: [
      { name: 'collateralAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      {
        name: 'collateralizationRatio',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
] as const

export const deploymentsSpotMarketSynthetixCoreProxyJsonAddress =
  '0x381aeF01aB853657163ccbBFC1A993D49a77307c' as const

export const deploymentsSpotMarketSynthetixCoreProxyJsonConfig = {
  address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
  abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/CoreRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixCoreRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'allowAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagAllowAllSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'deniers',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
    ],
    name: 'FeatureFlagDeniersReset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'denyAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagDenyAllSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'addToFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDeniers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowlist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagDenyAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'isFeatureAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'removeFromFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'deniers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'setDeniers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagAllowAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'denyAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagDenyAll',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'permission', internalType: 'bytes32', type: 'bytes32' }],
    name: 'InvalidPermission',
  },
  {
    type: 'error',
    inputs: [{ name: 'origin', internalType: 'address', type: 'address' }],
    name: 'OnlyAccountTokenProxy',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionNotGranted',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AccountCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionRevoked',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedAccountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'createAccount',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountLastInteraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountPermissions',
    outputs: [
      {
        name: 'accountPerms',
        internalType: 'struct IAccountModule.AccountPermissions[]',
        type: 'tuple[]',
        components: [
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'permissions', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAccountTokenAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'grantPermission',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'hasPermission',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'isAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'notifyAccountTransfer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'renouncePermission',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'revokePermission',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint256', type: 'uint256' },
      { name: 'poolId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotFundedByPool',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'updatedDebt',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
    ],
    name: 'DebtAssociated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'associateDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'currentTime', internalType: 'uint256', type: 'uint256' },
      { name: 'requiredTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'AccountActivityTimeoutPending',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'CollateralNotFound' },
  {
    type: 'error',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'FailedTransfer',
  },
  {
    type: 'error',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'InsufficientAccountCollateral',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint64' },
  {
    type: 'error',
    inputs: [
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'PrecisionLost',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockExpired',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Deposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Withdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cleanExpiredLocks',
    outputs: [{ name: 'cleared', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'expireTimestamp', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'createLock',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'deposit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountAvailableCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountCollateral',
    outputs: [
      { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
      { name: 'totalAssigned', internalType: 'uint256', type: 'uint256' },
      { name: 'totalLocked', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getLocks',
    outputs: [
      {
        name: 'locks',
        internalType: 'struct CollateralLock.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'amountD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'lockExpirationTime',
            internalType: 'uint64',
            type: 'uint64',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdraw',
    outputs: [],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
        indexed: false,
      },
    ],
    name: 'CollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
    name: 'configureCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'hideDisabled', internalType: 'bool', type: 'bool' }],
    name: 'getCollateralConfigurations',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    type: 'error',
    inputs: [{ name: 'currentDebt', internalType: 'int256', type: 'int256' }],
    name: 'InsufficientDebt',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdBurned',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdMinted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintUsd',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'CannotScaleEmptyMapping' },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      { name: 'currentCRatio', internalType: 'uint256', type: 'uint256' },
      { name: 'cratio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IneligibleForLiquidation',
  },
  { type: 'error', inputs: [], name: 'InsufficientMappedAmount' },
  { type: 'error', inputs: [], name: 'MustBeVaultLiquidated' },
  { type: 'error', inputs: [], name: 'OverflowInt128ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Liquidation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'VaultLiquidation',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isPositionLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isVaultLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
    ],
    name: 'liquidate',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
      { name: 'maxUsd', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'liquidateVault',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToDeposit',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralDepositable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToWithdraw',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralWithdrawable',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralWithdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'systemAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MaximumMarketCollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'configureMaximumMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMarketCollateralAmount',
    outputs: [
      { name: 'collateralAmountD18', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateralValue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMaximumMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketCollateral',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'IncorrectMarketInterface',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotEnoughLiquidity',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdWithdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'maxIter', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'distributeDebtToPools',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketDebtPerShare',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketNetIssuance',
    outputs: [{ name: '', internalType: 'int128', type: 'int128' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketReportedDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketTotalDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getWithdrawableMarketUsd',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'isMarketCapacityLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'registerMarket',
    outputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PreferredPoolSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'addApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getApprovedPools',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPreferredPool',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'removeApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'setPreferredPool',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint256', type: 'uint256' }],
    name: 'CapacityLocked',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolAlreadyExists',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'markets',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolConfigurationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      { name: 'name', internalType: 'string', type: 'string', indexed: false },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNameUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRenounced',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'nominatedOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnershipAccepted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'acceptPoolOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedPoolId', internalType: 'uint128', type: 'uint128' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
    name: 'createPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMinLiquidityRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getNominatedPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolName',
    outputs: [{ name: 'poolName', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'nominatedOwner', internalType: 'address', type: 'address' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'nominatePoolOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'renouncePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'revokePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'minLiquidityRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMinLiquidityRatio',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'newMarketConfigurations',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
    name: 'setPoolConfiguration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'name', internalType: 'string', type: 'string' },
    ],
    name: 'setPoolName',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint32' },
  { type: 'error', inputs: [], name: 'OverflowUint32ToInt32' },
  { type: 'error', inputs: [], name: 'OverflowUint64ToInt64' },
  { type: 'error', inputs: [], name: 'RewardDistributorNotFound' },
  {
    type: 'error',
    inputs: [{ name: 'distributor', internalType: 'address', type: 'address' }],
    name: 'RewardUnavailable',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsClaimed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'start',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'duration',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsDistributed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRemoved',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'claimRewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'start', internalType: 'uint64', type: 'uint64' },
      { name: 'duration', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'distributeRewards',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'getRewardRate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'registerRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'removeRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'updateRewards',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'address[]', type: 'address[]' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'oracleManagerAddress',
        internalType: 'address',
        type: 'address',
      },
    ],
    name: 'configureOracleManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'k', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getConfig',
    outputs: [{ name: 'v', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ccipSend', internalType: 'address', type: 'address' },
      { name: 'ccipReceive', internalType: 'address', type: 'address' },
      { name: 'ccipTokenPool', internalType: 'address', type: 'address' },
    ],
    name: 'registerCcip',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'k', internalType: 'bytes32', type: 'bytes32' },
      { name: 'v', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setConfig',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'minDelegation', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientDelegation',
  },
  { type: 'error', inputs: [], name: 'InvalidCollateralAmount' },
  {
    type: 'error',
    inputs: [{ name: 'leverage', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidLeverage',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'leverage',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'DelegationUpdated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'newCollateralAmountD18',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'leverage', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'delegateCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPosition',
    outputs: [
      { name: 'collateralAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      {
        name: 'collateralizationRatio',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
] as const

export const deploymentsSpotMarketSynthetixCoreRouterJsonAddress =
  '0xE88ff9BD5c3904b049978557EEa0e6cf339E7470' as const

export const deploymentsSpotMarketSynthetixCoreRouterJsonConfig = {
  address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
  abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/FeatureFlagModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'allowAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagAllowAllSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'deniers',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
    ],
    name: 'FeatureFlagDeniersReset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'denyAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagDenyAllSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'addToFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDeniers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowlist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagDenyAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'isFeatureAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'removeFromFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'deniers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'setDeniers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagAllowAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'denyAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagDenyAll',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress =
  '0x002AB3794418cCbFE9bBAad708C3Fa30B94e0e0F' as const

export const deploymentsSpotMarketSynthetixFeatureFlagModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/InitialCoreProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress =
  '0x381aeF01aB853657163ccbBFC1A993D49a77307c' as const

export const deploymentsSpotMarketSynthetixInitialCoreProxyJsonConfig = {
  address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
  abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/InitialModuleBundle.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress =
  '0x2F4a58770bDaBFef1f3Cee0eF6Ad05Db4F4d954E' as const

export const deploymentsSpotMarketSynthetixInitialModuleBundleJsonConfig = {
  address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
  abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/IssueUSDModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [{ name: 'currentDebt', internalType: 'int256', type: 'int256' }],
    name: 'InsufficientDebt',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdBurned',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdMinted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintUsd',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress =
  '0x7234e022faf3d1Bf8f7bC615f6265fAf37DFF1a6' as const

export const deploymentsSpotMarketSynthetixIssueUsdModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/LiquidationModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixLiquidationModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  { type: 'error', inputs: [], name: 'CannotScaleEmptyMapping' },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      { name: 'currentCRatio', internalType: 'uint256', type: 'uint256' },
      { name: 'cratio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IneligibleForLiquidation',
  },
  { type: 'error', inputs: [], name: 'InsufficientMappedAmount' },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  { type: 'error', inputs: [], name: 'MustBeVaultLiquidated' },
  { type: 'error', inputs: [], name: 'OverflowInt128ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Liquidation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'VaultLiquidation',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isPositionLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isVaultLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
    ],
    name: 'liquidate',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
      { name: 'maxUsd', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'liquidateVault',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
] as const

export const deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress =
  '0x4393b5a65653c2f721F2c376280358286108072A' as const

export const deploymentsSpotMarketSynthetixLiquidationModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/MarketCollateralModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI = [
  { type: 'error', inputs: [], name: 'CollateralNotFound' },
  {
    type: 'error',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'FailedTransfer',
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToDeposit',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralDepositable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToWithdraw',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralWithdrawable',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  {
    type: 'error',
    inputs: [
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'PrecisionLost',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralWithdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'systemAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MaximumMarketCollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'configureMaximumMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMarketCollateralAmount',
    outputs: [
      { name: 'collateralAmountD18', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateralValue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMaximumMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketCollateral',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress =
  '0xF8A506344B0b921F014C3130F7aF1fe60A134dB4' as const

export const deploymentsSpotMarketSynthetixMarketCollateralModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/MarketManagerModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI = [
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'IncorrectMarketInterface',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotEnoughLiquidity',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdWithdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'maxIter', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'distributeDebtToPools',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketDebtPerShare',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketNetIssuance',
    outputs: [{ name: '', internalType: 'int128', type: 'int128' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketReportedDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketTotalDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getWithdrawableMarketUsd',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'isMarketCapacityLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'registerMarket',
    outputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketUsd',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress =
  '0xdED6822a6ebcBeA1A127d3c84aF1F16e9740c3F1' as const

export const deploymentsSpotMarketSynthetixMarketManagerModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/MulticallModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixMulticallModuleJsonABI = [
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],
  },
] as const

export const deploymentsSpotMarketSynthetixMulticallModuleJsonAddress =
  '0xb61926f01cAD38f51236F861dABcC59626F2078d' as const

export const deploymentsSpotMarketSynthetixMulticallModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixMulticallModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/PoolConfigurationModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PreferredPoolSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'addApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getApprovedPools',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPreferredPool',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'removeApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'setPreferredPool',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress =
  '0x63Fd8443047e2e70eed82a0553591A83d90d0AB6' as const

export const deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/PoolModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixPoolModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint256', type: 'uint256' }],
    name: 'CapacityLocked',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolAlreadyExists',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'markets',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolConfigurationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      { name: 'name', internalType: 'string', type: 'string', indexed: false },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNameUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRenounced',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'nominatedOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnershipAccepted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'acceptPoolOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedPoolId', internalType: 'uint128', type: 'uint128' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
    name: 'createPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMinLiquidityRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getNominatedPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolName',
    outputs: [{ name: 'poolName', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'nominatedOwner', internalType: 'address', type: 'address' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'nominatePoolOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'renouncePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'revokePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'minLiquidityRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMinLiquidityRatio',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'newMarketConfigurations',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
    name: 'setPoolConfiguration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'name', internalType: 'string', type: 'string' },
    ],
    name: 'setPoolName',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixPoolModuleJsonAddress =
  '0xe859F326dba6dFbc54395083C2D5532AC32E39dc' as const

export const deploymentsSpotMarketSynthetixPoolModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/RewardsManagerModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint32' },
  { type: 'error', inputs: [], name: 'OverflowUint32ToInt32' },
  { type: 'error', inputs: [], name: 'OverflowUint64ToInt64' },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  { type: 'error', inputs: [], name: 'RewardDistributorNotFound' },
  {
    type: 'error',
    inputs: [{ name: 'distributor', internalType: 'address', type: 'address' }],
    name: 'RewardUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsClaimed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'start',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'duration',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsDistributed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRemoved',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'claimRewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'start', internalType: 'uint64', type: 'uint64' },
      { name: 'duration', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'distributeRewards',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'getRewardRate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'registerRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'removeRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'updateRewards',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'address[]', type: 'address[]' },
    ],
  },
] as const

export const deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress =
  '0x15e396C738468Fc1215F3a2f650FaC57DBEE9d99' as const

export const deploymentsSpotMarketSynthetixRewardsManagerModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/USDProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixUsdProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientBalance',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnWithAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'tokenDecimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferCrossChain',
    outputs: [{ name: 'feesPaid', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

export const deploymentsSpotMarketSynthetixUsdProxyJsonAddress =
  '0x629673e90e428069AeB328DE4EF2040a7C22f723' as const

export const deploymentsSpotMarketSynthetixUsdProxyJsonConfig = {
  address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
  abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/USDRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixUsdRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientBalance',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnWithAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'tokenDecimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferCrossChain',
    outputs: [{ name: 'feesPaid', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

export const deploymentsSpotMarketSynthetixUsdRouterJsonAddress =
  '0x963ac8B38B40CBfebc3258f848eA5e41090F983b' as const

export const deploymentsSpotMarketSynthetixUsdRouterJsonConfig = {
  address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
  abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/USDTokenModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI = [
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientBalance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnWithAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'tokenDecimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferCrossChain',
    outputs: [{ name: 'feesPaid', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

export const deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress =
  '0xb47e447A18C03EA2679753C3A5D18Aa8C57A3950' as const

export const deploymentsSpotMarketSynthetixUsdTokenModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/UtilsModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixUtilsModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'oracleManagerAddress',
        internalType: 'address',
        type: 'address',
      },
    ],
    name: 'configureOracleManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'k', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getConfig',
    outputs: [{ name: 'v', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ccipSend', internalType: 'address', type: 'address' },
      { name: 'ccipReceive', internalType: 'address', type: 'address' },
      { name: 'ccipTokenPool', internalType: 'address', type: 'address' },
    ],
    name: 'registerCcip',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'k', internalType: 'bytes32', type: 'bytes32' },
      { name: 'v', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setConfig',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixUtilsModuleJsonAddress =
  '0xF018Eea75874094A3a7Fb431AE3876A203046b50' as const

export const deploymentsSpotMarketSynthetixUtilsModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/VaultModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixVaultModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint256', type: 'uint256' }],
    name: 'CapacityLocked',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'requestedAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAccountCollateral',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [
      { name: 'minDelegation', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientDelegation',
  },
  { type: 'error', inputs: [], name: 'InvalidCollateralAmount' },
  {
    type: 'error',
    inputs: [{ name: 'leverage', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidLeverage',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  { type: 'error', inputs: [], name: 'OverflowInt128ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint32' },
  { type: 'error', inputs: [], name: 'OverflowUint32ToInt32' },
  { type: 'error', inputs: [], name: 'OverflowUint64ToInt64' },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  { type: 'error', inputs: [], name: 'RewardDistributorNotFound' },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'leverage',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'DelegationUpdated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'newCollateralAmountD18',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'leverage', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'delegateCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPosition',
    outputs: [
      { name: 'collateralAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      {
        name: 'collateralizationRatio',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
] as const

export const deploymentsSpotMarketSynthetixVaultModuleJsonAddress =
  '0xb42F56697f82007F383928b66AFC20B5C20744bB' as const

export const deploymentsSpotMarketSynthetixVaultModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/oracle_manager/CoreModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress =
  '0x606ACC428283663F0EFA30c75f39912BdfF49364' as const

export const deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/oracle_manager/InitialProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress =
  '0xc0958BD10cB079b7A6bfeC7Fb695F75845830E5f' as const

export const deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonConfig =
  {
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
  } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/oracle_manager/NodeModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'deviation', internalType: 'int256', type: 'int256' }],
    name: 'DeviationToleranceExceeded',
  },
  {
    type: 'error',
    inputs: [
      { name: 'externalNode', internalType: 'address', type: 'address' },
    ],
    name: 'IncorrectExternalNodeInterface',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
    name: 'InvalidNodeDefinition',
  },
  {
    type: 'error',
    inputs: [{ name: 'price', internalType: 'int256', type: 'int256' }],
    name: 'InvalidPrice',
  },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'NodeNotRegistered',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowInt56ToInt24' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint160' },
  { type: 'error', inputs: [], name: 'OverflowUint56ToInt56' },
  { type: 'error', inputs: [], name: 'StalenessToleranceExceeded' },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'UnprocessableNode',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'operation',
        internalType: 'enum ReducerNode.Operations',
        type: 'uint8',
      },
    ],
    name: 'UnsupportedOperation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'nodeId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
        indexed: false,
      },
      {
        name: 'parameters',
        internalType: 'bytes',
        type: 'bytes',
        indexed: false,
      },
      {
        name: 'parents',
        internalType: 'bytes32[]',
        type: 'bytes32[]',
        indexed: false,
      },
    ],
    name: 'NodeRegistered',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getNode',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'getNodeId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'process',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeOutput.Data',
        type: 'tuple',
        components: [
          { name: 'price', internalType: 'int256', type: 'int256' },
          { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
          {
            name: '__slotAvailableForFutureUse1',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: '__slotAvailableForFutureUse2',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'registerNode',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
] as const

export const deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress =
  '0x515500abb622a5eF63A48313998087Dd4e9d4e72' as const

export const deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonConfig = {
  address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
  abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/oracle_manager/OracleRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'deviation', internalType: 'int256', type: 'int256' }],
    name: 'DeviationToleranceExceeded',
  },
  {
    type: 'error',
    inputs: [
      { name: 'externalNode', internalType: 'address', type: 'address' },
    ],
    name: 'IncorrectExternalNodeInterface',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
    name: 'InvalidNodeDefinition',
  },
  {
    type: 'error',
    inputs: [{ name: 'price', internalType: 'int256', type: 'int256' }],
    name: 'InvalidPrice',
  },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'NodeNotRegistered',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowInt56ToInt24' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint160' },
  { type: 'error', inputs: [], name: 'OverflowUint56ToInt56' },
  { type: 'error', inputs: [], name: 'StalenessToleranceExceeded' },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'UnprocessableNode',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'operation',
        internalType: 'enum ReducerNode.Operations',
        type: 'uint8',
      },
    ],
    name: 'UnsupportedOperation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'nodeId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
        indexed: false,
      },
      {
        name: 'parameters',
        internalType: 'bytes',
        type: 'bytes',
        indexed: false,
      },
      {
        name: 'parents',
        internalType: 'bytes32[]',
        type: 'bytes32[]',
        indexed: false,
      },
    ],
    name: 'NodeRegistered',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getNode',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'getNodeId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'process',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeOutput.Data',
        type: 'tuple',
        components: [
          { name: 'price', internalType: 'int256', type: 'int256' },
          { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
          {
            name: '__slotAvailableForFutureUse1',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: '__slotAvailableForFutureUse2',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'registerNode',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
] as const

export const deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress =
  '0x6D9c23605a377Fa94717229A5CE53fFaE903a704' as const

export const deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonConfig =
  {
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
  } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/spotMarket/synthetix/oracle_manager/Proxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'deviation', internalType: 'int256', type: 'int256' }],
    name: 'DeviationToleranceExceeded',
  },
  {
    type: 'error',
    inputs: [
      { name: 'externalNode', internalType: 'address', type: 'address' },
    ],
    name: 'IncorrectExternalNodeInterface',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
    name: 'InvalidNodeDefinition',
  },
  {
    type: 'error',
    inputs: [{ name: 'price', internalType: 'int256', type: 'int256' }],
    name: 'InvalidPrice',
  },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'NodeNotRegistered',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowInt56ToInt24' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint160' },
  { type: 'error', inputs: [], name: 'OverflowUint56ToInt56' },
  { type: 'error', inputs: [], name: 'StalenessToleranceExceeded' },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'UnprocessableNode',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'operation',
        internalType: 'enum ReducerNode.Operations',
        type: 'uint8',
      },
    ],
    name: 'UnsupportedOperation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'nodeId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
        indexed: false,
      },
      {
        name: 'parameters',
        internalType: 'bytes',
        type: 'bytes',
        indexed: false,
      },
      {
        name: 'parents',
        internalType: 'bytes32[]',
        type: 'bytes32[]',
        indexed: false,
      },
    ],
    name: 'NodeRegistered',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getNode',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'getNodeId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'process',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeOutput.Data',
        type: 'tuple',
        components: [
          { name: 'price', internalType: 'int256', type: 'int256' },
          { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
          {
            name: '__slotAvailableForFutureUse1',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: '__slotAvailableForFutureUse2',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'registerNode',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
] as const

export const deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress =
  '0xc0958BD10cB079b7A6bfeC7Fb695F75845830E5f' as const

export const deploymentsSpotMarketSynthetixOracleManagerProxyJsonConfig = {
  address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
  abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/AccountModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixAccountModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'permission', internalType: 'bytes32', type: 'bytes32' }],
    name: 'InvalidPermission',
  },
  {
    type: 'error',
    inputs: [{ name: 'origin', internalType: 'address', type: 'address' }],
    name: 'OnlyAccountTokenProxy',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionNotGranted',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AccountCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionRevoked',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedAccountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'createAccount',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountLastInteraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountPermissions',
    outputs: [
      {
        name: 'accountPerms',
        internalType: 'struct IAccountModule.AccountPermissions[]',
        type: 'tuple[]',
        components: [
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'permissions', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAccountTokenAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'grantPermission',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'hasPermission',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'isAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'notifyAccountTransfer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'renouncePermission',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'revokePermission',
    outputs: [],
  },
] as const

export const deploymentsSynthetixAccountModuleJsonAddress =
  '0x90C404c29BcCdA60502740AC27b0fc6C6381F665' as const

export const deploymentsSynthetixAccountModuleJsonConfig = {
  address: deploymentsSynthetixAccountModuleJsonAddress,
  abi: deploymentsSynthetixAccountModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/AccountProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixAccountProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'CannotSelfApprove',
  },
  {
    type: 'error',
    inputs: [
      { name: 'requestedIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'length', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IndexOverrun',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidOwner',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidTransferRecipient',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenAlreadyMinted',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenDoesNotExist',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'holder', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'holder', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeMint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

export const deploymentsSynthetixAccountProxyJsonAddress =
  '0xE06fE85b65E0110f78638022FA9AD58c6b6c69bF' as const

export const deploymentsSynthetixAccountProxyJsonConfig = {
  address: deploymentsSynthetixAccountProxyJsonAddress,
  abi: deploymentsSynthetixAccountProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/AccountRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixAccountRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'CannotSelfApprove',
  },
  {
    type: 'error',
    inputs: [
      { name: 'requestedIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'length', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IndexOverrun',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidOwner',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidTransferRecipient',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenAlreadyMinted',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenDoesNotExist',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'holder', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'holder', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeMint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

export const deploymentsSynthetixAccountRouterJsonAddress =
  '0xF64A1E2230402b8FD3Bc65FFa8409f9FfFa981C6' as const

export const deploymentsSynthetixAccountRouterJsonConfig = {
  address: deploymentsSynthetixAccountRouterJsonAddress,
  abi: deploymentsSynthetixAccountRouterJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/AccountTokenModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixAccountTokenModuleJsonABI = [
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'CannotSelfApprove',
  },
  {
    type: 'error',
    inputs: [
      { name: 'requestedIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'length', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IndexOverrun',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidOwner',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'InvalidTransferRecipient',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenAlreadyMinted',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenDoesNotExist',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'holder', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'holder', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeMint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

export const deploymentsSynthetixAccountTokenModuleJsonAddress =
  '0x951F26ef562926b9e869fA9e7330c0552443C72d' as const

export const deploymentsSynthetixAccountTokenModuleJsonConfig = {
  address: deploymentsSynthetixAccountTokenModuleJsonAddress,
  abi: deploymentsSynthetixAccountTokenModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/AssociateDebtModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixAssociateDebtModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint256', type: 'uint256' },
      { name: 'poolId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotFundedByPool',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'updatedDebt',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
    ],
    name: 'DebtAssociated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'associateDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
] as const

export const deploymentsSynthetixAssociateDebtModuleJsonAddress =
  '0x2f3DADC43AC4aF1dF2A3abE527FBa90Aae7B7Ec8' as const

export const deploymentsSynthetixAssociateDebtModuleJsonConfig = {
  address: deploymentsSynthetixAssociateDebtModuleJsonAddress,
  abi: deploymentsSynthetixAssociateDebtModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/AssociatedSystemsModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixAssociatedSystemsModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
] as const

export const deploymentsSynthetixAssociatedSystemsModuleJsonAddress =
  '0x12A315fc9EeE2C86FDAfeD19f68110C501c63fCd' as const

export const deploymentsSynthetixAssociatedSystemsModuleJsonConfig = {
  address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
  abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/CollateralConfigurationModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixCollateralConfigurationModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
        indexed: false,
      },
    ],
    name: 'CollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
    name: 'configureCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'hideDisabled', internalType: 'bool', type: 'bool' }],
    name: 'getCollateralConfigurations',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

export const deploymentsSynthetixCollateralConfigurationModuleJsonAddress =
  '0x87d5F5ff6047D97AFBFe5F756215E1083B9C3d49' as const

export const deploymentsSynthetixCollateralConfigurationModuleJsonConfig = {
  address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
  abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/CollateralModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixCollateralModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'currentTime', internalType: 'uint256', type: 'uint256' },
      { name: 'requiredTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'AccountActivityTimeoutPending',
  },
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'CollateralNotFound' },
  {
    type: 'error',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'FailedTransfer',
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'InsufficientAccountCollateral',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint64' },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  {
    type: 'error',
    inputs: [
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'PrecisionLost',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockExpired',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Deposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Withdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cleanExpiredLocks',
    outputs: [{ name: 'cleared', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'expireTimestamp', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'createLock',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'deposit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountAvailableCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountCollateral',
    outputs: [
      { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
      { name: 'totalAssigned', internalType: 'uint256', type: 'uint256' },
      { name: 'totalLocked', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getLocks',
    outputs: [
      {
        name: 'locks',
        internalType: 'struct CollateralLock.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'amountD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'lockExpirationTime',
            internalType: 'uint64',
            type: 'uint64',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdraw',
    outputs: [],
  },
] as const

export const deploymentsSynthetixCollateralModuleJsonAddress =
  '0xB79aA53f2c7a5aa252c5006EbFA6055f67aA167f' as const

export const deploymentsSynthetixCollateralModuleJsonConfig = {
  address: deploymentsSynthetixCollateralModuleJsonAddress,
  abi: deploymentsSynthetixCollateralModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/CoreProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixCoreProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'allowAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagAllowAllSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'deniers',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
    ],
    name: 'FeatureFlagDeniersReset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'denyAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagDenyAllSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'addToFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDeniers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowlist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagDenyAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'isFeatureAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'removeFromFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'deniers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'setDeniers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagAllowAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'denyAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagDenyAll',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'permission', internalType: 'bytes32', type: 'bytes32' }],
    name: 'InvalidPermission',
  },
  {
    type: 'error',
    inputs: [{ name: 'origin', internalType: 'address', type: 'address' }],
    name: 'OnlyAccountTokenProxy',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionNotGranted',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AccountCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionRevoked',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedAccountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'createAccount',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountLastInteraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountPermissions',
    outputs: [
      {
        name: 'accountPerms',
        internalType: 'struct IAccountModule.AccountPermissions[]',
        type: 'tuple[]',
        components: [
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'permissions', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAccountTokenAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'grantPermission',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'hasPermission',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'isAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'notifyAccountTransfer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'renouncePermission',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'revokePermission',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint256', type: 'uint256' },
      { name: 'poolId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotFundedByPool',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'updatedDebt',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
    ],
    name: 'DebtAssociated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'associateDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'currentTime', internalType: 'uint256', type: 'uint256' },
      { name: 'requiredTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'AccountActivityTimeoutPending',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'CollateralNotFound' },
  {
    type: 'error',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'FailedTransfer',
  },
  {
    type: 'error',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'InsufficientAccountCollateral',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint64' },
  {
    type: 'error',
    inputs: [
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'PrecisionLost',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockExpired',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Deposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Withdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cleanExpiredLocks',
    outputs: [{ name: 'cleared', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'expireTimestamp', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'createLock',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'deposit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountAvailableCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountCollateral',
    outputs: [
      { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
      { name: 'totalAssigned', internalType: 'uint256', type: 'uint256' },
      { name: 'totalLocked', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getLocks',
    outputs: [
      {
        name: 'locks',
        internalType: 'struct CollateralLock.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'amountD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'lockExpirationTime',
            internalType: 'uint64',
            type: 'uint64',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdraw',
    outputs: [],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
        indexed: false,
      },
    ],
    name: 'CollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
    name: 'configureCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'hideDisabled', internalType: 'bool', type: 'bool' }],
    name: 'getCollateralConfigurations',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    type: 'error',
    inputs: [{ name: 'currentDebt', internalType: 'int256', type: 'int256' }],
    name: 'InsufficientDebt',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdBurned',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdMinted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintUsd',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'CannotScaleEmptyMapping' },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      { name: 'currentCRatio', internalType: 'uint256', type: 'uint256' },
      { name: 'cratio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IneligibleForLiquidation',
  },
  { type: 'error', inputs: [], name: 'InsufficientMappedAmount' },
  { type: 'error', inputs: [], name: 'MustBeVaultLiquidated' },
  { type: 'error', inputs: [], name: 'OverflowInt128ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Liquidation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'VaultLiquidation',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isPositionLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isVaultLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
    ],
    name: 'liquidate',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
      { name: 'maxUsd', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'liquidateVault',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToDeposit',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralDepositable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToWithdraw',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralWithdrawable',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralWithdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'systemAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MaximumMarketCollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'configureMaximumMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMarketCollateralAmount',
    outputs: [
      { name: 'collateralAmountD18', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateralValue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMaximumMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketCollateral',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'IncorrectMarketInterface',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotEnoughLiquidity',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdWithdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'maxIter', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'distributeDebtToPools',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketDebtPerShare',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketNetIssuance',
    outputs: [{ name: '', internalType: 'int128', type: 'int128' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketReportedDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketTotalDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getWithdrawableMarketUsd',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'isMarketCapacityLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'registerMarket',
    outputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PreferredPoolSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'addApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getApprovedPools',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPreferredPool',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'removeApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'setPreferredPool',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint256', type: 'uint256' }],
    name: 'CapacityLocked',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolAlreadyExists',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'markets',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolConfigurationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      { name: 'name', internalType: 'string', type: 'string', indexed: false },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNameUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRenounced',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'nominatedOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnershipAccepted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'acceptPoolOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedPoolId', internalType: 'uint128', type: 'uint128' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
    name: 'createPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMinLiquidityRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getNominatedPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolName',
    outputs: [{ name: 'poolName', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'nominatedOwner', internalType: 'address', type: 'address' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'nominatePoolOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'renouncePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'revokePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'minLiquidityRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMinLiquidityRatio',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'newMarketConfigurations',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
    name: 'setPoolConfiguration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'name', internalType: 'string', type: 'string' },
    ],
    name: 'setPoolName',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint32' },
  { type: 'error', inputs: [], name: 'OverflowUint32ToInt32' },
  { type: 'error', inputs: [], name: 'OverflowUint64ToInt64' },
  { type: 'error', inputs: [], name: 'RewardDistributorNotFound' },
  {
    type: 'error',
    inputs: [{ name: 'distributor', internalType: 'address', type: 'address' }],
    name: 'RewardUnavailable',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsClaimed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'start',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'duration',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsDistributed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRemoved',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'claimRewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'start', internalType: 'uint64', type: 'uint64' },
      { name: 'duration', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'distributeRewards',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'getRewardRate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'registerRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'removeRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'updateRewards',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'address[]', type: 'address[]' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'oracleManagerAddress',
        internalType: 'address',
        type: 'address',
      },
    ],
    name: 'configureOracleManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'k', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getConfig',
    outputs: [{ name: 'v', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ccipSend', internalType: 'address', type: 'address' },
      { name: 'ccipReceive', internalType: 'address', type: 'address' },
      { name: 'ccipTokenPool', internalType: 'address', type: 'address' },
    ],
    name: 'registerCcip',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'k', internalType: 'bytes32', type: 'bytes32' },
      { name: 'v', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setConfig',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'minDelegation', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientDelegation',
  },
  { type: 'error', inputs: [], name: 'InvalidCollateralAmount' },
  {
    type: 'error',
    inputs: [{ name: 'leverage', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidLeverage',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'leverage',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'DelegationUpdated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'newCollateralAmountD18',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'leverage', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'delegateCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPosition',
    outputs: [
      { name: 'collateralAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      {
        name: 'collateralizationRatio',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
] as const

export const deploymentsSynthetixCoreProxyJsonAddress =
  '0x381aeF01aB853657163ccbBFC1A993D49a77307c' as const

export const deploymentsSynthetixCoreProxyJsonConfig = {
  address: deploymentsSynthetixCoreProxyJsonAddress,
  abi: deploymentsSynthetixCoreProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/CoreRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixCoreRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'allowAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagAllowAllSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'deniers',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
    ],
    name: 'FeatureFlagDeniersReset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'denyAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagDenyAllSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'addToFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDeniers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowlist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagDenyAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'isFeatureAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'removeFromFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'deniers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'setDeniers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagAllowAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'denyAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagDenyAll',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'permission', internalType: 'bytes32', type: 'bytes32' }],
    name: 'InvalidPermission',
  },
  {
    type: 'error',
    inputs: [{ name: 'origin', internalType: 'address', type: 'address' }],
    name: 'OnlyAccountTokenProxy',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionNotGranted',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AccountCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'permission',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'PermissionRevoked',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedAccountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'createAccount',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountLastInteraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'getAccountPermissions',
    outputs: [
      {
        name: 'accountPerms',
        internalType: 'struct IAccountModule.AccountPermissions[]',
        type: 'tuple[]',
        components: [
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'permissions', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAccountTokenAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'grantPermission',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'hasPermission',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'isAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'notifyAccountTransfer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'renouncePermission',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'user', internalType: 'address', type: 'address' },
    ],
    name: 'revokePermission',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint256', type: 'uint256' },
      { name: 'poolId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotFundedByPool',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'updatedDebt',
        internalType: 'int256',
        type: 'int256',
        indexed: false,
      },
    ],
    name: 'DebtAssociated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'associateDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'currentTime', internalType: 'uint256', type: 'uint256' },
      { name: 'requiredTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'AccountActivityTimeoutPending',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'CollateralNotFound' },
  {
    type: 'error',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'FailedTransfer',
  },
  {
    type: 'error',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'InsufficientAccountCollateral',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint64' },
  {
    type: 'error',
    inputs: [
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'PrecisionLost',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'expireTimestamp',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'CollateralLockExpired',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Deposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Withdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cleanExpiredLocks',
    outputs: [{ name: 'cleared', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'expireTimestamp', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'createLock',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'deposit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountAvailableCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getAccountCollateral',
    outputs: [
      { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
      { name: 'totalAssigned', internalType: 'uint256', type: 'uint256' },
      { name: 'totalLocked', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'offset', internalType: 'uint256', type: 'uint256' },
      { name: 'count', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getLocks',
    outputs: [
      {
        name: 'locks',
        internalType: 'struct CollateralLock.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'amountD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'lockExpirationTime',
            internalType: 'uint64',
            type: 'uint64',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdraw',
    outputs: [],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
        indexed: false,
      },
    ],
    name: 'CollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'config',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
    name: 'configureCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data',
        type: 'tuple',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'hideDisabled', internalType: 'bool', type: 'bool' }],
    name: 'getCollateralConfigurations',
    outputs: [
      {
        name: '',
        internalType: 'struct CollateralConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'depositingEnabled', internalType: 'bool', type: 'bool' },
          {
            name: 'issuanceRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRatioD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: 'liquidationRewardD18',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'oracleNodeId', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tokenAddress', internalType: 'address', type: 'address' },
          {
            name: 'minDelegationD18',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getCollateralPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    type: 'error',
    inputs: [{ name: 'currentDebt', internalType: 'int256', type: 'int256' }],
    name: 'InsufficientDebt',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdBurned',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdMinted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintUsd',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'CannotScaleEmptyMapping' },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      { name: 'currentCRatio', internalType: 'uint256', type: 'uint256' },
      { name: 'cratio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IneligibleForLiquidation',
  },
  { type: 'error', inputs: [], name: 'InsufficientMappedAmount' },
  { type: 'error', inputs: [], name: 'MustBeVaultLiquidated' },
  { type: 'error', inputs: [], name: 'OverflowInt128ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Liquidation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'VaultLiquidation',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isPositionLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isVaultLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
    ],
    name: 'liquidate',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
      { name: 'maxUsd', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'liquidateVault',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToDeposit',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralDepositable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToWithdraw',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralWithdrawable',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralWithdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'systemAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MaximumMarketCollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'configureMaximumMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMarketCollateralAmount',
    outputs: [
      { name: 'collateralAmountD18', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateralValue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMaximumMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketCollateral',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'IncorrectMarketInterface',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotEnoughLiquidity',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdWithdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'maxIter', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'distributeDebtToPools',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketDebtPerShare',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketNetIssuance',
    outputs: [{ name: '', internalType: 'int128', type: 'int128' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketReportedDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketTotalDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getWithdrawableMarketUsd',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'isMarketCapacityLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'registerMarket',
    outputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PreferredPoolSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'addApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getApprovedPools',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPreferredPool',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'removeApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'setPreferredPool',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint256', type: 'uint256' }],
    name: 'CapacityLocked',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolAlreadyExists',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'markets',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolConfigurationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      { name: 'name', internalType: 'string', type: 'string', indexed: false },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNameUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRenounced',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'nominatedOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnershipAccepted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'acceptPoolOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedPoolId', internalType: 'uint128', type: 'uint128' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
    name: 'createPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMinLiquidityRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getNominatedPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolName',
    outputs: [{ name: 'poolName', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'nominatedOwner', internalType: 'address', type: 'address' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'nominatePoolOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'renouncePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'revokePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'minLiquidityRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMinLiquidityRatio',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'newMarketConfigurations',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
    name: 'setPoolConfiguration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'name', internalType: 'string', type: 'string' },
    ],
    name: 'setPoolName',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint32' },
  { type: 'error', inputs: [], name: 'OverflowUint32ToInt32' },
  { type: 'error', inputs: [], name: 'OverflowUint64ToInt64' },
  { type: 'error', inputs: [], name: 'RewardDistributorNotFound' },
  {
    type: 'error',
    inputs: [{ name: 'distributor', internalType: 'address', type: 'address' }],
    name: 'RewardUnavailable',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsClaimed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'start',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'duration',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsDistributed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRemoved',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'claimRewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'start', internalType: 'uint64', type: 'uint64' },
      { name: 'duration', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'distributeRewards',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'getRewardRate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'registerRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'removeRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'updateRewards',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'address[]', type: 'address[]' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'oracleManagerAddress',
        internalType: 'address',
        type: 'address',
      },
    ],
    name: 'configureOracleManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'k', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getConfig',
    outputs: [{ name: 'v', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ccipSend', internalType: 'address', type: 'address' },
      { name: 'ccipReceive', internalType: 'address', type: 'address' },
      { name: 'ccipTokenPool', internalType: 'address', type: 'address' },
    ],
    name: 'registerCcip',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'k', internalType: 'bytes32', type: 'bytes32' },
      { name: 'v', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setConfig',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'minDelegation', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientDelegation',
  },
  { type: 'error', inputs: [], name: 'InvalidCollateralAmount' },
  {
    type: 'error',
    inputs: [{ name: 'leverage', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidLeverage',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'leverage',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'DelegationUpdated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'newCollateralAmountD18',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'leverage', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'delegateCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPosition',
    outputs: [
      { name: 'collateralAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      {
        name: 'collateralizationRatio',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
] as const

export const deploymentsSynthetixCoreRouterJsonAddress =
  '0x32B9915eD9bC613559915931408AeD7904cab185' as const

export const deploymentsSynthetixCoreRouterJsonConfig = {
  address: deploymentsSynthetixCoreRouterJsonAddress,
  abi: deploymentsSynthetixCoreRouterJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/FeatureFlagModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixFeatureFlagModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'allowAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagAllowAllSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FeatureFlagAllowlistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'deniers',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
    ],
    name: 'FeatureFlagDeniersReset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feature',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      { name: 'denyAll', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'FeatureFlagDenyAllSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'addToFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDeniers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagAllowlist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'feature', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getFeatureFlagDenyAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'isFeatureAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'removeFromFeatureFlagAllowlist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'deniers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'setDeniers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagAllowAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feature', internalType: 'bytes32', type: 'bytes32' },
      { name: 'denyAll', internalType: 'bool', type: 'bool' },
    ],
    name: 'setFeatureFlagDenyAll',
    outputs: [],
  },
] as const

export const deploymentsSynthetixFeatureFlagModuleJsonAddress =
  '0x002AB3794418cCbFE9bBAad708C3Fa30B94e0e0F' as const

export const deploymentsSynthetixFeatureFlagModuleJsonConfig = {
  address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
  abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/InitialCoreProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixInitialCoreProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSynthetixInitialCoreProxyJsonAddress =
  '0x381aeF01aB853657163ccbBFC1A993D49a77307c' as const

export const deploymentsSynthetixInitialCoreProxyJsonConfig = {
  address: deploymentsSynthetixInitialCoreProxyJsonAddress,
  abi: deploymentsSynthetixInitialCoreProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/InitialModuleBundle.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixInitialModuleBundleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSynthetixInitialModuleBundleJsonAddress =
  '0x2F4a58770bDaBFef1f3Cee0eF6Ad05Db4F4d954E' as const

export const deploymentsSynthetixInitialModuleBundleJsonConfig = {
  address: deploymentsSynthetixInitialModuleBundleJsonAddress,
  abi: deploymentsSynthetixInitialModuleBundleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/IssueUSDModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixIssueUsdModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [{ name: 'currentDebt', internalType: 'int256', type: 'int256' }],
    name: 'InsufficientDebt',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdBurned',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'UsdMinted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintUsd',
    outputs: [],
  },
] as const

export const deploymentsSynthetixIssueUsdModuleJsonAddress =
  '0x7234e022faf3d1Bf8f7bC615f6265fAf37DFF1a6' as const

export const deploymentsSynthetixIssueUsdModuleJsonConfig = {
  address: deploymentsSynthetixIssueUsdModuleJsonAddress,
  abi: deploymentsSynthetixIssueUsdModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/LiquidationModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixLiquidationModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  { type: 'error', inputs: [], name: 'CannotScaleEmptyMapping' },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      { name: 'currentCRatio', internalType: 'uint256', type: 'uint256' },
      { name: 'cratio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'IneligibleForLiquidation',
  },
  { type: 'error', inputs: [], name: 'InsufficientMappedAmount' },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  { type: 'error', inputs: [], name: 'MustBeVaultLiquidated' },
  { type: 'error', inputs: [], name: 'OverflowInt128ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Liquidation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'VaultLiquidation',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isPositionLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'isVaultLiquidatable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
    ],
    name: 'liquidate',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'liquidateAsAccountId',
        internalType: 'uint128',
        type: 'uint128',
      },
      { name: 'maxUsd', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'liquidateVault',
    outputs: [
      {
        name: 'liquidationData',
        internalType: 'struct ILiquidationModule.LiquidationData',
        type: 'tuple',
        components: [
          { name: 'debtLiquidated', internalType: 'uint256', type: 'uint256' },
          {
            name: 'collateralLiquidated',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'amountRewarded', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
] as const

export const deploymentsSynthetixLiquidationModuleJsonAddress =
  '0x4393b5a65653c2f721F2c376280358286108072A' as const

export const deploymentsSynthetixLiquidationModuleJsonConfig = {
  address: deploymentsSynthetixLiquidationModuleJsonAddress,
  abi: deploymentsSynthetixLiquidationModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/MarketCollateralModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixMarketCollateralModuleJsonABI = [
  { type: 'error', inputs: [], name: 'CollateralNotFound' },
  {
    type: 'error',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'FailedTransfer',
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToDeposit',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralDepositable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'tokenAmountToWithdraw',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: 'InsufficientMarketCollateralWithdrawable',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  {
    type: 'error',
    inputs: [
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'PrecisionLost',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketCollateralWithdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'systemAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MaximumMarketCollateralConfigured',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'configureMaximumMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketCollateral',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMarketCollateralAmount',
    outputs: [
      { name: 'collateralAmountD18', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateralValue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getMaximumMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'tokenAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketCollateral',
    outputs: [],
  },
] as const

export const deploymentsSynthetixMarketCollateralModuleJsonAddress =
  '0xF8A506344B0b921F014C3130F7aF1fe60A134dB4' as const

export const deploymentsSynthetixMarketCollateralModuleJsonConfig = {
  address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
  abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/MarketManagerModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixMarketManagerModuleJsonABI = [
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'IncorrectMarketInterface',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotEnoughLiquidity',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdDeposited',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'marketId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'market',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'MarketUsdWithdrawn',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'depositMarketUsd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'maxIter', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'distributeDebtToPools',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketCollateral',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketDebtPerShare',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketNetIssuance',
    outputs: [{ name: '', internalType: 'int128', type: 'int128' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketReportedDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getMarketTotalDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'getWithdrawableMarketUsd',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'isMarketCapacityLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'market', internalType: 'address', type: 'address' }],
    name: 'registerMarket',
    outputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'marketId', internalType: 'uint128', type: 'uint128' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawMarketUsd',
    outputs: [],
  },
] as const

export const deploymentsSynthetixMarketManagerModuleJsonAddress =
  '0xdED6822a6ebcBeA1A127d3c84aF1F16e9740c3F1' as const

export const deploymentsSynthetixMarketManagerModuleJsonConfig = {
  address: deploymentsSynthetixMarketManagerModuleJsonAddress,
  abi: deploymentsSynthetixMarketManagerModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/MulticallModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixMulticallModuleJsonABI = [
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],
  },
] as const

export const deploymentsSynthetixMulticallModuleJsonAddress =
  '0xb61926f01cAD38f51236F861dABcC59626F2078d' as const

export const deploymentsSynthetixMulticallModuleJsonConfig = {
  address: deploymentsSynthetixMulticallModuleJsonAddress,
  abi: deploymentsSynthetixMulticallModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/PoolConfigurationModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixPoolConfigurationModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PoolApprovedRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PreferredPoolSet',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'addApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getApprovedPools',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPreferredPool',
    outputs: [{ name: '', internalType: 'uint128', type: 'uint128' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'removeApprovedPool',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'setPreferredPool',
    outputs: [],
  },
] as const

export const deploymentsSynthetixPoolConfigurationModuleJsonAddress =
  '0x63Fd8443047e2e70eed82a0553591A83d90d0AB6' as const

export const deploymentsSynthetixPoolConfigurationModuleJsonConfig = {
  address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
  abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/PoolModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixPoolModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint256', type: 'uint256' }],
    name: 'CapacityLocked',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolAlreadyExists',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'markets',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolConfigurationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      { name: 'name', internalType: 'string', type: 'string', indexed: false },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNameUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRenounced',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolNominationRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'nominatedOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'PoolOwnershipAccepted',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'acceptPoolOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'requestedPoolId', internalType: 'uint128', type: 'uint128' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
    name: 'createPool',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMinLiquidityRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getNominatedPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolConfiguration',
    outputs: [
      {
        name: '',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolName',
    outputs: [{ name: 'poolName', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'getPoolOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'nominatedOwner', internalType: 'address', type: 'address' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'nominatePoolOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'renouncePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'revokePoolNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'minLiquidityRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMinLiquidityRatio',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      {
        name: 'newMarketConfigurations',
        internalType: 'struct MarketConfiguration.Data[]',
        type: 'tuple[]',
        components: [
          { name: 'marketId', internalType: 'uint128', type: 'uint128' },
          { name: 'weightD18', internalType: 'uint128', type: 'uint128' },
          {
            name: 'maxDebtShareValueD18',
            internalType: 'int128',
            type: 'int128',
          },
        ],
      },
    ],
    name: 'setPoolConfiguration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'name', internalType: 'string', type: 'string' },
    ],
    name: 'setPoolName',
    outputs: [],
  },
] as const

export const deploymentsSynthetixPoolModuleJsonAddress =
  '0xe859F326dba6dFbc54395083C2D5532AC32E39dc' as const

export const deploymentsSynthetixPoolModuleJsonConfig = {
  address: deploymentsSynthetixPoolModuleJsonAddress,
  abi: deploymentsSynthetixPoolModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/RewardsManagerModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixRewardsManagerModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'accountId', internalType: 'uint128', type: 'uint128' }],
    name: 'AccountNotFound',
  },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'parameter', internalType: 'string', type: 'string' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'InvalidParameter',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint32' },
  { type: 'error', inputs: [], name: 'OverflowUint32ToInt32' },
  { type: 'error', inputs: [], name: 'OverflowUint64ToInt64' },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  { type: 'error', inputs: [], name: 'RewardDistributorNotFound' },
  {
    type: 'error',
    inputs: [{ name: 'distributor', internalType: 'address', type: 'address' }],
    name: 'RewardUnavailable',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsClaimed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'start',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'duration',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsDistributed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'distributor',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RewardsDistributorRemoved',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'claimRewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'start', internalType: 'uint64', type: 'uint64' },
      { name: 'duration', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'distributeRewards',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'getRewardRate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'registerRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'distributor', internalType: 'address', type: 'address' },
    ],
    name: 'removeRewardsDistributor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'updateRewards',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'address[]', type: 'address[]' },
    ],
  },
] as const

export const deploymentsSynthetixRewardsManagerModuleJsonAddress =
  '0x15e396C738468Fc1215F3a2f650FaC57DBEE9d99' as const

export const deploymentsSynthetixRewardsManagerModuleJsonConfig = {
  address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
  abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/USDProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixUsdProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientBalance',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnWithAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'tokenDecimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferCrossChain',
    outputs: [{ name: 'feesPaid', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

export const deploymentsSynthetixUsdProxyJsonAddress =
  '0x629673e90e428069AeB328DE4EF2040a7C22f723' as const

export const deploymentsSynthetixUsdProxyJsonConfig = {
  address: deploymentsSynthetixUsdProxyJsonAddress,
  abi: deploymentsSynthetixUsdProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/USDRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixUsdRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'MissingAssociatedSystem',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'kind', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'id', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'proxy',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'impl',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AssociatedSystemSet',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAssociatedSystem',
    outputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'kind', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeNft',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'impl', internalType: 'address', type: 'address' },
    ],
    name: 'initOrUpgradeToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'bytes32', type: 'bytes32' },
      { name: 'endpoint', internalType: 'address', type: 'address' },
    ],
    name: 'registerUnmanagedSystem',
    outputs: [],
  },
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientBalance',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnWithAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'tokenDecimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferCrossChain',
    outputs: [{ name: 'feesPaid', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

export const deploymentsSynthetixUsdRouterJsonAddress =
  '0x96E4C32dEb68b6dC5aF813Ad8590854191224138' as const

export const deploymentsSynthetixUsdRouterJsonConfig = {
  address: deploymentsSynthetixUsdRouterJsonAddress,
  abi: deploymentsSynthetixUsdRouterJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/USDTokenModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixUsdTokenModuleJsonABI = [
  { type: 'error', inputs: [], name: 'AlreadyInitialized' },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAllowance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'required', internalType: 'uint256', type: 'uint256' },
      { name: 'existing', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientBalance',
  },
  {
    type: 'error',
    inputs: [
      { name: 'expected', internalType: 'bytes32', type: 'bytes32' },
      { name: 'actual', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'MismatchAssociatedSystemKind',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burnWithAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenName', internalType: 'string', type: 'string' },
      { name: 'tokenSymbol', internalType: 'string', type: 'string' },
      { name: 'tokenDecimals', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isInitialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAllowance',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferCrossChain',
    outputs: [{ name: 'feesPaid', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

export const deploymentsSynthetixUsdTokenModuleJsonAddress =
  '0xb47e447A18C03EA2679753C3A5D18Aa8C57A3950' as const

export const deploymentsSynthetixUsdTokenModuleJsonConfig = {
  address: deploymentsSynthetixUsdTokenModuleJsonAddress,
  abi: deploymentsSynthetixUsdTokenModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/UtilsModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixUtilsModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'oracleManagerAddress',
        internalType: 'address',
        type: 'address',
      },
    ],
    name: 'configureOracleManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'k', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getConfig',
    outputs: [{ name: 'v', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ccipSend', internalType: 'address', type: 'address' },
      { name: 'ccipReceive', internalType: 'address', type: 'address' },
      { name: 'ccipTokenPool', internalType: 'address', type: 'address' },
    ],
    name: 'registerCcip',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'k', internalType: 'bytes32', type: 'bytes32' },
      { name: 'v', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setConfig',
    outputs: [],
  },
] as const

export const deploymentsSynthetixUtilsModuleJsonAddress =
  '0xF018Eea75874094A3a7Fb431AE3876A203046b50' as const

export const deploymentsSynthetixUtilsModuleJsonConfig = {
  address: deploymentsSynthetixUtilsModuleJsonAddress,
  abi: deploymentsSynthetixUtilsModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/VaultModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixVaultModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint256', type: 'uint256' }],
    name: 'CapacityLocked',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'CollateralDepositDisabled',
  },
  { type: 'error', inputs: [], name: 'EmptyDistribution' },
  {
    type: 'error',
    inputs: [{ name: 'which', internalType: 'bytes32', type: 'bytes32' }],
    name: 'FeatureUnavailable',
  },
  {
    type: 'error',
    inputs: [
      { name: 'requestedAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientAccountCollateral',
  },
  {
    type: 'error',
    inputs: [
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'uint256', type: 'uint256' },
      { name: 'ratio', internalType: 'uint256', type: 'uint256' },
      { name: 'minRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientCollateralRatio',
  },
  {
    type: 'error',
    inputs: [
      { name: 'minDelegation', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientDelegation',
  },
  { type: 'error', inputs: [], name: 'InvalidCollateralAmount' },
  {
    type: 'error',
    inputs: [{ name: 'leverage', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidLeverage',
  },
  {
    type: 'error',
    inputs: [{ name: 'marketId', internalType: 'uint128', type: 'uint128' }],
    name: 'MarketNotFound',
  },
  { type: 'error', inputs: [], name: 'OverflowInt128ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowUint128ToInt128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint128' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint32' },
  { type: 'error', inputs: [], name: 'OverflowUint32ToInt32' },
  { type: 'error', inputs: [], name: 'OverflowUint64ToInt64' },
  {
    type: 'error',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'permission', internalType: 'bytes32', type: 'bytes32' },
      { name: 'target', internalType: 'address', type: 'address' },
    ],
    name: 'PermissionDenied',
  },
  {
    type: 'error',
    inputs: [{ name: 'poolId', internalType: 'uint128', type: 'uint128' }],
    name: 'PoolNotFound',
  },
  { type: 'error', inputs: [], name: 'PositionOutOfBounds' },
  { type: 'error', inputs: [], name: 'RewardDistributorNotFound' },
  { type: 'error', inputs: [], name: 'ValueAlreadyInSet' },
  { type: 'error', inputs: [], name: 'ValueNotInSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'accountId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'poolId',
        internalType: 'uint128',
        type: 'uint128',
        indexed: true,
      },
      {
        name: 'collateralType',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'leverage',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'DelegationUpdated',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
      {
        name: 'newCollateralAmountD18',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'leverage', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'delegateCollateral',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPosition',
    outputs: [
      { name: 'collateralAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'collateralValue', internalType: 'uint256', type: 'uint256' },
      { name: 'debt', internalType: 'int256', type: 'int256' },
      {
        name: 'collateralizationRatio',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'accountId', internalType: 'uint128', type: 'uint128' },
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getPositionDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateral',
    outputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultCollateralRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'poolId', internalType: 'uint128', type: 'uint128' },
      { name: 'collateralType', internalType: 'address', type: 'address' },
    ],
    name: 'getVaultDebt',
    outputs: [{ name: '', internalType: 'int256', type: 'int256' }],
  },
] as const

export const deploymentsSynthetixVaultModuleJsonAddress =
  '0xb42F56697f82007F383928b66AFC20B5C20744bB' as const

export const deploymentsSynthetixVaultModuleJsonConfig = {
  address: deploymentsSynthetixVaultModuleJsonAddress,
  abi: deploymentsSynthetixVaultModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/oracle_manager/CoreModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixOracleManagerCoreModuleJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSynthetixOracleManagerCoreModuleJsonAddress =
  '0x606ACC428283663F0EFA30c75f39912BdfF49364' as const

export const deploymentsSynthetixOracleManagerCoreModuleJsonConfig = {
  address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
  abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/oracle_manager/InitialProxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixOracleManagerInitialProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
] as const

export const deploymentsSynthetixOracleManagerInitialProxyJsonAddress =
  '0xc0958BD10cB079b7A6bfeC7Fb695F75845830E5f' as const

export const deploymentsSynthetixOracleManagerInitialProxyJsonConfig = {
  address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
  abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/oracle_manager/NodeModule.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixOracleManagerNodeModuleJsonABI = [
  {
    type: 'error',
    inputs: [{ name: 'deviation', internalType: 'int256', type: 'int256' }],
    name: 'DeviationToleranceExceeded',
  },
  {
    type: 'error',
    inputs: [
      { name: 'externalNode', internalType: 'address', type: 'address' },
    ],
    name: 'IncorrectExternalNodeInterface',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
    name: 'InvalidNodeDefinition',
  },
  {
    type: 'error',
    inputs: [{ name: 'price', internalType: 'int256', type: 'int256' }],
    name: 'InvalidPrice',
  },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'NodeNotRegistered',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowInt56ToInt24' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint160' },
  { type: 'error', inputs: [], name: 'OverflowUint56ToInt56' },
  { type: 'error', inputs: [], name: 'StalenessToleranceExceeded' },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'UnprocessableNode',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'operation',
        internalType: 'enum ReducerNode.Operations',
        type: 'uint8',
      },
    ],
    name: 'UnsupportedOperation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'nodeId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
        indexed: false,
      },
      {
        name: 'parameters',
        internalType: 'bytes',
        type: 'bytes',
        indexed: false,
      },
      {
        name: 'parents',
        internalType: 'bytes32[]',
        type: 'bytes32[]',
        indexed: false,
      },
    ],
    name: 'NodeRegistered',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getNode',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'getNodeId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'process',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeOutput.Data',
        type: 'tuple',
        components: [
          { name: 'price', internalType: 'int256', type: 'int256' },
          { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
          {
            name: '__slotAvailableForFutureUse1',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: '__slotAvailableForFutureUse2',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'registerNode',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
] as const

export const deploymentsSynthetixOracleManagerNodeModuleJsonAddress =
  '0x515500abb622a5eF63A48313998087Dd4e9d4e72' as const

export const deploymentsSynthetixOracleManagerNodeModuleJsonConfig = {
  address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
  abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/oracle_manager/OracleRouter.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixOracleManagerOracleRouterJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'deviation', internalType: 'int256', type: 'int256' }],
    name: 'DeviationToleranceExceeded',
  },
  {
    type: 'error',
    inputs: [
      { name: 'externalNode', internalType: 'address', type: 'address' },
    ],
    name: 'IncorrectExternalNodeInterface',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
    name: 'InvalidNodeDefinition',
  },
  {
    type: 'error',
    inputs: [{ name: 'price', internalType: 'int256', type: 'int256' }],
    name: 'InvalidPrice',
  },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'NodeNotRegistered',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowInt56ToInt24' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint160' },
  { type: 'error', inputs: [], name: 'OverflowUint56ToInt56' },
  { type: 'error', inputs: [], name: 'StalenessToleranceExceeded' },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'UnprocessableNode',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'operation',
        internalType: 'enum ReducerNode.Operations',
        type: 'uint8',
      },
    ],
    name: 'UnsupportedOperation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'nodeId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
        indexed: false,
      },
      {
        name: 'parameters',
        internalType: 'bytes',
        type: 'bytes',
        indexed: false,
      },
      {
        name: 'parents',
        internalType: 'bytes32[]',
        type: 'bytes32[]',
        indexed: false,
      },
    ],
    name: 'NodeRegistered',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getNode',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'getNodeId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'process',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeOutput.Data',
        type: 'tuple',
        components: [
          { name: 'price', internalType: 'int256', type: 'int256' },
          { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
          {
            name: '__slotAvailableForFutureUse1',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: '__slotAvailableForFutureUse2',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'registerNode',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
] as const

export const deploymentsSynthetixOracleManagerOracleRouterJsonAddress =
  '0x7Ef23502f26bd080CD10dC02F118E115eFBaad27' as const

export const deploymentsSynthetixOracleManagerOracleRouterJsonConfig = {
  address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
  abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// deployments/synthetix/oracle_manager/Proxy.json
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const deploymentsSynthetixOracleManagerProxyJsonABI = [
  {
    type: 'error',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
    name: 'ImplementationIsSterile',
  },
  { type: 'error', inputs: [], name: 'NoChange' },
  {
    type: 'error',
    inputs: [{ name: 'contr', internalType: 'address', type: 'address' }],
    name: 'NotAContract',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'NotNominated',
  },
  {
    type: 'error',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'Unauthorized',
  },
  { type: 'error', inputs: [], name: 'UpgradeSimulationFailed' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'OwnerNominated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'self', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImplementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newNominatedOwner', internalType: 'address', type: 'address' },
    ],
    name: 'nominateNewOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nominatedOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceNomination',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'simulateUpgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    type: 'error',
    inputs: [{ name: 'deviation', internalType: 'int256', type: 'int256' }],
    name: 'DeviationToleranceExceeded',
  },
  {
    type: 'error',
    inputs: [
      { name: 'externalNode', internalType: 'address', type: 'address' },
    ],
    name: 'IncorrectExternalNodeInterface',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
    name: 'InvalidNodeDefinition',
  },
  {
    type: 'error',
    inputs: [{ name: 'price', internalType: 'int256', type: 'int256' }],
    name: 'InvalidPrice',
  },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'NodeNotRegistered',
  },
  { type: 'error', inputs: [], name: 'OverflowInt256ToUint256' },
  { type: 'error', inputs: [], name: 'OverflowInt56ToInt24' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToInt256' },
  { type: 'error', inputs: [], name: 'OverflowUint256ToUint160' },
  { type: 'error', inputs: [], name: 'OverflowUint56ToInt56' },
  { type: 'error', inputs: [], name: 'StalenessToleranceExceeded' },
  {
    type: 'error',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'UnprocessableNode',
  },
  {
    type: 'error',
    inputs: [
      {
        name: 'operation',
        internalType: 'enum ReducerNode.Operations',
        type: 'uint8',
      },
    ],
    name: 'UnsupportedOperation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'nodeId',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
        indexed: false,
      },
      {
        name: 'parameters',
        internalType: 'bytes',
        type: 'bytes',
        indexed: false,
      },
      {
        name: 'parents',
        internalType: 'bytes32[]',
        type: 'bytes32[]',
        indexed: false,
      },
    ],
    name: 'NodeRegistered',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getNode',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeDefinition.Data',
        type: 'tuple',
        components: [
          {
            name: 'nodeType',
            internalType: 'enum NodeDefinition.NodeType',
            type: 'uint8',
          },
          { name: 'parameters', internalType: 'bytes', type: 'bytes' },
          { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'getNodeId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'nodeId', internalType: 'bytes32', type: 'bytes32' }],
    name: 'process',
    outputs: [
      {
        name: '',
        internalType: 'struct NodeOutput.Data',
        type: 'tuple',
        components: [
          { name: 'price', internalType: 'int256', type: 'int256' },
          { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
          {
            name: '__slotAvailableForFutureUse1',
            internalType: 'uint256',
            type: 'uint256',
          },
          {
            name: '__slotAvailableForFutureUse2',
            internalType: 'uint256',
            type: 'uint256',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'nodeType',
        internalType: 'enum NodeDefinition.NodeType',
        type: 'uint8',
      },
      { name: 'parameters', internalType: 'bytes', type: 'bytes' },
      { name: 'parents', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'registerNode',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
] as const

export const deploymentsSynthetixOracleManagerProxyJsonAddress =
  '0xc0958BD10cB079b7A6bfeC7Fb695F75845830E5f' as const

export const deploymentsSynthetixOracleManagerProxyJsonConfig = {
  address: deploymentsSynthetixOracleManagerProxyJsonAddress,
  abi: deploymentsSynthetixOracleManagerProxyJsonABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSampleIntegrationJsonABI}__.
 */
export function useDeploymentsSampleIntegrationJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSampleIntegrationJsonABI,
    address: deploymentsSampleIntegrationJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSampleIntegrationJsonABI}__.
 */
export function useDeploymentsSampleIntegrationJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSampleIntegrationJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSampleIntegrationJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSampleIntegrationJsonABI,
    address: deploymentsSampleIntegrationJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSampleIntegrationJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSampleIntegrationJsonABI}__ and `functionName` set to `"snxUsd"`.
 */
export function useDeploymentsSampleIntegrationJsonSnxUsd<
  TSelectData = ReadContractResult<
    typeof deploymentsSampleIntegrationJsonABI,
    'snxUsd'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSampleIntegrationJsonABI,
      'snxUsd',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSampleIntegrationJsonABI,
    address: deploymentsSampleIntegrationJsonAddress,
    functionName: 'snxUsd',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSampleIntegrationJsonABI,
    'snxUsd',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSampleIntegrationJsonABI}__ and `functionName` set to `"synthetix"`.
 */
export function useDeploymentsSampleIntegrationJsonSynthetix<
  TSelectData = ReadContractResult<
    typeof deploymentsSampleIntegrationJsonABI,
    'synthetix'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSampleIntegrationJsonABI,
      'synthetix',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSampleIntegrationJsonABI,
    address: deploymentsSampleIntegrationJsonAddress,
    functionName: 'synthetix',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSampleIntegrationJsonABI,
    'synthetix',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"description"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonDescription<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'description'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'description',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'description',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'description',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"getAnswer"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonGetAnswer<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'getAnswer'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'getAnswer',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'getAnswer',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'getAnswer',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"getRoundData"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonGetRoundData<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'getRoundData'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'getRoundData',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'getRoundData',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'getRoundData',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"getTimestamp"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonGetTimestamp<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'getTimestamp'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'getTimestamp',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'getTimestamp',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'getTimestamp',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"latestAnswer"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonLatestAnswer<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'latestAnswer'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'latestAnswer',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'latestAnswer',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'latestAnswer',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"latestRound"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonLatestRound<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'latestRound'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'latestRound',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'latestRound',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'latestRound',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"latestRoundData"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonLatestRoundData<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'latestRoundData'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'latestRoundData',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'latestRoundData',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'latestRoundData',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"latestTimestamp"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonLatestTimestamp<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'latestTimestamp'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'latestTimestamp',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'latestTimestamp',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'latestTimestamp',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"version"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonVersion<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'version'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'version',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'version',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'version',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    TFunctionName
  >({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"updateAnswer"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonUpdateAnswer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
          'updateAnswer'
        >['abi'],
        'updateAnswer'
      > & { functionName?: 'updateAnswer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
        'updateAnswer'
      > & {
        abi?: never
        functionName?: 'updateAnswer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'updateAnswer'
  >({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'updateAnswer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"updateRoundData"`.
 */
export function useDeploymentsCollateralChainlinkMockMockV3AggregatorJsonUpdateRoundData<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
          'updateRoundData'
        >['abi'],
        'updateRoundData'
      > & { functionName?: 'updateRoundData' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
        'updateRoundData'
      > & {
        abi?: never
        functionName?: 'updateRoundData'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'updateRoundData'
  >({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'updateRoundData',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__.
 */
export function usePrepareDeploymentsCollateralChainlinkMockMockV3AggregatorJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"updateAnswer"`.
 */
export function usePrepareDeploymentsCollateralChainlinkMockMockV3AggregatorJsonUpdateAnswer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'updateAnswer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'updateAnswer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'updateAnswer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI}__ and `functionName` set to `"updateRoundData"`.
 */
export function usePrepareDeploymentsCollateralChainlinkMockMockV3AggregatorJsonUpdateRoundData(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
      'updateRoundData'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    address: deploymentsCollateralChainlinkMockMockV3AggregatorJsonAddress,
    functionName: 'updateRoundData',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralChainlinkMockMockV3AggregatorJsonABI,
    'updateRoundData'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__.
 */
export function useDeploymentsCollateralTokenMintableTokenJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"allowance"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonAllowance<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'allowance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'allowance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'allowance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralTokenMintableTokenJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralTokenMintableTokenJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    TFunctionName
  >({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralTokenMintableTokenJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralTokenMintableTokenJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'approve'
  >({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonDecreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralTokenMintableTokenJsonABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralTokenMintableTokenJsonABI,
        'decreaseAllowance'
      > & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'decreaseAllowance'
  >({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonIncreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralTokenMintableTokenJsonABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralTokenMintableTokenJsonABI,
        'increaseAllowance'
      > & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'increaseAllowance'
  >({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralTokenMintableTokenJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralTokenMintableTokenJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'mint'
  >({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralTokenMintableTokenJsonABI,
          'transfer'
        >['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralTokenMintableTokenJsonABI,
        'transfer'
      > & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'transfer'
  >({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsCollateralTokenMintableTokenJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsCollateralTokenMintableTokenJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'transferFrom'
  >({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__.
 */
export function usePrepareDeploymentsCollateralTokenMintableTokenJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsCollateralTokenMintableTokenJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareDeploymentsCollateralTokenMintableTokenJsonDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'decreaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareDeploymentsCollateralTokenMintableTokenJsonIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'increaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsCollateralTokenMintableTokenJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareDeploymentsCollateralTokenMintableTokenJsonTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'transfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'transfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsCollateralTokenMintableTokenJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsCollateralTokenMintableTokenJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsCollateralTokenMintableTokenJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsCollateralTokenMintableTokenJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsCollateralTokenMintableTokenJsonABI,
    address: deploymentsCollateralTokenMintableTokenJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsCollateralTokenMintableTokenJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderConfigurationModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__ and `functionName` set to `"getSettlementStrategy"`.
 */
export function useDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonGetSettlementStrategy<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    'getSettlementStrategy'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
      'getSettlementStrategy',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    functionName: 'getSettlementStrategy',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    'getSettlementStrategy',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__ and `functionName` set to `"addSettlementStrategy"`.
 */
export function useDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddSettlementStrategy<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
          'addSettlementStrategy'
        >['abi'],
        'addSettlementStrategy'
      > & { functionName?: 'addSettlementStrategy' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
        'addSettlementStrategy'
      > & {
        abi?: never
        functionName?: 'addSettlementStrategy'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    'addSettlementStrategy'
  >({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    functionName: 'addSettlementStrategy',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__ and `functionName` set to `"setSettlementStrategyEnabled"`.
 */
export function useDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonSetSettlementStrategyEnabled<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
          'setSettlementStrategyEnabled'
        >['abi'],
        'setSettlementStrategyEnabled'
      > & { functionName?: 'setSettlementStrategyEnabled' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
        'setSettlementStrategyEnabled'
      > & {
        abi?: never
        functionName?: 'setSettlementStrategyEnabled'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    'setSettlementStrategyEnabled'
  >({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    functionName: 'setSettlementStrategyEnabled',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__ and `functionName` set to `"addSettlementStrategy"`.
 */
export function usePrepareDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddSettlementStrategy(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
      'addSettlementStrategy'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    functionName: 'addSettlementStrategy',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    'addSettlementStrategy'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__ and `functionName` set to `"setSettlementStrategyEnabled"`.
 */
export function usePrepareDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonSetSettlementStrategyEnabled(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
      'setSettlementStrategyEnabled'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    functionName: 'setSettlementStrategyEnabled',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    'setSettlementStrategyEnabled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__ and `eventName` set to `"SettlementStrategyAdded"`.
 */
export function useDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonSettlementStrategyAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
      'SettlementStrategyAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    eventName: 'SettlementStrategyAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    'SettlementStrategyAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI}__ and `eventName` set to `"SettlementStrategyUpdated"`.
 */
export function useDeploymentsSpotMarketAsyncOrderConfigurationModuleJsonSettlementStrategyUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
      'SettlementStrategyUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderConfigurationModuleJsonAddress,
    eventName: 'SettlementStrategyUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAsyncOrderConfigurationModuleJsonABI,
    'SettlementStrategyUpdated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__ and `functionName` set to `"getAsyncOrderClaim"`.
 */
export function useDeploymentsSpotMarketAsyncOrderModuleJsonGetAsyncOrderClaim<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    'getAsyncOrderClaim'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
      'getAsyncOrderClaim',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    functionName: 'getAsyncOrderClaim',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    'getAsyncOrderClaim',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__ and `functionName` set to `"cancelOrder"`.
 */
export function useDeploymentsSpotMarketAsyncOrderModuleJsonCancelOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
          'cancelOrder'
        >['abi'],
        'cancelOrder'
      > & { functionName?: 'cancelOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
        'cancelOrder'
      > & {
        abi?: never
        functionName?: 'cancelOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    'cancelOrder'
  >({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    functionName: 'cancelOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__ and `functionName` set to `"commitOrder"`.
 */
export function useDeploymentsSpotMarketAsyncOrderModuleJsonCommitOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
          'commitOrder'
        >['abi'],
        'commitOrder'
      > & { functionName?: 'commitOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
        'commitOrder'
      > & {
        abi?: never
        functionName?: 'commitOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    'commitOrder'
  >({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    functionName: 'commitOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketAsyncOrderModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__ and `functionName` set to `"cancelOrder"`.
 */
export function usePrepareDeploymentsSpotMarketAsyncOrderModuleJsonCancelOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
      'cancelOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    functionName: 'cancelOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    'cancelOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__ and `functionName` set to `"commitOrder"`.
 */
export function usePrepareDeploymentsSpotMarketAsyncOrderModuleJsonCommitOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
      'commitOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    functionName: 'commitOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    'commitOrder'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__ and `eventName` set to `"OrderCancelled"`.
 */
export function useDeploymentsSpotMarketAsyncOrderModuleJsonOrderCancelledEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
      'OrderCancelled'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    eventName: 'OrderCancelled',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    'OrderCancelled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderModuleJsonABI}__ and `eventName` set to `"OrderCommitted"`.
 */
export function useDeploymentsSpotMarketAsyncOrderModuleJsonOrderCommittedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
      'OrderCommitted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAsyncOrderModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderModuleJsonAddress,
    eventName: 'OrderCommitted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAsyncOrderModuleJsonABI,
    'OrderCommitted'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderSettlementModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderSettlementModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__ and `functionName` set to `"PRECISION"`.
 */
export function useDeploymentsSpotMarketAsyncOrderSettlementModuleJsonPrecision<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    'PRECISION'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
      'PRECISION',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    functionName: 'PRECISION',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    'PRECISION',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderSettlementModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__ and `functionName` set to `"settleOrder"`.
 */
export function useDeploymentsSpotMarketAsyncOrderSettlementModuleJsonSettleOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
          'settleOrder'
        >['abi'],
        'settleOrder'
      > & { functionName?: 'settleOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
        'settleOrder'
      > & {
        abi?: never
        functionName?: 'settleOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    'settleOrder'
  >({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    functionName: 'settleOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__ and `functionName` set to `"settlePythOrder"`.
 */
export function useDeploymentsSpotMarketAsyncOrderSettlementModuleJsonSettlePythOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
          'settlePythOrder'
        >['abi'],
        'settlePythOrder'
      > & { functionName?: 'settlePythOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
        'settlePythOrder'
      > & {
        abi?: never
        functionName?: 'settlePythOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    'settlePythOrder'
  >({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    functionName: 'settlePythOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketAsyncOrderSettlementModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__ and `functionName` set to `"settleOrder"`.
 */
export function usePrepareDeploymentsSpotMarketAsyncOrderSettlementModuleJsonSettleOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
      'settleOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    functionName: 'settleOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    'settleOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__ and `functionName` set to `"settlePythOrder"`.
 */
export function usePrepareDeploymentsSpotMarketAsyncOrderSettlementModuleJsonSettlePythOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
      'settlePythOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    functionName: 'settlePythOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    'settlePythOrder'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAsyncOrderSettlementModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI}__ and `eventName` set to `"OrderSettled"`.
 */
export function useDeploymentsSpotMarketAsyncOrderSettlementModuleJsonOrderSettledEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
      'OrderSettled'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    address: deploymentsSpotMarketAsyncOrderSettlementModuleJsonAddress,
    eventName: 'OrderSettled',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAsyncOrderSettlementModuleJsonABI,
    'OrderSettled'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAtomicOrderModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAtomicOrderModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__ and `functionName` set to `"buy"`.
 */
export function useDeploymentsSpotMarketAtomicOrderModuleJsonBuy<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
          'buy'
        >['abi'],
        'buy'
      > & { functionName?: 'buy' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
        'buy'
      > & {
        abi?: never
        functionName?: 'buy'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
    'buy'
  >({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    functionName: 'buy',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__ and `functionName` set to `"sell"`.
 */
export function useDeploymentsSpotMarketAtomicOrderModuleJsonSell<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
          'sell'
        >['abi'],
        'sell'
      > & { functionName?: 'sell' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
        'sell'
      > & {
        abi?: never
        functionName?: 'sell'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
    'sell'
  >({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    functionName: 'sell',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketAtomicOrderModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__ and `functionName` set to `"buy"`.
 */
export function usePrepareDeploymentsSpotMarketAtomicOrderModuleJsonBuy(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
      'buy'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    functionName: 'buy',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
    'buy'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__ and `functionName` set to `"sell"`.
 */
export function usePrepareDeploymentsSpotMarketAtomicOrderModuleJsonSell(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
      'sell'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    functionName: 'sell',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
    'sell'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketAtomicOrderModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__ and `eventName` set to `"SynthBought"`.
 */
export function useDeploymentsSpotMarketAtomicOrderModuleJsonSynthBoughtEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
      'SynthBought'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    eventName: 'SynthBought',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
    'SynthBought'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketAtomicOrderModuleJsonABI}__ and `eventName` set to `"SynthSold"`.
 */
export function useDeploymentsSpotMarketAtomicOrderModuleJsonSynthSoldEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
      'SynthSold'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketAtomicOrderModuleJsonABI,
    address: deploymentsSpotMarketAtomicOrderModuleJsonAddress,
    eventName: 'SynthSold',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketAtomicOrderModuleJsonABI,
    'SynthSold'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketCoreModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketCoreModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketCoreModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketCoreModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketCoreModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketCoreModuleJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketCoreModuleJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketCoreModuleJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketCoreModuleJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketCoreModuleJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketCoreModuleJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketCoreModuleJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketCoreModuleJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketCoreModuleJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketCoreModuleJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketCoreModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketCoreModuleJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketCoreModuleJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketCoreModuleJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketCoreModuleJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketCoreModuleJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketCoreModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketCoreModuleJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketCoreModuleJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketCoreModuleJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketCoreModuleJsonABI,
    address: deploymentsSpotMarketCoreModuleJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketCoreModuleJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"getDeniers"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonGetDeniers<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'getDeniers'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'getDeniers',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'getDeniers',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'getDeniers',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"getFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonGetFeatureFlagAllowAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'getFeatureFlagAllowAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'getFeatureFlagAllowAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"getFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonGetFeatureFlagAllowlist<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowlist'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'getFeatureFlagAllowlist',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'getFeatureFlagAllowlist',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowlist',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"getFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonGetFeatureFlagDenyAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'getFeatureFlagDenyAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'getFeatureFlagDenyAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'getFeatureFlagDenyAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'getFeatureFlagDenyAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"isFeatureAllowed"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonIsFeatureAllowed<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'isFeatureAllowed'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'isFeatureAllowed',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'isFeatureAllowed',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'isFeatureAllowed',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonAddToFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
          'addToFeatureFlagAllowlist'
        >['abi'],
        'addToFeatureFlagAllowlist'
      > & { functionName?: 'addToFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
        'addToFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'addToFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'addToFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonRemoveFromFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
          'removeFromFeatureFlagAllowlist'
        >['abi'],
        'removeFromFeatureFlagAllowlist'
      > & { functionName?: 'removeFromFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
        'removeFromFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'removeFromFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'removeFromFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonSetDeniers<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
          'setDeniers'
        >['abi'],
        'setDeniers'
      > & { functionName?: 'setDeniers' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
        'setDeniers'
      > & {
        abi?: never
        functionName?: 'setDeniers'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'setDeniers'
  >({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonSetFeatureFlagAllowAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
          'setFeatureFlagAllowAll'
        >['abi'],
        'setFeatureFlagAllowAll'
      > & { functionName?: 'setFeatureFlagAllowAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
        'setFeatureFlagAllowAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagAllowAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'setFeatureFlagAllowAll'
  >({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonSetFeatureFlagDenyAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
          'setFeatureFlagDenyAll'
        >['abi'],
        'setFeatureFlagDenyAll'
      > & { functionName?: 'setFeatureFlagDenyAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
        'setFeatureFlagDenyAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagDenyAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'setFeatureFlagDenyAll'
  >({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketFeatureFlagModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketFeatureFlagModuleJsonAddToFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'addToFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'addToFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketFeatureFlagModuleJsonRemoveFromFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'removeFromFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'removeFromFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function usePrepareDeploymentsSpotMarketFeatureFlagModuleJsonSetDeniers(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'setDeniers'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'setDeniers'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function usePrepareDeploymentsSpotMarketFeatureFlagModuleJsonSetFeatureFlagAllowAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'setFeatureFlagAllowAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'setFeatureFlagAllowAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function usePrepareDeploymentsSpotMarketFeatureFlagModuleJsonSetFeatureFlagDenyAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'setFeatureFlagDenyAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'setFeatureFlagDenyAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagAllowAllSet"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonFeatureFlagAllowAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'FeatureFlagAllowAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagAllowAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'FeatureFlagAllowAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistAdded"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonFeatureFlagAllowlistAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'FeatureFlagAllowlistAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagAllowlistAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'FeatureFlagAllowlistAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistRemoved"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonFeatureFlagAllowlistRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'FeatureFlagAllowlistRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagAllowlistRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'FeatureFlagAllowlistRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagDeniersReset"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonFeatureFlagDeniersResetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'FeatureFlagDeniersReset'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagDeniersReset',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'FeatureFlagDeniersReset'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagDenyAllSet"`.
 */
export function useDeploymentsSpotMarketFeatureFlagModuleJsonFeatureFlagDenyAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
      'FeatureFlagDenyAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagDenyAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeatureFlagModuleJsonABI,
    'FeatureFlagDenyAllSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setAsyncFixedFee"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonSetAsyncFixedFee<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
          'setAsyncFixedFee'
        >['abi'],
        'setAsyncFixedFee'
      > & { functionName?: 'setAsyncFixedFee' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
        'setAsyncFixedFee'
      > & {
        abi?: never
        functionName?: 'setAsyncFixedFee'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setAsyncFixedFee'
  >({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setAsyncFixedFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setAtomicFixedFee"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonSetAtomicFixedFee<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
          'setAtomicFixedFee'
        >['abi'],
        'setAtomicFixedFee'
      > & { functionName?: 'setAtomicFixedFee' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
        'setAtomicFixedFee'
      > & {
        abi?: never
        functionName?: 'setAtomicFixedFee'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setAtomicFixedFee'
  >({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setAtomicFixedFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setCustomTransactorFees"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonSetCustomTransactorFees<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
          'setCustomTransactorFees'
        >['abi'],
        'setCustomTransactorFees'
      > & { functionName?: 'setCustomTransactorFees' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
        'setCustomTransactorFees'
      > & {
        abi?: never
        functionName?: 'setCustomTransactorFees'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setCustomTransactorFees'
  >({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setCustomTransactorFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setFeeCollector"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonSetFeeCollector<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
          'setFeeCollector'
        >['abi'],
        'setFeeCollector'
      > & { functionName?: 'setFeeCollector' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
        'setFeeCollector'
      > & {
        abi?: never
        functionName?: 'setFeeCollector'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setFeeCollector'
  >({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setFeeCollector',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setMarketSkewScale"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonSetMarketSkewScale<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
          'setMarketSkewScale'
        >['abi'],
        'setMarketSkewScale'
      > & { functionName?: 'setMarketSkewScale' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
        'setMarketSkewScale'
      > & {
        abi?: never
        functionName?: 'setMarketSkewScale'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setMarketSkewScale'
  >({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setMarketSkewScale',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setMarketUtilizationFees"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonSetMarketUtilizationFees<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
          'setMarketUtilizationFees'
        >['abi'],
        'setMarketUtilizationFees'
      > & { functionName?: 'setMarketUtilizationFees' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
        'setMarketUtilizationFees'
      > & {
        abi?: never
        functionName?: 'setMarketUtilizationFees'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setMarketUtilizationFees'
  >({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setMarketUtilizationFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setWrapperFees"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonSetWrapperFees<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
          'setWrapperFees'
        >['abi'],
        'setWrapperFees'
      > & { functionName?: 'setWrapperFees' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
        'setWrapperFees'
      > & {
        abi?: never
        functionName?: 'setWrapperFees'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setWrapperFees'
  >({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setWrapperFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketFeeConfigurationModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setAsyncFixedFee"`.
 */
export function usePrepareDeploymentsSpotMarketFeeConfigurationModuleJsonSetAsyncFixedFee(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'setAsyncFixedFee'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setAsyncFixedFee',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setAsyncFixedFee'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setAtomicFixedFee"`.
 */
export function usePrepareDeploymentsSpotMarketFeeConfigurationModuleJsonSetAtomicFixedFee(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'setAtomicFixedFee'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setAtomicFixedFee',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setAtomicFixedFee'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setCustomTransactorFees"`.
 */
export function usePrepareDeploymentsSpotMarketFeeConfigurationModuleJsonSetCustomTransactorFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'setCustomTransactorFees'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setCustomTransactorFees',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setCustomTransactorFees'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setFeeCollector"`.
 */
export function usePrepareDeploymentsSpotMarketFeeConfigurationModuleJsonSetFeeCollector(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'setFeeCollector'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setFeeCollector',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setFeeCollector'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setMarketSkewScale"`.
 */
export function usePrepareDeploymentsSpotMarketFeeConfigurationModuleJsonSetMarketSkewScale(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'setMarketSkewScale'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setMarketSkewScale',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setMarketSkewScale'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setMarketUtilizationFees"`.
 */
export function usePrepareDeploymentsSpotMarketFeeConfigurationModuleJsonSetMarketUtilizationFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'setMarketUtilizationFees'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setMarketUtilizationFees',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setMarketUtilizationFees'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `functionName` set to `"setWrapperFees"`.
 */
export function usePrepareDeploymentsSpotMarketFeeConfigurationModuleJsonSetWrapperFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'setWrapperFees'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    functionName: 'setWrapperFees',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'setWrapperFees'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `eventName` set to `"AsyncFixedFeeSet"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonAsyncFixedFeeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'AsyncFixedFeeSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    eventName: 'AsyncFixedFeeSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'AsyncFixedFeeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `eventName` set to `"AtomicFixedFeeSet"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonAtomicFixedFeeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'AtomicFixedFeeSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    eventName: 'AtomicFixedFeeSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'AtomicFixedFeeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `eventName` set to `"FeeCollectorSet"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonFeeCollectorSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'FeeCollectorSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    eventName: 'FeeCollectorSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'FeeCollectorSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `eventName` set to `"MarketSkewScaleSet"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonMarketSkewScaleSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'MarketSkewScaleSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    eventName: 'MarketSkewScaleSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'MarketSkewScaleSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `eventName` set to `"MarketUtilizationFeesSet"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonMarketUtilizationFeesSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'MarketUtilizationFeesSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    eventName: 'MarketUtilizationFeesSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'MarketUtilizationFeesSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `eventName` set to `"TransactorFixedFeeSet"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonTransactorFixedFeeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'TransactorFixedFeeSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    eventName: 'TransactorFixedFeeSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'TransactorFixedFeeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketFeeConfigurationModuleJsonABI}__ and `eventName` set to `"WrapperFeesSet"`.
 */
export function useDeploymentsSpotMarketFeeConfigurationModuleJsonWrapperFeesSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
      'WrapperFeesSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    address: deploymentsSpotMarketFeeConfigurationModuleJsonAddress,
    eventName: 'WrapperFeesSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketFeeConfigurationModuleJsonABI,
    'WrapperFeesSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketInitialSpotMarketProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketInitialSpotMarketProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketInitialSpotMarketProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketInitialSpotMarketProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketInitialSpotMarketProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketInitialSpotMarketProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketInitialSpotMarketProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketInitialSpotMarketProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketInitialSpotMarketProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketInitialSpotMarketProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"getMarketOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonGetMarketOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'getMarketOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'getMarketOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'getMarketOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'getMarketOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"getSynth"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonGetSynth<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'getSynth'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'getSynth',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'getSynth',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'getSynth',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"locked"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonLocked<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'locked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'locked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'locked',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'locked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"reportedDebt"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonReportedDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'reportedDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'reportedDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'reportedDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'reportedDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonSupportsInterface<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"acceptMarketOwnership"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonAcceptMarketOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          'acceptMarketOwnership'
        >['abi'],
        'acceptMarketOwnership'
      > & { functionName?: 'acceptMarketOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        'acceptMarketOwnership'
      > & {
        abi?: never
        functionName?: 'acceptMarketOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'acceptMarketOwnership'
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'acceptMarketOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"createSynth"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonCreateSynth<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          'createSynth'
        >['abi'],
        'createSynth'
      > & { functionName?: 'createSynth' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        'createSynth'
      > & {
        abi?: never
        functionName?: 'createSynth'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'createSynth'
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'createSynth',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"nominateMarketOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonNominateMarketOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          'nominateMarketOwner'
        >['abi'],
        'nominateMarketOwner'
      > & { functionName?: 'nominateMarketOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        'nominateMarketOwner'
      > & {
        abi?: never
        functionName?: 'nominateMarketOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'nominateMarketOwner'
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'nominateMarketOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"updatePriceData"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonUpdatePriceData<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          'updatePriceData'
        >['abi'],
        'updatePriceData'
      > & { functionName?: 'updatePriceData' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        'updatePriceData'
      > & {
        abi?: never
        functionName?: 'updatePriceData'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'updatePriceData'
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'updatePriceData',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"upgradeSynthImpl"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonUpgradeSynthImpl<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
          'upgradeSynthImpl'
        >['abi'],
        'upgradeSynthImpl'
      > & { functionName?: 'upgradeSynthImpl' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
        'upgradeSynthImpl'
      > & {
        abi?: never
        functionName?: 'upgradeSynthImpl'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'upgradeSynthImpl'
  >({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'upgradeSynthImpl',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"acceptMarketOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonAcceptMarketOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'acceptMarketOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'acceptMarketOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'acceptMarketOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"createSynth"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonCreateSynth(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'createSynth'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'createSynth',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'createSynth'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"nominateMarketOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonNominateMarketOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'nominateMarketOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'nominateMarketOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'nominateMarketOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"updatePriceData"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonUpdatePriceData(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'updatePriceData'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'updatePriceData',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'updatePriceData'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `functionName` set to `"upgradeSynthImpl"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketFactoryModuleJsonUpgradeSynthImpl(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'upgradeSynthImpl'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    functionName: 'upgradeSynthImpl',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'upgradeSynthImpl'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `eventName` set to `"MarketOwnerChanged"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonMarketOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'MarketOwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    eventName: 'MarketOwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'MarketOwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `eventName` set to `"MarketOwnerNominated"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonMarketOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'MarketOwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    eventName: 'MarketOwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'MarketOwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `eventName` set to `"SynthImplementationUpgraded"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonSynthImplementationUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'SynthImplementationUpgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    eventName: 'SynthImplementationUpgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'SynthImplementationUpgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `eventName` set to `"SynthPriceDataUpdated"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonSynthPriceDataUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'SynthPriceDataUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    eventName: 'SynthPriceDataUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'SynthPriceDataUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketFactoryModuleJsonABI}__ and `eventName` set to `"SynthRegistered"`.
 */
export function useDeploymentsSpotMarketSpotMarketFactoryModuleJsonSynthRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
      'SynthRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    address: deploymentsSpotMarketSpotMarketFactoryModuleJsonAddress,
    eventName: 'SynthRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketFactoryModuleJsonABI,
    'SynthRegistered'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getMarketOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetMarketOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getMarketOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getMarketOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getMarketOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getMarketOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getSynth"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetSynth<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getSynth'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getSynth',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getSynth',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getSynth',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"locked"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonLocked<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'locked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'locked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'locked',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'locked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"reportedDebt"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonReportedDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'reportedDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'reportedDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'reportedDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'reportedDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSupportsInterface<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getAsyncOrderClaim"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetAsyncOrderClaim<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getAsyncOrderClaim'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getAsyncOrderClaim',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getAsyncOrderClaim',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getAsyncOrderClaim',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"PRECISION"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonPrecision<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'PRECISION'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'PRECISION',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'PRECISION',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'PRECISION',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getSettlementStrategy"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetSettlementStrategy<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getSettlementStrategy'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getSettlementStrategy',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getSettlementStrategy',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getSettlementStrategy',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getDeniers"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetDeniers<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getDeniers'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getDeniers',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getDeniers',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getDeniers',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetFeatureFlagAllowAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getFeatureFlagAllowAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getFeatureFlagAllowAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getFeatureFlagAllowAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getFeatureFlagAllowAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetFeatureFlagAllowlist<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getFeatureFlagAllowlist'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getFeatureFlagAllowlist',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getFeatureFlagAllowlist',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getFeatureFlagAllowlist',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"getFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonGetFeatureFlagDenyAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getFeatureFlagDenyAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'getFeatureFlagDenyAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'getFeatureFlagDenyAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'getFeatureFlagDenyAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"isFeatureAllowed"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonIsFeatureAllowed<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'isFeatureAllowed'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'isFeatureAllowed',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'isFeatureAllowed',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'isFeatureAllowed',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"acceptMarketOwnership"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonAcceptMarketOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'acceptMarketOwnership'
        >['abi'],
        'acceptMarketOwnership'
      > & { functionName?: 'acceptMarketOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'acceptMarketOwnership'
      > & {
        abi?: never
        functionName?: 'acceptMarketOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'acceptMarketOwnership'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'acceptMarketOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"createSynth"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonCreateSynth<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'createSynth'
        >['abi'],
        'createSynth'
      > & { functionName?: 'createSynth' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'createSynth'
      > & {
        abi?: never
        functionName?: 'createSynth'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'createSynth'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'createSynth',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"nominateMarketOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonNominateMarketOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'nominateMarketOwner'
        >['abi'],
        'nominateMarketOwner'
      > & { functionName?: 'nominateMarketOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'nominateMarketOwner'
      > & {
        abi?: never
        functionName?: 'nominateMarketOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'nominateMarketOwner'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'nominateMarketOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"updatePriceData"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonUpdatePriceData<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'updatePriceData'
        >['abi'],
        'updatePriceData'
      > & { functionName?: 'updatePriceData' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'updatePriceData'
      > & {
        abi?: never
        functionName?: 'updatePriceData'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'updatePriceData'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'updatePriceData',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"upgradeSynthImpl"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonUpgradeSynthImpl<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'upgradeSynthImpl'
        >['abi'],
        'upgradeSynthImpl'
      > & { functionName?: 'upgradeSynthImpl' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'upgradeSynthImpl'
      > & {
        abi?: never
        functionName?: 'upgradeSynthImpl'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'upgradeSynthImpl'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'upgradeSynthImpl',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"buy"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonBuy<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'buy'
        >['abi'],
        'buy'
      > & { functionName?: 'buy' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'buy'
      > & {
        abi?: never
        functionName?: 'buy'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'buy'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'buy',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"sell"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSell<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'sell'
        >['abi'],
        'sell'
      > & { functionName?: 'sell' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'sell'
      > & {
        abi?: never
        functionName?: 'sell'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'sell'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'sell',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"cancelOrder"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonCancelOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'cancelOrder'
        >['abi'],
        'cancelOrder'
      > & { functionName?: 'cancelOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'cancelOrder'
      > & {
        abi?: never
        functionName?: 'cancelOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'cancelOrder'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'cancelOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"commitOrder"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonCommitOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'commitOrder'
        >['abi'],
        'commitOrder'
      > & { functionName?: 'commitOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'commitOrder'
      > & {
        abi?: never
        functionName?: 'commitOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'commitOrder'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'commitOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"settleOrder"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSettleOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'settleOrder'
        >['abi'],
        'settleOrder'
      > & { functionName?: 'settleOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'settleOrder'
      > & {
        abi?: never
        functionName?: 'settleOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'settleOrder'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'settleOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"settlePythOrder"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSettlePythOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'settlePythOrder'
        >['abi'],
        'settlePythOrder'
      > & { functionName?: 'settlePythOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'settlePythOrder'
      > & {
        abi?: never
        functionName?: 'settlePythOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'settlePythOrder'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'settlePythOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"addSettlementStrategy"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonAddSettlementStrategy<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'addSettlementStrategy'
        >['abi'],
        'addSettlementStrategy'
      > & { functionName?: 'addSettlementStrategy' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'addSettlementStrategy'
      > & {
        abi?: never
        functionName?: 'addSettlementStrategy'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'addSettlementStrategy'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'addSettlementStrategy',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setSettlementStrategyEnabled"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetSettlementStrategyEnabled<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setSettlementStrategyEnabled'
        >['abi'],
        'setSettlementStrategyEnabled'
      > & { functionName?: 'setSettlementStrategyEnabled' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setSettlementStrategyEnabled'
      > & {
        abi?: never
        functionName?: 'setSettlementStrategyEnabled'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setSettlementStrategyEnabled'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setSettlementStrategyEnabled',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setWrapper"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetWrapper<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setWrapper'
        >['abi'],
        'setWrapper'
      > & { functionName?: 'setWrapper' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setWrapper'
      > & {
        abi?: never
        functionName?: 'setWrapper'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setWrapper'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setWrapper',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"unwrap"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonUnwrap<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'unwrap'
        >['abi'],
        'unwrap'
      > & { functionName?: 'unwrap' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'unwrap'
      > & {
        abi?: never
        functionName?: 'unwrap'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'unwrap'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'unwrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"wrap"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonWrap<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'wrap'
        >['abi'],
        'wrap'
      > & { functionName?: 'wrap' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'wrap'
      > & {
        abi?: never
        functionName?: 'wrap'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'wrap'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'wrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setAsyncFixedFee"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetAsyncFixedFee<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setAsyncFixedFee'
        >['abi'],
        'setAsyncFixedFee'
      > & { functionName?: 'setAsyncFixedFee' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setAsyncFixedFee'
      > & {
        abi?: never
        functionName?: 'setAsyncFixedFee'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setAsyncFixedFee'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setAsyncFixedFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setAtomicFixedFee"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetAtomicFixedFee<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setAtomicFixedFee'
        >['abi'],
        'setAtomicFixedFee'
      > & { functionName?: 'setAtomicFixedFee' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setAtomicFixedFee'
      > & {
        abi?: never
        functionName?: 'setAtomicFixedFee'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setAtomicFixedFee'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setAtomicFixedFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setCustomTransactorFees"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetCustomTransactorFees<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setCustomTransactorFees'
        >['abi'],
        'setCustomTransactorFees'
      > & { functionName?: 'setCustomTransactorFees' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setCustomTransactorFees'
      > & {
        abi?: never
        functionName?: 'setCustomTransactorFees'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setCustomTransactorFees'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setCustomTransactorFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setFeeCollector"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetFeeCollector<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setFeeCollector'
        >['abi'],
        'setFeeCollector'
      > & { functionName?: 'setFeeCollector' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setFeeCollector'
      > & {
        abi?: never
        functionName?: 'setFeeCollector'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setFeeCollector'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setFeeCollector',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setMarketSkewScale"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetMarketSkewScale<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setMarketSkewScale'
        >['abi'],
        'setMarketSkewScale'
      > & { functionName?: 'setMarketSkewScale' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setMarketSkewScale'
      > & {
        abi?: never
        functionName?: 'setMarketSkewScale'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setMarketSkewScale'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setMarketSkewScale',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setMarketUtilizationFees"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetMarketUtilizationFees<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setMarketUtilizationFees'
        >['abi'],
        'setMarketUtilizationFees'
      > & { functionName?: 'setMarketUtilizationFees' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setMarketUtilizationFees'
      > & {
        abi?: never
        functionName?: 'setMarketUtilizationFees'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setMarketUtilizationFees'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setMarketUtilizationFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setWrapperFees"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetWrapperFees<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setWrapperFees'
        >['abi'],
        'setWrapperFees'
      > & { functionName?: 'setWrapperFees' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setWrapperFees'
      > & {
        abi?: never
        functionName?: 'setWrapperFees'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setWrapperFees'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setWrapperFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonAddToFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'addToFeatureFlagAllowlist'
        >['abi'],
        'addToFeatureFlagAllowlist'
      > & { functionName?: 'addToFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'addToFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'addToFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'addToFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonRemoveFromFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'removeFromFeatureFlagAllowlist'
        >['abi'],
        'removeFromFeatureFlagAllowlist'
      > & { functionName?: 'removeFromFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'removeFromFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'removeFromFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'removeFromFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetDeniers<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setDeniers'
        >['abi'],
        'setDeniers'
      > & { functionName?: 'setDeniers' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setDeniers'
      > & {
        abi?: never
        functionName?: 'setDeniers'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setDeniers'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetFeatureFlagAllowAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setFeatureFlagAllowAll'
        >['abi'],
        'setFeatureFlagAllowAll'
      > & { functionName?: 'setFeatureFlagAllowAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setFeatureFlagAllowAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagAllowAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setFeatureFlagAllowAll'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSetFeatureFlagDenyAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
          'setFeatureFlagDenyAll'
        >['abi'],
        'setFeatureFlagDenyAll'
      > & { functionName?: 'setFeatureFlagDenyAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
        'setFeatureFlagDenyAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagDenyAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setFeatureFlagDenyAll'
  >({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"acceptMarketOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonAcceptMarketOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'acceptMarketOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'acceptMarketOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'acceptMarketOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"createSynth"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonCreateSynth(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'createSynth'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'createSynth',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'createSynth'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"nominateMarketOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonNominateMarketOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'nominateMarketOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'nominateMarketOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'nominateMarketOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"updatePriceData"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonUpdatePriceData(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'updatePriceData'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'updatePriceData',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'updatePriceData'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"upgradeSynthImpl"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonUpgradeSynthImpl(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'upgradeSynthImpl'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'upgradeSynthImpl',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'upgradeSynthImpl'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"buy"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonBuy(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'buy'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'buy',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'buy'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"sell"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSell(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'sell'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'sell',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'sell'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"cancelOrder"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonCancelOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'cancelOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'cancelOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'cancelOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"commitOrder"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonCommitOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'commitOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'commitOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'commitOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"settleOrder"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSettleOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'settleOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'settleOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'settleOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"settlePythOrder"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSettlePythOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'settlePythOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'settlePythOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'settlePythOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"addSettlementStrategy"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonAddSettlementStrategy(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'addSettlementStrategy'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'addSettlementStrategy',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'addSettlementStrategy'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setSettlementStrategyEnabled"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetSettlementStrategyEnabled(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setSettlementStrategyEnabled'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setSettlementStrategyEnabled',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setSettlementStrategyEnabled'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setWrapper"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetWrapper(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setWrapper'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setWrapper',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setWrapper'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"unwrap"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonUnwrap(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'unwrap'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'unwrap',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'unwrap'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"wrap"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonWrap(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'wrap'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'wrap',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'wrap'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setAsyncFixedFee"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetAsyncFixedFee(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setAsyncFixedFee'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setAsyncFixedFee',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setAsyncFixedFee'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setAtomicFixedFee"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetAtomicFixedFee(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setAtomicFixedFee'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setAtomicFixedFee',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setAtomicFixedFee'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setCustomTransactorFees"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetCustomTransactorFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setCustomTransactorFees'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setCustomTransactorFees',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setCustomTransactorFees'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setFeeCollector"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetFeeCollector(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setFeeCollector'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setFeeCollector',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setFeeCollector'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setMarketSkewScale"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetMarketSkewScale(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setMarketSkewScale'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setMarketSkewScale',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setMarketSkewScale'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setMarketUtilizationFees"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetMarketUtilizationFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setMarketUtilizationFees'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setMarketUtilizationFees',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setMarketUtilizationFees'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setWrapperFees"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetWrapperFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setWrapperFees'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setWrapperFees',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setWrapperFees'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonAddToFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'addToFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'addToFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonRemoveFromFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'removeFromFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'removeFromFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetDeniers(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setDeniers'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setDeniers'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetFeatureFlagAllowAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setFeatureFlagAllowAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setFeatureFlagAllowAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketProxyJsonSetFeatureFlagDenyAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'setFeatureFlagDenyAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'setFeatureFlagDenyAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"MarketOwnerChanged"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonMarketOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'MarketOwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'MarketOwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'MarketOwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"MarketOwnerNominated"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonMarketOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'MarketOwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'MarketOwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'MarketOwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"SynthImplementationUpgraded"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSynthImplementationUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'SynthImplementationUpgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'SynthImplementationUpgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'SynthImplementationUpgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"SynthPriceDataUpdated"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSynthPriceDataUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'SynthPriceDataUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'SynthPriceDataUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'SynthPriceDataUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"SynthRegistered"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSynthRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'SynthRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'SynthRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'SynthRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"SynthBought"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSynthBoughtEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'SynthBought'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'SynthBought',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'SynthBought'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"SynthSold"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSynthSoldEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'SynthSold'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'SynthSold',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'SynthSold'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"OrderCancelled"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonOrderCancelledEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'OrderCancelled'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'OrderCancelled',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'OrderCancelled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"OrderCommitted"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonOrderCommittedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'OrderCommitted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'OrderCommitted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'OrderCommitted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"OrderSettled"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonOrderSettledEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'OrderSettled'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'OrderSettled',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'OrderSettled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"SettlementStrategyAdded"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSettlementStrategyAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'SettlementStrategyAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'SettlementStrategyAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'SettlementStrategyAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"SettlementStrategyUpdated"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSettlementStrategyUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'SettlementStrategyUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'SettlementStrategyUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'SettlementStrategyUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"SynthUnwrapped"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSynthUnwrappedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'SynthUnwrapped'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'SynthUnwrapped',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'SynthUnwrapped'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"SynthWrapped"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonSynthWrappedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'SynthWrapped'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'SynthWrapped',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'SynthWrapped'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"WrapperSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonWrapperSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'WrapperSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'WrapperSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'WrapperSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"AsyncFixedFeeSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonAsyncFixedFeeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'AsyncFixedFeeSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'AsyncFixedFeeSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'AsyncFixedFeeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"AtomicFixedFeeSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonAtomicFixedFeeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'AtomicFixedFeeSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'AtomicFixedFeeSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'AtomicFixedFeeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"FeeCollectorSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonFeeCollectorSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'FeeCollectorSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'FeeCollectorSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'FeeCollectorSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"MarketSkewScaleSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonMarketSkewScaleSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'MarketSkewScaleSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'MarketSkewScaleSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'MarketSkewScaleSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"MarketUtilizationFeesSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonMarketUtilizationFeesSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'MarketUtilizationFeesSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'MarketUtilizationFeesSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'MarketUtilizationFeesSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"TransactorFixedFeeSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonTransactorFixedFeeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'TransactorFixedFeeSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'TransactorFixedFeeSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'TransactorFixedFeeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"WrapperFeesSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonWrapperFeesSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'WrapperFeesSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'WrapperFeesSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'WrapperFeesSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"FeatureFlagAllowAllSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonFeatureFlagAllowAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'FeatureFlagAllowAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'FeatureFlagAllowAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'FeatureFlagAllowAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistAdded"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonFeatureFlagAllowlistAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'FeatureFlagAllowlistAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'FeatureFlagAllowlistAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'FeatureFlagAllowlistAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistRemoved"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonFeatureFlagAllowlistRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'FeatureFlagAllowlistRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'FeatureFlagAllowlistRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'FeatureFlagAllowlistRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"FeatureFlagDeniersReset"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonFeatureFlagDeniersResetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'FeatureFlagDeniersReset'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'FeatureFlagDeniersReset',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'FeatureFlagDeniersReset'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketProxyJsonABI}__ and `eventName` set to `"FeatureFlagDenyAllSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketProxyJsonFeatureFlagDenyAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
      'FeatureFlagDenyAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketProxyJsonABI,
    address: deploymentsSpotMarketSpotMarketProxyJsonAddress,
    eventName: 'FeatureFlagDenyAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketProxyJsonABI,
    'FeatureFlagDenyAllSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getMarketOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetMarketOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getMarketOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getMarketOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getMarketOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getMarketOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getSynth"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetSynth<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getSynth'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getSynth',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getSynth',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getSynth',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"locked"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonLocked<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'locked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'locked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'locked',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'locked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"reportedDebt"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonReportedDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'reportedDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'reportedDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'reportedDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'reportedDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSupportsInterface<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getAsyncOrderClaim"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetAsyncOrderClaim<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getAsyncOrderClaim'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getAsyncOrderClaim',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getAsyncOrderClaim',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getAsyncOrderClaim',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"PRECISION"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonPrecision<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'PRECISION'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'PRECISION',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'PRECISION',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'PRECISION',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getSettlementStrategy"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetSettlementStrategy<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getSettlementStrategy'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getSettlementStrategy',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getSettlementStrategy',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getSettlementStrategy',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getDeniers"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetDeniers<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getDeniers'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getDeniers',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getDeniers',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getDeniers',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetFeatureFlagAllowAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getFeatureFlagAllowAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getFeatureFlagAllowAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getFeatureFlagAllowAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getFeatureFlagAllowAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetFeatureFlagAllowlist<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getFeatureFlagAllowlist'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getFeatureFlagAllowlist',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getFeatureFlagAllowlist',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getFeatureFlagAllowlist',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"getFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonGetFeatureFlagDenyAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getFeatureFlagDenyAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'getFeatureFlagDenyAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'getFeatureFlagDenyAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'getFeatureFlagDenyAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"isFeatureAllowed"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonIsFeatureAllowed<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'isFeatureAllowed'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'isFeatureAllowed',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'isFeatureAllowed',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'isFeatureAllowed',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"acceptMarketOwnership"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonAcceptMarketOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'acceptMarketOwnership'
        >['abi'],
        'acceptMarketOwnership'
      > & { functionName?: 'acceptMarketOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'acceptMarketOwnership'
      > & {
        abi?: never
        functionName?: 'acceptMarketOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'acceptMarketOwnership'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'acceptMarketOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"createSynth"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonCreateSynth<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'createSynth'
        >['abi'],
        'createSynth'
      > & { functionName?: 'createSynth' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'createSynth'
      > & {
        abi?: never
        functionName?: 'createSynth'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'createSynth'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'createSynth',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"nominateMarketOwner"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonNominateMarketOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'nominateMarketOwner'
        >['abi'],
        'nominateMarketOwner'
      > & { functionName?: 'nominateMarketOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'nominateMarketOwner'
      > & {
        abi?: never
        functionName?: 'nominateMarketOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'nominateMarketOwner'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'nominateMarketOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"updatePriceData"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonUpdatePriceData<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'updatePriceData'
        >['abi'],
        'updatePriceData'
      > & { functionName?: 'updatePriceData' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'updatePriceData'
      > & {
        abi?: never
        functionName?: 'updatePriceData'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'updatePriceData'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'updatePriceData',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"upgradeSynthImpl"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonUpgradeSynthImpl<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'upgradeSynthImpl'
        >['abi'],
        'upgradeSynthImpl'
      > & { functionName?: 'upgradeSynthImpl' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'upgradeSynthImpl'
      > & {
        abi?: never
        functionName?: 'upgradeSynthImpl'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'upgradeSynthImpl'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'upgradeSynthImpl',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"buy"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonBuy<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'buy'
        >['abi'],
        'buy'
      > & { functionName?: 'buy' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'buy'
      > & {
        abi?: never
        functionName?: 'buy'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'buy'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'buy',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"sell"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSell<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'sell'
        >['abi'],
        'sell'
      > & { functionName?: 'sell' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'sell'
      > & {
        abi?: never
        functionName?: 'sell'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'sell'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'sell',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"cancelOrder"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonCancelOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'cancelOrder'
        >['abi'],
        'cancelOrder'
      > & { functionName?: 'cancelOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'cancelOrder'
      > & {
        abi?: never
        functionName?: 'cancelOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'cancelOrder'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'cancelOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"commitOrder"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonCommitOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'commitOrder'
        >['abi'],
        'commitOrder'
      > & { functionName?: 'commitOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'commitOrder'
      > & {
        abi?: never
        functionName?: 'commitOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'commitOrder'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'commitOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"settleOrder"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSettleOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'settleOrder'
        >['abi'],
        'settleOrder'
      > & { functionName?: 'settleOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'settleOrder'
      > & {
        abi?: never
        functionName?: 'settleOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'settleOrder'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'settleOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"settlePythOrder"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSettlePythOrder<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'settlePythOrder'
        >['abi'],
        'settlePythOrder'
      > & { functionName?: 'settlePythOrder' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'settlePythOrder'
      > & {
        abi?: never
        functionName?: 'settlePythOrder'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'settlePythOrder'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'settlePythOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"addSettlementStrategy"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonAddSettlementStrategy<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'addSettlementStrategy'
        >['abi'],
        'addSettlementStrategy'
      > & { functionName?: 'addSettlementStrategy' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'addSettlementStrategy'
      > & {
        abi?: never
        functionName?: 'addSettlementStrategy'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'addSettlementStrategy'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'addSettlementStrategy',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setSettlementStrategyEnabled"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetSettlementStrategyEnabled<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setSettlementStrategyEnabled'
        >['abi'],
        'setSettlementStrategyEnabled'
      > & { functionName?: 'setSettlementStrategyEnabled' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setSettlementStrategyEnabled'
      > & {
        abi?: never
        functionName?: 'setSettlementStrategyEnabled'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setSettlementStrategyEnabled'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setSettlementStrategyEnabled',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setWrapper"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetWrapper<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setWrapper'
        >['abi'],
        'setWrapper'
      > & { functionName?: 'setWrapper' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setWrapper'
      > & {
        abi?: never
        functionName?: 'setWrapper'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setWrapper'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setWrapper',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"unwrap"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonUnwrap<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'unwrap'
        >['abi'],
        'unwrap'
      > & { functionName?: 'unwrap' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'unwrap'
      > & {
        abi?: never
        functionName?: 'unwrap'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'unwrap'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'unwrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"wrap"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonWrap<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'wrap'
        >['abi'],
        'wrap'
      > & { functionName?: 'wrap' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'wrap'
      > & {
        abi?: never
        functionName?: 'wrap'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'wrap'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'wrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setAsyncFixedFee"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetAsyncFixedFee<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setAsyncFixedFee'
        >['abi'],
        'setAsyncFixedFee'
      > & { functionName?: 'setAsyncFixedFee' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setAsyncFixedFee'
      > & {
        abi?: never
        functionName?: 'setAsyncFixedFee'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setAsyncFixedFee'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setAsyncFixedFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setAtomicFixedFee"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetAtomicFixedFee<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setAtomicFixedFee'
        >['abi'],
        'setAtomicFixedFee'
      > & { functionName?: 'setAtomicFixedFee' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setAtomicFixedFee'
      > & {
        abi?: never
        functionName?: 'setAtomicFixedFee'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setAtomicFixedFee'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setAtomicFixedFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setCustomTransactorFees"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetCustomTransactorFees<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setCustomTransactorFees'
        >['abi'],
        'setCustomTransactorFees'
      > & { functionName?: 'setCustomTransactorFees' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setCustomTransactorFees'
      > & {
        abi?: never
        functionName?: 'setCustomTransactorFees'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setCustomTransactorFees'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setCustomTransactorFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setFeeCollector"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetFeeCollector<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setFeeCollector'
        >['abi'],
        'setFeeCollector'
      > & { functionName?: 'setFeeCollector' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setFeeCollector'
      > & {
        abi?: never
        functionName?: 'setFeeCollector'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setFeeCollector'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setFeeCollector',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setMarketSkewScale"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetMarketSkewScale<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setMarketSkewScale'
        >['abi'],
        'setMarketSkewScale'
      > & { functionName?: 'setMarketSkewScale' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setMarketSkewScale'
      > & {
        abi?: never
        functionName?: 'setMarketSkewScale'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setMarketSkewScale'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setMarketSkewScale',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setMarketUtilizationFees"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetMarketUtilizationFees<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setMarketUtilizationFees'
        >['abi'],
        'setMarketUtilizationFees'
      > & { functionName?: 'setMarketUtilizationFees' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setMarketUtilizationFees'
      > & {
        abi?: never
        functionName?: 'setMarketUtilizationFees'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setMarketUtilizationFees'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setMarketUtilizationFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setWrapperFees"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetWrapperFees<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setWrapperFees'
        >['abi'],
        'setWrapperFees'
      > & { functionName?: 'setWrapperFees' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setWrapperFees'
      > & {
        abi?: never
        functionName?: 'setWrapperFees'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setWrapperFees'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setWrapperFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonAddToFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'addToFeatureFlagAllowlist'
        >['abi'],
        'addToFeatureFlagAllowlist'
      > & { functionName?: 'addToFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'addToFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'addToFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'addToFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonRemoveFromFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'removeFromFeatureFlagAllowlist'
        >['abi'],
        'removeFromFeatureFlagAllowlist'
      > & { functionName?: 'removeFromFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'removeFromFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'removeFromFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'removeFromFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetDeniers<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setDeniers'
        >['abi'],
        'setDeniers'
      > & { functionName?: 'setDeniers' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setDeniers'
      > & {
        abi?: never
        functionName?: 'setDeniers'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setDeniers'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetFeatureFlagAllowAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setFeatureFlagAllowAll'
        >['abi'],
        'setFeatureFlagAllowAll'
      > & { functionName?: 'setFeatureFlagAllowAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setFeatureFlagAllowAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagAllowAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setFeatureFlagAllowAll'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSetFeatureFlagDenyAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
          'setFeatureFlagDenyAll'
        >['abi'],
        'setFeatureFlagDenyAll'
      > & { functionName?: 'setFeatureFlagDenyAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
        'setFeatureFlagDenyAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagDenyAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setFeatureFlagDenyAll'
  >({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"acceptMarketOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonAcceptMarketOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'acceptMarketOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'acceptMarketOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'acceptMarketOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"createSynth"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonCreateSynth(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'createSynth'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'createSynth',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'createSynth'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"nominateMarketOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonNominateMarketOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'nominateMarketOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'nominateMarketOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'nominateMarketOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"updatePriceData"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonUpdatePriceData(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'updatePriceData'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'updatePriceData',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'updatePriceData'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"upgradeSynthImpl"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonUpgradeSynthImpl(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'upgradeSynthImpl'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'upgradeSynthImpl',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'upgradeSynthImpl'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"buy"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonBuy(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'buy'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'buy',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'buy'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"sell"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSell(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'sell'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'sell',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'sell'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"cancelOrder"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonCancelOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'cancelOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'cancelOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'cancelOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"commitOrder"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonCommitOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'commitOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'commitOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'commitOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"settleOrder"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSettleOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'settleOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'settleOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'settleOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"settlePythOrder"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSettlePythOrder(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'settlePythOrder'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'settlePythOrder',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'settlePythOrder'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"addSettlementStrategy"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonAddSettlementStrategy(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'addSettlementStrategy'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'addSettlementStrategy',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'addSettlementStrategy'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setSettlementStrategyEnabled"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetSettlementStrategyEnabled(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setSettlementStrategyEnabled'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setSettlementStrategyEnabled',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setSettlementStrategyEnabled'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setWrapper"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetWrapper(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setWrapper'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setWrapper',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setWrapper'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"unwrap"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonUnwrap(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'unwrap'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'unwrap',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'unwrap'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"wrap"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonWrap(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'wrap'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'wrap',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'wrap'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setAsyncFixedFee"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetAsyncFixedFee(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setAsyncFixedFee'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setAsyncFixedFee',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setAsyncFixedFee'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setAtomicFixedFee"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetAtomicFixedFee(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setAtomicFixedFee'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setAtomicFixedFee',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setAtomicFixedFee'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setCustomTransactorFees"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetCustomTransactorFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setCustomTransactorFees'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setCustomTransactorFees',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setCustomTransactorFees'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setFeeCollector"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetFeeCollector(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setFeeCollector'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setFeeCollector',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setFeeCollector'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setMarketSkewScale"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetMarketSkewScale(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setMarketSkewScale'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setMarketSkewScale',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setMarketSkewScale'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setMarketUtilizationFees"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetMarketUtilizationFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setMarketUtilizationFees'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setMarketUtilizationFees',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setMarketUtilizationFees'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setWrapperFees"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetWrapperFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setWrapperFees'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setWrapperFees',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setWrapperFees'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonAddToFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'addToFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'addToFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonRemoveFromFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'removeFromFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'removeFromFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetDeniers(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setDeniers'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setDeniers'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetFeatureFlagAllowAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setFeatureFlagAllowAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setFeatureFlagAllowAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function usePrepareDeploymentsSpotMarketSpotMarketRouterJsonSetFeatureFlagDenyAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'setFeatureFlagDenyAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'setFeatureFlagDenyAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"MarketOwnerChanged"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonMarketOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'MarketOwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'MarketOwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'MarketOwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"MarketOwnerNominated"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonMarketOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'MarketOwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'MarketOwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'MarketOwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"SynthImplementationUpgraded"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSynthImplementationUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'SynthImplementationUpgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'SynthImplementationUpgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'SynthImplementationUpgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"SynthPriceDataUpdated"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSynthPriceDataUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'SynthPriceDataUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'SynthPriceDataUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'SynthPriceDataUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"SynthRegistered"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSynthRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'SynthRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'SynthRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'SynthRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"SynthBought"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSynthBoughtEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'SynthBought'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'SynthBought',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'SynthBought'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"SynthSold"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSynthSoldEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'SynthSold'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'SynthSold',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'SynthSold'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"OrderCancelled"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonOrderCancelledEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'OrderCancelled'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'OrderCancelled',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'OrderCancelled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"OrderCommitted"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonOrderCommittedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'OrderCommitted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'OrderCommitted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'OrderCommitted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"OrderSettled"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonOrderSettledEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'OrderSettled'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'OrderSettled',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'OrderSettled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"SettlementStrategyAdded"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSettlementStrategyAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'SettlementStrategyAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'SettlementStrategyAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'SettlementStrategyAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"SettlementStrategyUpdated"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSettlementStrategyUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'SettlementStrategyUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'SettlementStrategyUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'SettlementStrategyUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"SynthUnwrapped"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSynthUnwrappedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'SynthUnwrapped'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'SynthUnwrapped',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'SynthUnwrapped'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"SynthWrapped"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonSynthWrappedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'SynthWrapped'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'SynthWrapped',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'SynthWrapped'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"WrapperSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonWrapperSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'WrapperSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'WrapperSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'WrapperSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"AsyncFixedFeeSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonAsyncFixedFeeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'AsyncFixedFeeSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'AsyncFixedFeeSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'AsyncFixedFeeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"AtomicFixedFeeSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonAtomicFixedFeeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'AtomicFixedFeeSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'AtomicFixedFeeSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'AtomicFixedFeeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"FeeCollectorSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonFeeCollectorSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'FeeCollectorSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'FeeCollectorSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'FeeCollectorSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"MarketSkewScaleSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonMarketSkewScaleSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'MarketSkewScaleSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'MarketSkewScaleSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'MarketSkewScaleSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"MarketUtilizationFeesSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonMarketUtilizationFeesSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'MarketUtilizationFeesSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'MarketUtilizationFeesSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'MarketUtilizationFeesSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"TransactorFixedFeeSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonTransactorFixedFeeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'TransactorFixedFeeSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'TransactorFixedFeeSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'TransactorFixedFeeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"WrapperFeesSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonWrapperFeesSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'WrapperFeesSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'WrapperFeesSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'WrapperFeesSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"FeatureFlagAllowAllSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonFeatureFlagAllowAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'FeatureFlagAllowAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'FeatureFlagAllowAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'FeatureFlagAllowAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistAdded"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonFeatureFlagAllowlistAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'FeatureFlagAllowlistAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'FeatureFlagAllowlistAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'FeatureFlagAllowlistAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistRemoved"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonFeatureFlagAllowlistRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'FeatureFlagAllowlistRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'FeatureFlagAllowlistRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'FeatureFlagAllowlistRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"FeatureFlagDeniersReset"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonFeatureFlagDeniersResetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'FeatureFlagDeniersReset'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'FeatureFlagDeniersReset',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'FeatureFlagDeniersReset'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSpotMarketRouterJsonABI}__ and `eventName` set to `"FeatureFlagDenyAllSet"`.
 */
export function useDeploymentsSpotMarketSpotMarketRouterJsonFeatureFlagDenyAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
      'FeatureFlagDenyAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSpotMarketRouterJsonABI,
    address: deploymentsSpotMarketSpotMarketRouterJsonAddress,
    eventName: 'FeatureFlagDenyAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSpotMarketRouterJsonABI,
    'FeatureFlagDenyAllSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"allowance"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonAllowance<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'allowance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'allowance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'allowance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"decayRate"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonDecayRate<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'decayRate'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'decayRate',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'decayRate',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'decayRate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"totalShares"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonTotalShares<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'totalShares'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'totalShares',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'totalShares',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'totalShares',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"advanceEpoch"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonAdvanceEpoch<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'advanceEpoch'
        >['abi'],
        'advanceEpoch'
      > & { functionName?: 'advanceEpoch' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'advanceEpoch'
      > & {
        abi?: never
        functionName?: 'advanceEpoch'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'advanceEpoch'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'advanceEpoch',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'approve'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'burn'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonDecreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'decreaseAllowance'
      > & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'decreaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonIncreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'increaseAllowance'
      > & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'increaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'mint'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"setDecayRate"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonSetDecayRate<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'setDecayRate'
        >['abi'],
        'setDecayRate'
      > & { functionName?: 'setDecayRate' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'setDecayRate'
      > & {
        abi?: never
        functionName?: 'setDecayRate'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'setDecayRate'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'setDecayRate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'transfer'
        >['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'transfer'
      > & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'transfer'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthRouterJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthRouterJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"advanceEpoch"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonAdvanceEpoch(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'advanceEpoch'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'advanceEpoch',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'advanceEpoch'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'decreaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'increaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"setDecayRate"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonSetDecayRate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'setDecayRate'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'setDecayRate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'setDecayRate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'transfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'transfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthRouterJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthRouterJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSpotMarketSynthRouterJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthRouterJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthRouterJsonABI,
    address: deploymentsSpotMarketSynthRouterJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthRouterJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"allowance"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonAllowance<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'allowance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'allowance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'allowance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"decayRate"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonDecayRate<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'decayRate'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'decayRate',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'decayRate',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'decayRate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"totalShares"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonTotalShares<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'totalShares'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'totalShares',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'totalShares',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'totalShares',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"advanceEpoch"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonAdvanceEpoch<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'advanceEpoch'
        >['abi'],
        'advanceEpoch'
      > & { functionName?: 'advanceEpoch' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'advanceEpoch'
      > & {
        abi?: never
        functionName?: 'advanceEpoch'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'advanceEpoch'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'advanceEpoch',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'approve'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'burn'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonDecreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'decreaseAllowance'
      > & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'decreaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonIncreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'increaseAllowance'
      > & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'increaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'mint'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"setDecayRate"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonSetDecayRate<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'setDecayRate'
        >['abi'],
        'setDecayRate'
      > & { functionName?: 'setDecayRate' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'setDecayRate'
      > & {
        abi?: never
        functionName?: 'setDecayRate'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'setDecayRate'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'setDecayRate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'transfer'
        >['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'transfer'
      > & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'transfer'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"advanceEpoch"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonAdvanceEpoch(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'advanceEpoch'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'advanceEpoch',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'advanceEpoch'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'decreaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'increaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"setDecayRate"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonSetDecayRate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'setDecayRate'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'setDecayRate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'setDecayRate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'transfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'transfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthTokenModuleJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthTokenModuleJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSpotMarketSynthTokenModuleJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthTokenModuleJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthTokenModuleJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketWrapperModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketWrapperModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketWrapperModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketWrapperModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__ and `functionName` set to `"setWrapper"`.
 */
export function useDeploymentsSpotMarketWrapperModuleJsonSetWrapper<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketWrapperModuleJsonABI,
          'setWrapper'
        >['abi'],
        'setWrapper'
      > & { functionName?: 'setWrapper' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketWrapperModuleJsonABI,
        'setWrapper'
      > & {
        abi?: never
        functionName?: 'setWrapper'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    'setWrapper'
  >({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    functionName: 'setWrapper',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__ and `functionName` set to `"unwrap"`.
 */
export function useDeploymentsSpotMarketWrapperModuleJsonUnwrap<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketWrapperModuleJsonABI,
          'unwrap'
        >['abi'],
        'unwrap'
      > & { functionName?: 'unwrap' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketWrapperModuleJsonABI,
        'unwrap'
      > & {
        abi?: never
        functionName?: 'unwrap'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    'unwrap'
  >({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    functionName: 'unwrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__ and `functionName` set to `"wrap"`.
 */
export function useDeploymentsSpotMarketWrapperModuleJsonWrap<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketWrapperModuleJsonABI,
          'wrap'
        >['abi'],
        'wrap'
      > & { functionName?: 'wrap' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketWrapperModuleJsonABI,
        'wrap'
      > & {
        abi?: never
        functionName?: 'wrap'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    'wrap'
  >({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    functionName: 'wrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketWrapperModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketWrapperModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__ and `functionName` set to `"setWrapper"`.
 */
export function usePrepareDeploymentsSpotMarketWrapperModuleJsonSetWrapper(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketWrapperModuleJsonABI,
      'setWrapper'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    functionName: 'setWrapper',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    'setWrapper'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__ and `functionName` set to `"unwrap"`.
 */
export function usePrepareDeploymentsSpotMarketWrapperModuleJsonUnwrap(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketWrapperModuleJsonABI,
      'unwrap'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    functionName: 'unwrap',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    'unwrap'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__ and `functionName` set to `"wrap"`.
 */
export function usePrepareDeploymentsSpotMarketWrapperModuleJsonWrap(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketWrapperModuleJsonABI,
      'wrap'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    functionName: 'wrap',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    'wrap'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketWrapperModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketWrapperModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__ and `eventName` set to `"SynthUnwrapped"`.
 */
export function useDeploymentsSpotMarketWrapperModuleJsonSynthUnwrappedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketWrapperModuleJsonABI,
      'SynthUnwrapped'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    eventName: 'SynthUnwrapped',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    'SynthUnwrapped'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__ and `eventName` set to `"SynthWrapped"`.
 */
export function useDeploymentsSpotMarketWrapperModuleJsonSynthWrappedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketWrapperModuleJsonABI,
      'SynthWrapped'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    eventName: 'SynthWrapped',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    'SynthWrapped'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketWrapperModuleJsonABI}__ and `eventName` set to `"WrapperSet"`.
 */
export function useDeploymentsSpotMarketWrapperModuleJsonWrapperSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketWrapperModuleJsonABI,
      'WrapperSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketWrapperModuleJsonABI,
    address: deploymentsSpotMarketWrapperModuleJsonAddress,
    eventName: 'WrapperSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketWrapperModuleJsonABI,
    'WrapperSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"getAccountLastInteraction"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonGetAccountLastInteraction<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'getAccountLastInteraction'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'getAccountLastInteraction',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'getAccountLastInteraction',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'getAccountLastInteraction',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"getAccountOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonGetAccountOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'getAccountOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'getAccountOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'getAccountOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'getAccountOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"getAccountPermissions"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonGetAccountPermissions<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'getAccountPermissions'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'getAccountPermissions',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'getAccountPermissions',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'getAccountPermissions',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"getAccountTokenAddress"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonGetAccountTokenAddress<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'getAccountTokenAddress'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'getAccountTokenAddress',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'getAccountTokenAddress',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'getAccountTokenAddress',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"hasPermission"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonHasPermission<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'hasPermission'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'hasPermission',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'hasPermission',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'hasPermission',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"isAuthorized"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonIsAuthorized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'isAuthorized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'isAuthorized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'isAuthorized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'isAuthorized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonCreateAccount<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
          'createAccount'
        >['abi'],
        'createAccount'
      > & { functionName?: 'createAccount' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
        'createAccount'
      > & {
        abi?: never
        functionName?: 'createAccount'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'createAccount'
  >({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonGrantPermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
          'grantPermission'
        >['abi'],
        'grantPermission'
      > & { functionName?: 'grantPermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
        'grantPermission'
      > & {
        abi?: never
        functionName?: 'grantPermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'grantPermission'
  >({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonNotifyAccountTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
          'notifyAccountTransfer'
        >['abi'],
        'notifyAccountTransfer'
      > & { functionName?: 'notifyAccountTransfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
        'notifyAccountTransfer'
      > & {
        abi?: never
        functionName?: 'notifyAccountTransfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'notifyAccountTransfer'
  >({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonRenouncePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
          'renouncePermission'
        >['abi'],
        'renouncePermission'
      > & { functionName?: 'renouncePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
        'renouncePermission'
      > & {
        abi?: never
        functionName?: 'renouncePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'renouncePermission'
  >({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonRevokePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
          'revokePermission'
        >['abi'],
        'revokePermission'
      > & { functionName?: 'revokePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
        'revokePermission'
      > & {
        abi?: never
        functionName?: 'revokePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'revokePermission'
  >({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountModuleJsonCreateAccount(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'createAccount'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'createAccount'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountModuleJsonGrantPermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'grantPermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'grantPermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountModuleJsonNotifyAccountTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'notifyAccountTransfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'notifyAccountTransfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountModuleJsonRenouncePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'renouncePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'renouncePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountModuleJsonRevokePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'revokePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'revokePermission'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `eventName` set to `"AccountCreated"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonAccountCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'AccountCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    eventName: 'AccountCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'AccountCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `eventName` set to `"PermissionGranted"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonPermissionGrantedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'PermissionGranted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    eventName: 'PermissionGranted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'PermissionGranted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountModuleJsonABI}__ and `eventName` set to `"PermissionRevoked"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountModuleJsonPermissionRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
      'PermissionRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountModuleJsonAddress,
    eventName: 'PermissionRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountModuleJsonABI,
    'PermissionRevoked'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"getApproved"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonGetApproved<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'getApproved'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'getApproved',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'getApproved',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonIsApprovedForAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'isApprovedForAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"ownerOf"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonOwnerOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'ownerOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'ownerOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'ownerOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonSupportsInterface<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"tokenByIndex"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonTokenByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'tokenByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'tokenByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'tokenByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonTokenOfOwnerByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'tokenOfOwnerByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'tokenOfOwnerByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'tokenOfOwnerByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"tokenURI"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonTokenUri<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'tokenURI'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'tokenURI',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'tokenURI',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'approve'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'burn'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'mint'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonSafeMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'safeMint'
        >['abi'],
        'safeMint'
      > & { functionName?: 'safeMint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'safeMint'
      > & {
        abi?: never
        functionName?: 'safeMint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'safeMint'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonSafeTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & { functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'safeTransferFrom'
      > & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'safeTransferFrom'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonSetApprovalForAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & { functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'setApprovalForAll'
      > & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'setApprovalForAll'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonSafeMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'safeMint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'safeMint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'safeTransferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'setApprovalForAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountProxyJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'ApprovalForAll'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'ApprovalForAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountProxyJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountProxyJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    address: deploymentsSpotMarketSynthetixAccountProxyJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountProxyJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"getApproved"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonGetApproved<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'getApproved'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'getApproved',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'getApproved',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonIsApprovedForAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'isApprovedForAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"ownerOf"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonOwnerOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'ownerOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'ownerOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'ownerOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonSupportsInterface<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"tokenByIndex"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonTokenByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'tokenByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'tokenByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'tokenByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonTokenOfOwnerByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'tokenOfOwnerByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'tokenOfOwnerByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'tokenOfOwnerByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"tokenURI"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonTokenUri<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'tokenURI'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'tokenURI',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'tokenURI',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'approve'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'burn'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'mint'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonSafeMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'safeMint'
        >['abi'],
        'safeMint'
      > & { functionName?: 'safeMint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'safeMint'
      > & {
        abi?: never
        functionName?: 'safeMint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'safeMint'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonSafeTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & { functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'safeTransferFrom'
      > & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'safeTransferFrom'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonSetApprovalForAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & { functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'setApprovalForAll'
      > & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'setApprovalForAll'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonSafeMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'safeMint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'safeMint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'safeTransferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'setApprovalForAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountRouterJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'ApprovalForAll'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'ApprovalForAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountRouterJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountRouterJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    address: deploymentsSpotMarketSynthetixAccountRouterJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountRouterJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"getApproved"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonGetApproved<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'getApproved'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'getApproved',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'getApproved',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonIsApprovedForAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'isApprovedForAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"ownerOf"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonOwnerOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'ownerOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'ownerOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'ownerOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSupportsInterface<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"tokenByIndex"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonTokenByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'tokenByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'tokenByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'tokenByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonTokenOfOwnerByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'tokenOfOwnerByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'tokenOfOwnerByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'tokenOfOwnerByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"tokenURI"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonTokenUri<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'tokenURI'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'tokenURI',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'tokenURI',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'approve'
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'burn'
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'mint'
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSafeMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          'safeMint'
        >['abi'],
        'safeMint'
      > & { functionName?: 'safeMint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        'safeMint'
      > & {
        abi?: never
        functionName?: 'safeMint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'safeMint'
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSafeTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & { functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        'safeTransferFrom'
      > & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'safeTransferFrom'
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSetApprovalForAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & { functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        'setApprovalForAll'
      > & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'setApprovalForAll'
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSafeMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'safeMint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'safeMint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'safeTransferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'setApprovalForAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAccountTokenModuleJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'ApprovalForAll'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'ApprovalForAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSpotMarketSynthetixAccountTokenModuleJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAccountTokenModuleJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAccountTokenModuleJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAssociateDebtModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAssociateDebtModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixAssociateDebtModuleJsonAssociateDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
          'associateDebt'
        >['abi'],
        'associateDebt'
      > & { functionName?: 'associateDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
        'associateDebt'
      > & {
        abi?: never
        functionName?: 'associateDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    'associateDebt'
  >({
    abi: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAssociateDebtModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAssociateDebtModuleJsonAssociateDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
      'associateDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    'associateDebt'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAssociateDebtModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI}__ and `eventName` set to `"DebtAssociated"`.
 */
export function useDeploymentsSpotMarketSynthetixAssociateDebtModuleJsonDebtAssociatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
      'DebtAssociated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociateDebtModuleJsonAddress,
    eventName: 'DebtAssociated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAssociateDebtModuleJsonABI,
    'DebtAssociated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixAssociatedSystemsModuleJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"getCollateralConfiguration"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonGetCollateralConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
      'getCollateralConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'getCollateralConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"getCollateralConfigurations"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonGetCollateralConfigurations<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralConfigurations'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
      'getCollateralConfigurations',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'getCollateralConfigurations',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralConfigurations',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"getCollateralPrice"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonGetCollateralPrice<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralPrice'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
      'getCollateralPrice',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'getCollateralPrice',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralPrice',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonConfigureCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
          'configureCollateral'
        >['abi'],
        'configureCollateral'
      > & { functionName?: 'configureCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
        'configureCollateral'
      > & {
        abi?: never
        functionName?: 'configureCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    'configureCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonConfigureCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
      'configureCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    'configureCollateral'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI}__ and `eventName` set to `"CollateralConfigured"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
      'CollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    address:
      deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonAddress,
    eventName: 'CollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCollateralConfigurationModuleJsonABI,
    'CollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"getAccountAvailableCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonGetAccountAvailableCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'getAccountAvailableCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'getAccountAvailableCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'getAccountAvailableCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'getAccountAvailableCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"getAccountCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonGetAccountCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'getAccountCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'getAccountCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'getAccountCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'getAccountCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"getLocks"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonGetLocks<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'getLocks'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'getLocks',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'getLocks',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'getLocks',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonCleanExpiredLocks<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
          'cleanExpiredLocks'
        >['abi'],
        'cleanExpiredLocks'
      > & { functionName?: 'cleanExpiredLocks' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
        'cleanExpiredLocks'
      > & {
        abi?: never
        functionName?: 'cleanExpiredLocks'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'cleanExpiredLocks'
  >({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonCreateLock<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
          'createLock'
        >['abi'],
        'createLock'
      > & { functionName?: 'createLock' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
        'createLock'
      > & {
        abi?: never
        functionName?: 'createLock'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'createLock'
  >({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'createLock',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonDeposit<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
          'deposit'
        >['abi'],
        'deposit'
      > & { functionName?: 'deposit' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
        'deposit'
      > & {
        abi?: never
        functionName?: 'deposit'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'deposit'
  >({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'deposit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonWithdraw<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
          'withdraw'
        >['abi'],
        'withdraw'
      > & { functionName?: 'withdraw' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
        'withdraw'
      > & {
        abi?: never
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'withdraw'
  >({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCollateralModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCollateralModuleJsonCleanExpiredLocks(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'cleanExpiredLocks'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'cleanExpiredLocks'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCollateralModuleJsonCreateLock(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'createLock'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'createLock',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'createLock'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCollateralModuleJsonDeposit(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'deposit'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'deposit',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'deposit'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCollateralModuleJsonWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'withdraw'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'withdraw'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `eventName` set to `"CollateralLockCreated"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonCollateralLockCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'CollateralLockCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    eventName: 'CollateralLockCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'CollateralLockCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `eventName` set to `"CollateralLockExpired"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonCollateralLockExpiredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'CollateralLockExpired'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    eventName: 'CollateralLockExpired',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'CollateralLockExpired'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `eventName` set to `"Deposited"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'Deposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    eventName: 'Deposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'Deposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCollateralModuleJsonABI}__ and `eventName` set to `"Withdrawn"`.
 */
export function useDeploymentsSpotMarketSynthetixCollateralModuleJsonWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
      'Withdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixCollateralModuleJsonAddress,
    eventName: 'Withdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCollateralModuleJsonABI,
    'Withdrawn'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getDeniers"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetDeniers<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getDeniers'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getDeniers',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getDeniers',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getDeniers',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetFeatureFlagAllowAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getFeatureFlagAllowAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getFeatureFlagAllowAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getFeatureFlagAllowAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getFeatureFlagAllowAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetFeatureFlagAllowlist<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getFeatureFlagAllowlist'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getFeatureFlagAllowlist',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getFeatureFlagAllowlist',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getFeatureFlagAllowlist',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetFeatureFlagDenyAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getFeatureFlagDenyAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getFeatureFlagDenyAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getFeatureFlagDenyAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getFeatureFlagDenyAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isFeatureAllowed"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonIsFeatureAllowed<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isFeatureAllowed'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'isFeatureAllowed',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'isFeatureAllowed',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isFeatureAllowed',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountLastInteraction"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetAccountLastInteraction<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountLastInteraction'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getAccountLastInteraction',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountLastInteraction',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountLastInteraction',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetAccountOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getAccountOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountPermissions"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetAccountPermissions<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountPermissions'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getAccountPermissions',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountPermissions',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountPermissions',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountTokenAddress"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetAccountTokenAddress<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountTokenAddress'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getAccountTokenAddress',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountTokenAddress',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountTokenAddress',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"hasPermission"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonHasPermission<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'hasPermission'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'hasPermission',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'hasPermission',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'hasPermission',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isAuthorized"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonIsAuthorized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isAuthorized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'isAuthorized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'isAuthorized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isAuthorized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountAvailableCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetAccountAvailableCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountAvailableCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getAccountAvailableCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountAvailableCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountAvailableCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetAccountCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getAccountCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getAccountCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getLocks"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetLocks<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getLocks'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getLocks',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getLocks',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getLocks',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getCollateralConfiguration"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetCollateralConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getCollateralConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getCollateralConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getCollateralConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getCollateralConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getCollateralConfigurations"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetCollateralConfigurations<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getCollateralConfigurations'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getCollateralConfigurations',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getCollateralConfigurations',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getCollateralConfigurations',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getCollateralPrice"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetCollateralPrice<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getCollateralPrice'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getCollateralPrice',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getCollateralPrice',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getCollateralPrice',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketCollateralAmount"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetMarketCollateralAmount<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketCollateralAmount'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getMarketCollateralAmount',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketCollateralAmount',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketCollateralAmount',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketCollateralValue"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetMarketCollateralValue<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketCollateralValue'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getMarketCollateralValue',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketCollateralValue',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketCollateralValue',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMaximumMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetMaximumMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMaximumMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getMaximumMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMaximumMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMaximumMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketNetIssuance"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetMarketNetIssuance<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketNetIssuance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getMarketNetIssuance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketNetIssuance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketNetIssuance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketReportedDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetMarketReportedDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketReportedDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getMarketReportedDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketReportedDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketReportedDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketTotalDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetMarketTotalDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketTotalDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getMarketTotalDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketTotalDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketTotalDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getWithdrawableMarketUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetWithdrawableMarketUsd<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getWithdrawableMarketUsd'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getWithdrawableMarketUsd',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getWithdrawableMarketUsd',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getWithdrawableMarketUsd',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isMarketCapacityLocked"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonIsMarketCapacityLocked<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isMarketCapacityLocked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'isMarketCapacityLocked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'isMarketCapacityLocked',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isMarketCapacityLocked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getApprovedPools"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetApprovedPools<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getApprovedPools'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getApprovedPools',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getApprovedPools',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getApprovedPools',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPreferredPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetPreferredPool<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPreferredPool'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getPreferredPool',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPreferredPool',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPreferredPool',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMinLiquidityRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetMinLiquidityRatio<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMinLiquidityRatio'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getMinLiquidityRatio',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMinLiquidityRatio',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMinLiquidityRatio',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getNominatedPoolOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetNominatedPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getNominatedPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getNominatedPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getNominatedPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getNominatedPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPoolConfiguration"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetPoolConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPoolConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getPoolConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPoolConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPoolConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPoolName"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetPoolName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPoolName'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getPoolName',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPoolName',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPoolName',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPoolOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getRewardRate"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetRewardRate<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getRewardRate'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getRewardRate',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getRewardRate',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getRewardRate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getConfig"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetConfig<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getConfig'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getConfig',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getConfig',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getConfig',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetPositionCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPositionCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getPositionCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPositionCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetVaultCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getVaultCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getVaultCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getVaultCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonAddToFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'addToFeatureFlagAllowlist'
        >['abi'],
        'addToFeatureFlagAllowlist'
      > & { functionName?: 'addToFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'addToFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'addToFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'addToFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRemoveFromFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'removeFromFeatureFlagAllowlist'
        >['abi'],
        'removeFromFeatureFlagAllowlist'
      > & { functionName?: 'removeFromFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'removeFromFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'removeFromFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'removeFromFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonSetDeniers<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'setDeniers'
        >['abi'],
        'setDeniers'
      > & { functionName?: 'setDeniers' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'setDeniers'
      > & {
        abi?: never
        functionName?: 'setDeniers'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setDeniers'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonSetFeatureFlagAllowAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'setFeatureFlagAllowAll'
        >['abi'],
        'setFeatureFlagAllowAll'
      > & { functionName?: 'setFeatureFlagAllowAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'setFeatureFlagAllowAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagAllowAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setFeatureFlagAllowAll'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonSetFeatureFlagDenyAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'setFeatureFlagDenyAll'
        >['abi'],
        'setFeatureFlagDenyAll'
      > & { functionName?: 'setFeatureFlagDenyAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'setFeatureFlagDenyAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagDenyAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setFeatureFlagDenyAll'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonCreateAccount<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'createAccount'
        >['abi'],
        'createAccount'
      > & { functionName?: 'createAccount' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'createAccount'
      > & {
        abi?: never
        functionName?: 'createAccount'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'createAccount'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGrantPermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'grantPermission'
        >['abi'],
        'grantPermission'
      > & { functionName?: 'grantPermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'grantPermission'
      > & {
        abi?: never
        functionName?: 'grantPermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'grantPermission'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonNotifyAccountTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'notifyAccountTransfer'
        >['abi'],
        'notifyAccountTransfer'
      > & { functionName?: 'notifyAccountTransfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'notifyAccountTransfer'
      > & {
        abi?: never
        functionName?: 'notifyAccountTransfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'notifyAccountTransfer'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRenouncePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'renouncePermission'
        >['abi'],
        'renouncePermission'
      > & { functionName?: 'renouncePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'renouncePermission'
      > & {
        abi?: never
        functionName?: 'renouncePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'renouncePermission'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRevokePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'revokePermission'
        >['abi'],
        'revokePermission'
      > & { functionName?: 'revokePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'revokePermission'
      > & {
        abi?: never
        functionName?: 'revokePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'revokePermission'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonAssociateDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'associateDebt'
        >['abi'],
        'associateDebt'
      > & { functionName?: 'associateDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'associateDebt'
      > & {
        abi?: never
        functionName?: 'associateDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'associateDebt'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonCleanExpiredLocks<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'cleanExpiredLocks'
        >['abi'],
        'cleanExpiredLocks'
      > & { functionName?: 'cleanExpiredLocks' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'cleanExpiredLocks'
      > & {
        abi?: never
        functionName?: 'cleanExpiredLocks'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'cleanExpiredLocks'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonCreateLock<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'createLock'
        >['abi'],
        'createLock'
      > & { functionName?: 'createLock' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'createLock'
      > & {
        abi?: never
        functionName?: 'createLock'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'createLock'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'createLock',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonDeposit<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'deposit'
        >['abi'],
        'deposit'
      > & { functionName?: 'deposit' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'deposit'
      > & {
        abi?: never
        functionName?: 'deposit'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'deposit'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'deposit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonWithdraw<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'withdraw'
        >['abi'],
        'withdraw'
      > & { functionName?: 'withdraw' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'withdraw'
      > & {
        abi?: never
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'withdraw'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonConfigureCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'configureCollateral'
        >['abi'],
        'configureCollateral'
      > & { functionName?: 'configureCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'configureCollateral'
      > & {
        abi?: never
        functionName?: 'configureCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'configureCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonBurnUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'burnUsd'
        >['abi'],
        'burnUsd'
      > & { functionName?: 'burnUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'burnUsd'
      > & {
        abi?: never
        functionName?: 'burnUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'burnUsd'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonMintUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'mintUsd'
        >['abi'],
        'mintUsd'
      > & { functionName?: 'mintUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'mintUsd'
      > & {
        abi?: never
        functionName?: 'mintUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'mintUsd'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonIsPositionLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'isPositionLiquidatable'
        >['abi'],
        'isPositionLiquidatable'
      > & { functionName?: 'isPositionLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'isPositionLiquidatable'
      > & {
        abi?: never
        functionName?: 'isPositionLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isPositionLiquidatable'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonIsVaultLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'isVaultLiquidatable'
        >['abi'],
        'isVaultLiquidatable'
      > & { functionName?: 'isVaultLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'isVaultLiquidatable'
      > & {
        abi?: never
        functionName?: 'isVaultLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isVaultLiquidatable'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonLiquidate<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'liquidate'
        >['abi'],
        'liquidate'
      > & { functionName?: 'liquidate' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'liquidate'
      > & {
        abi?: never
        functionName?: 'liquidate'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'liquidate'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonLiquidateVault<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'liquidateVault'
        >['abi'],
        'liquidateVault'
      > & { functionName?: 'liquidateVault' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'liquidateVault'
      > & {
        abi?: never
        functionName?: 'liquidateVault'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'liquidateVault'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonConfigureMaximumMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'configureMaximumMarketCollateral'
        >['abi'],
        'configureMaximumMarketCollateral'
      > & { functionName?: 'configureMaximumMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'configureMaximumMarketCollateral'
      > & {
        abi?: never
        functionName?: 'configureMaximumMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'configureMaximumMarketCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonDepositMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'depositMarketCollateral'
        >['abi'],
        'depositMarketCollateral'
      > & { functionName?: 'depositMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'depositMarketCollateral'
      > & {
        abi?: never
        functionName?: 'depositMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'depositMarketCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonWithdrawMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'withdrawMarketCollateral'
        >['abi'],
        'withdrawMarketCollateral'
      > & { functionName?: 'withdrawMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'withdrawMarketCollateral'
      > & {
        abi?: never
        functionName?: 'withdrawMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'withdrawMarketCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonDepositMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'depositMarketUsd'
        >['abi'],
        'depositMarketUsd'
      > & { functionName?: 'depositMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'depositMarketUsd'
      > & {
        abi?: never
        functionName?: 'depositMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'depositMarketUsd'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonDistributeDebtToPools<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'distributeDebtToPools'
        >['abi'],
        'distributeDebtToPools'
      > & { functionName?: 'distributeDebtToPools' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'distributeDebtToPools'
      > & {
        abi?: never
        functionName?: 'distributeDebtToPools'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'distributeDebtToPools'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetMarketDebtPerShare<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'getMarketDebtPerShare'
        >['abi'],
        'getMarketDebtPerShare'
      > & { functionName?: 'getMarketDebtPerShare' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'getMarketDebtPerShare'
      > & {
        abi?: never
        functionName?: 'getMarketDebtPerShare'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketDebtPerShare'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRegisterMarket<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'registerMarket'
        >['abi'],
        'registerMarket'
      > & { functionName?: 'registerMarket' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'registerMarket'
      > & {
        abi?: never
        functionName?: 'registerMarket'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'registerMarket'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonWithdrawMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'withdrawMarketUsd'
        >['abi'],
        'withdrawMarketUsd'
      > & { functionName?: 'withdrawMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'withdrawMarketUsd'
      > & {
        abi?: never
        functionName?: 'withdrawMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'withdrawMarketUsd'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonMulticall<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'multicall'
        >['abi'],
        'multicall'
      > & { functionName?: 'multicall' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'multicall'
      > & {
        abi?: never
        functionName?: 'multicall'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'multicall'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'multicall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonAddApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'addApprovedPool'
        >['abi'],
        'addApprovedPool'
      > & { functionName?: 'addApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'addApprovedPool'
      > & {
        abi?: never
        functionName?: 'addApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'addApprovedPool'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRemoveApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'removeApprovedPool'
        >['abi'],
        'removeApprovedPool'
      > & { functionName?: 'removeApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'removeApprovedPool'
      > & {
        abi?: never
        functionName?: 'removeApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'removeApprovedPool'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonSetPreferredPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'setPreferredPool'
        >['abi'],
        'setPreferredPool'
      > & { functionName?: 'setPreferredPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'setPreferredPool'
      > & {
        abi?: never
        functionName?: 'setPreferredPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setPreferredPool'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonAcceptPoolOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'acceptPoolOwnership'
        >['abi'],
        'acceptPoolOwnership'
      > & { functionName?: 'acceptPoolOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'acceptPoolOwnership'
      > & {
        abi?: never
        functionName?: 'acceptPoolOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'acceptPoolOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonCreatePool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'createPool'
        >['abi'],
        'createPool'
      > & { functionName?: 'createPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'createPool'
      > & {
        abi?: never
        functionName?: 'createPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'createPool'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'createPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonNominatePoolOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'nominatePoolOwner'
        >['abi'],
        'nominatePoolOwner'
      > & { functionName?: 'nominatePoolOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'nominatePoolOwner'
      > & {
        abi?: never
        functionName?: 'nominatePoolOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'nominatePoolOwner'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRenouncePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'renouncePoolNomination'
        >['abi'],
        'renouncePoolNomination'
      > & { functionName?: 'renouncePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'renouncePoolNomination'
      > & {
        abi?: never
        functionName?: 'renouncePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'renouncePoolNomination'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRevokePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'revokePoolNomination'
        >['abi'],
        'revokePoolNomination'
      > & { functionName?: 'revokePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'revokePoolNomination'
      > & {
        abi?: never
        functionName?: 'revokePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'revokePoolNomination'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonSetMinLiquidityRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'setMinLiquidityRatio'
        >['abi'],
        'setMinLiquidityRatio'
      > & { functionName?: 'setMinLiquidityRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'setMinLiquidityRatio'
      > & {
        abi?: never
        functionName?: 'setMinLiquidityRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setMinLiquidityRatio'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonSetPoolConfiguration<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'setPoolConfiguration'
        >['abi'],
        'setPoolConfiguration'
      > & { functionName?: 'setPoolConfiguration' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'setPoolConfiguration'
      > & {
        abi?: never
        functionName?: 'setPoolConfiguration'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setPoolConfiguration'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonSetPoolName<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'setPoolName'
        >['abi'],
        'setPoolName'
      > & { functionName?: 'setPoolName' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'setPoolName'
      > & {
        abi?: never
        functionName?: 'setPoolName'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setPoolName'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonClaimRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'claimRewards'
        >['abi'],
        'claimRewards'
      > & { functionName?: 'claimRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'claimRewards'
      > & {
        abi?: never
        functionName?: 'claimRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'claimRewards'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonDistributeRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'distributeRewards'
        >['abi'],
        'distributeRewards'
      > & { functionName?: 'distributeRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'distributeRewards'
      > & {
        abi?: never
        functionName?: 'distributeRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'distributeRewards'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRegisterRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'registerRewardsDistributor'
        >['abi'],
        'registerRewardsDistributor'
      > & { functionName?: 'registerRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'registerRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'registerRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'registerRewardsDistributor'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRemoveRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'removeRewardsDistributor'
        >['abi'],
        'removeRewardsDistributor'
      > & { functionName?: 'removeRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'removeRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'removeRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'removeRewardsDistributor'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonUpdateRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'updateRewards'
        >['abi'],
        'updateRewards'
      > & { functionName?: 'updateRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'updateRewards'
      > & {
        abi?: never
        functionName?: 'updateRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'updateRewards'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonConfigureOracleManager<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'configureOracleManager'
        >['abi'],
        'configureOracleManager'
      > & { functionName?: 'configureOracleManager' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'configureOracleManager'
      > & {
        abi?: never
        functionName?: 'configureOracleManager'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'configureOracleManager'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRegisterCcip<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'registerCcip'
        >['abi'],
        'registerCcip'
      > & { functionName?: 'registerCcip' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'registerCcip'
      > & {
        abi?: never
        functionName?: 'registerCcip'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'registerCcip'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonSetConfig<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'setConfig'
        >['abi'],
        'setConfig'
      > & { functionName?: 'setConfig' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'setConfig'
      > & {
        abi?: never
        functionName?: 'setConfig'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setConfig'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonDelegateCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'delegateCollateral'
        >['abi'],
        'delegateCollateral'
      > & { functionName?: 'delegateCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'delegateCollateral'
      > & {
        abi?: never
        functionName?: 'delegateCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'delegateCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetPosition<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'getPosition'
        >['abi'],
        'getPosition'
      > & { functionName?: 'getPosition' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'getPosition'
      > & {
        abi?: never
        functionName?: 'getPosition'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPosition'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetPositionCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'getPositionCollateralRatio'
        >['abi'],
        'getPositionCollateralRatio'
      > & { functionName?: 'getPositionCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'getPositionCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getPositionCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPositionCollateralRatio'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetPositionDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'getPositionDebt'
        >['abi'],
        'getPositionDebt'
      > & { functionName?: 'getPositionDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'getPositionDebt'
      > & {
        abi?: never
        functionName?: 'getPositionDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPositionDebt'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetVaultCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'getVaultCollateralRatio'
        >['abi'],
        'getVaultCollateralRatio'
      > & { functionName?: 'getVaultCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'getVaultCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getVaultCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getVaultCollateralRatio'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonGetVaultDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
          'getVaultDebt'
        >['abi'],
        'getVaultDebt'
      > & { functionName?: 'getVaultDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
        'getVaultDebt'
      > & {
        abi?: never
        functionName?: 'getVaultDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getVaultDebt'
  >({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonAddToFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'addToFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'addToFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRemoveFromFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'removeFromFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'removeFromFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonSetDeniers(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'setDeniers'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setDeniers'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonSetFeatureFlagAllowAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'setFeatureFlagAllowAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setFeatureFlagAllowAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonSetFeatureFlagDenyAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'setFeatureFlagDenyAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setFeatureFlagDenyAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonCreateAccount(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'createAccount'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'createAccount'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonGrantPermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'grantPermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'grantPermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonNotifyAccountTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'notifyAccountTransfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'notifyAccountTransfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRenouncePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'renouncePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'renouncePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRevokePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'revokePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'revokePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonAssociateDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'associateDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'associateDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonCleanExpiredLocks(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'cleanExpiredLocks'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'cleanExpiredLocks'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonCreateLock(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'createLock'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'createLock',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'createLock'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonDeposit(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'deposit'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'deposit',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'deposit'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'withdraw'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'withdraw'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonConfigureCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'configureCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'configureCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonBurnUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'burnUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'burnUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonMintUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'mintUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'mintUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonIsPositionLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'isPositionLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isPositionLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonIsVaultLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'isVaultLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'isVaultLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonLiquidate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'liquidate'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'liquidate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonLiquidateVault(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'liquidateVault'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'liquidateVault'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonConfigureMaximumMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'configureMaximumMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'configureMaximumMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonDepositMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'depositMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'depositMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonWithdrawMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'withdrawMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'withdrawMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonDepositMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'depositMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'depositMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonDistributeDebtToPools(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'distributeDebtToPools'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'distributeDebtToPools'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonGetMarketDebtPerShare(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getMarketDebtPerShare'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getMarketDebtPerShare'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRegisterMarket(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'registerMarket'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'registerMarket'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonWithdrawMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'withdrawMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'withdrawMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonMulticall(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'multicall'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'multicall',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'multicall'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonAddApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'addApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'addApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRemoveApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'removeApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'removeApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonSetPreferredPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'setPreferredPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setPreferredPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonAcceptPoolOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'acceptPoolOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'acceptPoolOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonCreatePool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'createPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'createPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'createPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonNominatePoolOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'nominatePoolOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'nominatePoolOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRenouncePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'renouncePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'renouncePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRevokePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'revokePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'revokePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonSetMinLiquidityRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'setMinLiquidityRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setMinLiquidityRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonSetPoolConfiguration(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'setPoolConfiguration'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setPoolConfiguration'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonSetPoolName(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'setPoolName'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setPoolName'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonClaimRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'claimRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'claimRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonDistributeRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'distributeRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'distributeRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRegisterRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'registerRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'registerRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRemoveRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'removeRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'removeRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonUpdateRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'updateRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'updateRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonConfigureOracleManager(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'configureOracleManager'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'configureOracleManager'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonRegisterCcip(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'registerCcip'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'registerCcip'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonSetConfig(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'setConfig'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'setConfig'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonDelegateCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'delegateCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'delegateCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonGetPosition(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getPosition'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPosition'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonGetPositionCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getPositionCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPositionCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonGetPositionDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getPositionDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getPositionDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonGetVaultCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getVaultCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getVaultCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreProxyJsonGetVaultDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'getVaultDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'getVaultDebt'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagAllowAllSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonFeatureFlagAllowAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'FeatureFlagAllowAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagAllowAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'FeatureFlagAllowAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistAdded"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonFeatureFlagAllowlistAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'FeatureFlagAllowlistAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagAllowlistAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'FeatureFlagAllowlistAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistRemoved"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonFeatureFlagAllowlistRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'FeatureFlagAllowlistRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagAllowlistRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'FeatureFlagAllowlistRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagDeniersReset"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonFeatureFlagDeniersResetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'FeatureFlagDeniersReset'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagDeniersReset',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'FeatureFlagDeniersReset'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagDenyAllSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonFeatureFlagDenyAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'FeatureFlagDenyAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagDenyAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'FeatureFlagDenyAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"AccountCreated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonAccountCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'AccountCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'AccountCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'AccountCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PermissionGranted"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPermissionGrantedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PermissionGranted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PermissionGranted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PermissionGranted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PermissionRevoked"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPermissionRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PermissionRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PermissionRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PermissionRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"DebtAssociated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonDebtAssociatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'DebtAssociated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'DebtAssociated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'DebtAssociated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"CollateralLockCreated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonCollateralLockCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'CollateralLockCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'CollateralLockCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'CollateralLockCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"CollateralLockExpired"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonCollateralLockExpiredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'CollateralLockExpired'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'CollateralLockExpired',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'CollateralLockExpired'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"Deposited"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'Deposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'Deposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'Deposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"Withdrawn"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'Withdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'Withdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'Withdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"CollateralConfigured"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'CollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'CollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'CollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"UsdBurned"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonUsdBurnedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'UsdBurned'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'UsdBurned',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'UsdBurned'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"UsdMinted"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonUsdMintedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'UsdMinted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'UsdMinted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'UsdMinted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"Liquidation"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'Liquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'Liquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'Liquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"VaultLiquidation"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonVaultLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'VaultLiquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'VaultLiquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'VaultLiquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketCollateralDeposited"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonMarketCollateralDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'MarketCollateralDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'MarketCollateralDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'MarketCollateralDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketCollateralWithdrawn"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonMarketCollateralWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'MarketCollateralWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'MarketCollateralWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'MarketCollateralWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MaximumMarketCollateralConfigured"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonMaximumMarketCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'MaximumMarketCollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'MaximumMarketCollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'MaximumMarketCollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketRegistered"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonMarketRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'MarketRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'MarketRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'MarketRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketUsdDeposited"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonMarketUsdDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'MarketUsdDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'MarketUsdDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'MarketUsdDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketUsdWithdrawn"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonMarketUsdWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'MarketUsdWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'MarketUsdWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'MarketUsdWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolApprovedAdded"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPoolApprovedAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PoolApprovedAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PoolApprovedAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PoolApprovedAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolApprovedRemoved"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPoolApprovedRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PoolApprovedRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PoolApprovedRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PoolApprovedRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PreferredPoolSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPreferredPoolSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PreferredPoolSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PreferredPoolSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PreferredPoolSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolConfigurationSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPoolConfigurationSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PoolConfigurationSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PoolConfigurationSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PoolConfigurationSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolCreated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPoolCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PoolCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PoolCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PoolCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolNameUpdated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPoolNameUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PoolNameUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PoolNameUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PoolNameUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolNominationRenounced"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPoolNominationRenouncedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PoolNominationRenounced'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PoolNominationRenounced',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PoolNominationRenounced'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolNominationRevoked"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPoolNominationRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PoolNominationRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PoolNominationRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PoolNominationRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolOwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPoolOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PoolOwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PoolOwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PoolOwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolOwnershipAccepted"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonPoolOwnershipAcceptedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'PoolOwnershipAccepted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'PoolOwnershipAccepted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'PoolOwnershipAccepted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"RewardsClaimed"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRewardsClaimedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'RewardsClaimed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'RewardsClaimed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'RewardsClaimed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"RewardsDistributed"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRewardsDistributedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'RewardsDistributed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'RewardsDistributed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'RewardsDistributed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"RewardsDistributorRegistered"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRewardsDistributorRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'RewardsDistributorRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'RewardsDistributorRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'RewardsDistributorRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"RewardsDistributorRemoved"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonRewardsDistributorRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'RewardsDistributorRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'RewardsDistributorRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'RewardsDistributorRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreProxyJsonABI}__ and `eventName` set to `"DelegationUpdated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreProxyJsonDelegationUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
      'DelegationUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixCoreProxyJsonAddress,
    eventName: 'DelegationUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreProxyJsonABI,
    'DelegationUpdated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getDeniers"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetDeniers<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getDeniers'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getDeniers',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getDeniers',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getDeniers',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetFeatureFlagAllowAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getFeatureFlagAllowAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getFeatureFlagAllowAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getFeatureFlagAllowAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getFeatureFlagAllowAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetFeatureFlagAllowlist<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getFeatureFlagAllowlist'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getFeatureFlagAllowlist',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getFeatureFlagAllowlist',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getFeatureFlagAllowlist',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetFeatureFlagDenyAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getFeatureFlagDenyAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getFeatureFlagDenyAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getFeatureFlagDenyAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getFeatureFlagDenyAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isFeatureAllowed"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonIsFeatureAllowed<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isFeatureAllowed'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'isFeatureAllowed',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'isFeatureAllowed',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isFeatureAllowed',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountLastInteraction"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetAccountLastInteraction<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountLastInteraction'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getAccountLastInteraction',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountLastInteraction',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountLastInteraction',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetAccountOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getAccountOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountPermissions"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetAccountPermissions<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountPermissions'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getAccountPermissions',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountPermissions',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountPermissions',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountTokenAddress"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetAccountTokenAddress<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountTokenAddress'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getAccountTokenAddress',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountTokenAddress',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountTokenAddress',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"hasPermission"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonHasPermission<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'hasPermission'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'hasPermission',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'hasPermission',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'hasPermission',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isAuthorized"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonIsAuthorized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isAuthorized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'isAuthorized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'isAuthorized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isAuthorized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountAvailableCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetAccountAvailableCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountAvailableCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getAccountAvailableCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountAvailableCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountAvailableCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetAccountCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getAccountCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getAccountCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getLocks"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetLocks<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getLocks'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getLocks',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getLocks',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getLocks',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getCollateralConfiguration"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetCollateralConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getCollateralConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getCollateralConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getCollateralConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getCollateralConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getCollateralConfigurations"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetCollateralConfigurations<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getCollateralConfigurations'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getCollateralConfigurations',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getCollateralConfigurations',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getCollateralConfigurations',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getCollateralPrice"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetCollateralPrice<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getCollateralPrice'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getCollateralPrice',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getCollateralPrice',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getCollateralPrice',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketCollateralAmount"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetMarketCollateralAmount<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketCollateralAmount'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getMarketCollateralAmount',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketCollateralAmount',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketCollateralAmount',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketCollateralValue"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetMarketCollateralValue<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketCollateralValue'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getMarketCollateralValue',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketCollateralValue',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketCollateralValue',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMaximumMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetMaximumMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMaximumMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getMaximumMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMaximumMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMaximumMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketNetIssuance"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetMarketNetIssuance<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketNetIssuance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getMarketNetIssuance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketNetIssuance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketNetIssuance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketReportedDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetMarketReportedDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketReportedDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getMarketReportedDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketReportedDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketReportedDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketTotalDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetMarketTotalDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketTotalDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getMarketTotalDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketTotalDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketTotalDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getWithdrawableMarketUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetWithdrawableMarketUsd<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getWithdrawableMarketUsd'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getWithdrawableMarketUsd',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getWithdrawableMarketUsd',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getWithdrawableMarketUsd',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isMarketCapacityLocked"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonIsMarketCapacityLocked<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isMarketCapacityLocked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'isMarketCapacityLocked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'isMarketCapacityLocked',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isMarketCapacityLocked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getApprovedPools"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetApprovedPools<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getApprovedPools'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getApprovedPools',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getApprovedPools',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getApprovedPools',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPreferredPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetPreferredPool<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPreferredPool'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getPreferredPool',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPreferredPool',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPreferredPool',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMinLiquidityRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetMinLiquidityRatio<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMinLiquidityRatio'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getMinLiquidityRatio',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMinLiquidityRatio',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMinLiquidityRatio',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getNominatedPoolOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetNominatedPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getNominatedPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getNominatedPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getNominatedPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getNominatedPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPoolConfiguration"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetPoolConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPoolConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getPoolConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPoolConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPoolConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPoolName"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetPoolName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPoolName'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getPoolName',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPoolName',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPoolName',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPoolOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getRewardRate"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetRewardRate<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getRewardRate'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getRewardRate',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getRewardRate',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getRewardRate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getConfig"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetConfig<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getConfig'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getConfig',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getConfig',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getConfig',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetPositionCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPositionCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getPositionCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPositionCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetVaultCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getVaultCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getVaultCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getVaultCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonAddToFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'addToFeatureFlagAllowlist'
        >['abi'],
        'addToFeatureFlagAllowlist'
      > & { functionName?: 'addToFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'addToFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'addToFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'addToFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRemoveFromFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'removeFromFeatureFlagAllowlist'
        >['abi'],
        'removeFromFeatureFlagAllowlist'
      > & { functionName?: 'removeFromFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'removeFromFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'removeFromFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'removeFromFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonSetDeniers<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'setDeniers'
        >['abi'],
        'setDeniers'
      > & { functionName?: 'setDeniers' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'setDeniers'
      > & {
        abi?: never
        functionName?: 'setDeniers'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setDeniers'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonSetFeatureFlagAllowAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'setFeatureFlagAllowAll'
        >['abi'],
        'setFeatureFlagAllowAll'
      > & { functionName?: 'setFeatureFlagAllowAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'setFeatureFlagAllowAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagAllowAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setFeatureFlagAllowAll'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonSetFeatureFlagDenyAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'setFeatureFlagDenyAll'
        >['abi'],
        'setFeatureFlagDenyAll'
      > & { functionName?: 'setFeatureFlagDenyAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'setFeatureFlagDenyAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagDenyAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setFeatureFlagDenyAll'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonCreateAccount<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'createAccount'
        >['abi'],
        'createAccount'
      > & { functionName?: 'createAccount' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'createAccount'
      > & {
        abi?: never
        functionName?: 'createAccount'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'createAccount'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGrantPermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'grantPermission'
        >['abi'],
        'grantPermission'
      > & { functionName?: 'grantPermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'grantPermission'
      > & {
        abi?: never
        functionName?: 'grantPermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'grantPermission'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonNotifyAccountTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'notifyAccountTransfer'
        >['abi'],
        'notifyAccountTransfer'
      > & { functionName?: 'notifyAccountTransfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'notifyAccountTransfer'
      > & {
        abi?: never
        functionName?: 'notifyAccountTransfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'notifyAccountTransfer'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRenouncePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'renouncePermission'
        >['abi'],
        'renouncePermission'
      > & { functionName?: 'renouncePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'renouncePermission'
      > & {
        abi?: never
        functionName?: 'renouncePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'renouncePermission'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRevokePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'revokePermission'
        >['abi'],
        'revokePermission'
      > & { functionName?: 'revokePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'revokePermission'
      > & {
        abi?: never
        functionName?: 'revokePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'revokePermission'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonAssociateDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'associateDebt'
        >['abi'],
        'associateDebt'
      > & { functionName?: 'associateDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'associateDebt'
      > & {
        abi?: never
        functionName?: 'associateDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'associateDebt'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonCleanExpiredLocks<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'cleanExpiredLocks'
        >['abi'],
        'cleanExpiredLocks'
      > & { functionName?: 'cleanExpiredLocks' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'cleanExpiredLocks'
      > & {
        abi?: never
        functionName?: 'cleanExpiredLocks'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'cleanExpiredLocks'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonCreateLock<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'createLock'
        >['abi'],
        'createLock'
      > & { functionName?: 'createLock' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'createLock'
      > & {
        abi?: never
        functionName?: 'createLock'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'createLock'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'createLock',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonDeposit<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'deposit'
        >['abi'],
        'deposit'
      > & { functionName?: 'deposit' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'deposit'
      > & {
        abi?: never
        functionName?: 'deposit'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'deposit'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'deposit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonWithdraw<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'withdraw'
        >['abi'],
        'withdraw'
      > & { functionName?: 'withdraw' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'withdraw'
      > & {
        abi?: never
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'withdraw'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonConfigureCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'configureCollateral'
        >['abi'],
        'configureCollateral'
      > & { functionName?: 'configureCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'configureCollateral'
      > & {
        abi?: never
        functionName?: 'configureCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'configureCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonBurnUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'burnUsd'
        >['abi'],
        'burnUsd'
      > & { functionName?: 'burnUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'burnUsd'
      > & {
        abi?: never
        functionName?: 'burnUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'burnUsd'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonMintUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'mintUsd'
        >['abi'],
        'mintUsd'
      > & { functionName?: 'mintUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'mintUsd'
      > & {
        abi?: never
        functionName?: 'mintUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'mintUsd'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonIsPositionLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'isPositionLiquidatable'
        >['abi'],
        'isPositionLiquidatable'
      > & { functionName?: 'isPositionLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'isPositionLiquidatable'
      > & {
        abi?: never
        functionName?: 'isPositionLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isPositionLiquidatable'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonIsVaultLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'isVaultLiquidatable'
        >['abi'],
        'isVaultLiquidatable'
      > & { functionName?: 'isVaultLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'isVaultLiquidatable'
      > & {
        abi?: never
        functionName?: 'isVaultLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isVaultLiquidatable'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonLiquidate<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'liquidate'
        >['abi'],
        'liquidate'
      > & { functionName?: 'liquidate' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'liquidate'
      > & {
        abi?: never
        functionName?: 'liquidate'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'liquidate'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonLiquidateVault<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'liquidateVault'
        >['abi'],
        'liquidateVault'
      > & { functionName?: 'liquidateVault' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'liquidateVault'
      > & {
        abi?: never
        functionName?: 'liquidateVault'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'liquidateVault'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonConfigureMaximumMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'configureMaximumMarketCollateral'
        >['abi'],
        'configureMaximumMarketCollateral'
      > & { functionName?: 'configureMaximumMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'configureMaximumMarketCollateral'
      > & {
        abi?: never
        functionName?: 'configureMaximumMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'configureMaximumMarketCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonDepositMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'depositMarketCollateral'
        >['abi'],
        'depositMarketCollateral'
      > & { functionName?: 'depositMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'depositMarketCollateral'
      > & {
        abi?: never
        functionName?: 'depositMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'depositMarketCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonWithdrawMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'withdrawMarketCollateral'
        >['abi'],
        'withdrawMarketCollateral'
      > & { functionName?: 'withdrawMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'withdrawMarketCollateral'
      > & {
        abi?: never
        functionName?: 'withdrawMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'withdrawMarketCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonDepositMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'depositMarketUsd'
        >['abi'],
        'depositMarketUsd'
      > & { functionName?: 'depositMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'depositMarketUsd'
      > & {
        abi?: never
        functionName?: 'depositMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'depositMarketUsd'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonDistributeDebtToPools<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'distributeDebtToPools'
        >['abi'],
        'distributeDebtToPools'
      > & { functionName?: 'distributeDebtToPools' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'distributeDebtToPools'
      > & {
        abi?: never
        functionName?: 'distributeDebtToPools'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'distributeDebtToPools'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetMarketDebtPerShare<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'getMarketDebtPerShare'
        >['abi'],
        'getMarketDebtPerShare'
      > & { functionName?: 'getMarketDebtPerShare' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'getMarketDebtPerShare'
      > & {
        abi?: never
        functionName?: 'getMarketDebtPerShare'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketDebtPerShare'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRegisterMarket<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'registerMarket'
        >['abi'],
        'registerMarket'
      > & { functionName?: 'registerMarket' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'registerMarket'
      > & {
        abi?: never
        functionName?: 'registerMarket'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'registerMarket'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonWithdrawMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'withdrawMarketUsd'
        >['abi'],
        'withdrawMarketUsd'
      > & { functionName?: 'withdrawMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'withdrawMarketUsd'
      > & {
        abi?: never
        functionName?: 'withdrawMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'withdrawMarketUsd'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonMulticall<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'multicall'
        >['abi'],
        'multicall'
      > & { functionName?: 'multicall' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'multicall'
      > & {
        abi?: never
        functionName?: 'multicall'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'multicall'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'multicall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonAddApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'addApprovedPool'
        >['abi'],
        'addApprovedPool'
      > & { functionName?: 'addApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'addApprovedPool'
      > & {
        abi?: never
        functionName?: 'addApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'addApprovedPool'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRemoveApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'removeApprovedPool'
        >['abi'],
        'removeApprovedPool'
      > & { functionName?: 'removeApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'removeApprovedPool'
      > & {
        abi?: never
        functionName?: 'removeApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'removeApprovedPool'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonSetPreferredPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'setPreferredPool'
        >['abi'],
        'setPreferredPool'
      > & { functionName?: 'setPreferredPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'setPreferredPool'
      > & {
        abi?: never
        functionName?: 'setPreferredPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setPreferredPool'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonAcceptPoolOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'acceptPoolOwnership'
        >['abi'],
        'acceptPoolOwnership'
      > & { functionName?: 'acceptPoolOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'acceptPoolOwnership'
      > & {
        abi?: never
        functionName?: 'acceptPoolOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'acceptPoolOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonCreatePool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'createPool'
        >['abi'],
        'createPool'
      > & { functionName?: 'createPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'createPool'
      > & {
        abi?: never
        functionName?: 'createPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'createPool'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'createPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonNominatePoolOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'nominatePoolOwner'
        >['abi'],
        'nominatePoolOwner'
      > & { functionName?: 'nominatePoolOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'nominatePoolOwner'
      > & {
        abi?: never
        functionName?: 'nominatePoolOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'nominatePoolOwner'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRenouncePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'renouncePoolNomination'
        >['abi'],
        'renouncePoolNomination'
      > & { functionName?: 'renouncePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'renouncePoolNomination'
      > & {
        abi?: never
        functionName?: 'renouncePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'renouncePoolNomination'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRevokePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'revokePoolNomination'
        >['abi'],
        'revokePoolNomination'
      > & { functionName?: 'revokePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'revokePoolNomination'
      > & {
        abi?: never
        functionName?: 'revokePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'revokePoolNomination'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonSetMinLiquidityRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'setMinLiquidityRatio'
        >['abi'],
        'setMinLiquidityRatio'
      > & { functionName?: 'setMinLiquidityRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'setMinLiquidityRatio'
      > & {
        abi?: never
        functionName?: 'setMinLiquidityRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setMinLiquidityRatio'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonSetPoolConfiguration<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'setPoolConfiguration'
        >['abi'],
        'setPoolConfiguration'
      > & { functionName?: 'setPoolConfiguration' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'setPoolConfiguration'
      > & {
        abi?: never
        functionName?: 'setPoolConfiguration'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setPoolConfiguration'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonSetPoolName<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'setPoolName'
        >['abi'],
        'setPoolName'
      > & { functionName?: 'setPoolName' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'setPoolName'
      > & {
        abi?: never
        functionName?: 'setPoolName'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setPoolName'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonClaimRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'claimRewards'
        >['abi'],
        'claimRewards'
      > & { functionName?: 'claimRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'claimRewards'
      > & {
        abi?: never
        functionName?: 'claimRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'claimRewards'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonDistributeRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'distributeRewards'
        >['abi'],
        'distributeRewards'
      > & { functionName?: 'distributeRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'distributeRewards'
      > & {
        abi?: never
        functionName?: 'distributeRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'distributeRewards'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRegisterRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'registerRewardsDistributor'
        >['abi'],
        'registerRewardsDistributor'
      > & { functionName?: 'registerRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'registerRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'registerRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'registerRewardsDistributor'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRemoveRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'removeRewardsDistributor'
        >['abi'],
        'removeRewardsDistributor'
      > & { functionName?: 'removeRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'removeRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'removeRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'removeRewardsDistributor'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonUpdateRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'updateRewards'
        >['abi'],
        'updateRewards'
      > & { functionName?: 'updateRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'updateRewards'
      > & {
        abi?: never
        functionName?: 'updateRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'updateRewards'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonConfigureOracleManager<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'configureOracleManager'
        >['abi'],
        'configureOracleManager'
      > & { functionName?: 'configureOracleManager' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'configureOracleManager'
      > & {
        abi?: never
        functionName?: 'configureOracleManager'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'configureOracleManager'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRegisterCcip<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'registerCcip'
        >['abi'],
        'registerCcip'
      > & { functionName?: 'registerCcip' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'registerCcip'
      > & {
        abi?: never
        functionName?: 'registerCcip'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'registerCcip'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonSetConfig<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'setConfig'
        >['abi'],
        'setConfig'
      > & { functionName?: 'setConfig' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'setConfig'
      > & {
        abi?: never
        functionName?: 'setConfig'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setConfig'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonDelegateCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'delegateCollateral'
        >['abi'],
        'delegateCollateral'
      > & { functionName?: 'delegateCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'delegateCollateral'
      > & {
        abi?: never
        functionName?: 'delegateCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'delegateCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetPosition<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'getPosition'
        >['abi'],
        'getPosition'
      > & { functionName?: 'getPosition' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'getPosition'
      > & {
        abi?: never
        functionName?: 'getPosition'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPosition'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetPositionCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'getPositionCollateralRatio'
        >['abi'],
        'getPositionCollateralRatio'
      > & { functionName?: 'getPositionCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'getPositionCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getPositionCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPositionCollateralRatio'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetPositionDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'getPositionDebt'
        >['abi'],
        'getPositionDebt'
      > & { functionName?: 'getPositionDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'getPositionDebt'
      > & {
        abi?: never
        functionName?: 'getPositionDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPositionDebt'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetVaultCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'getVaultCollateralRatio'
        >['abi'],
        'getVaultCollateralRatio'
      > & { functionName?: 'getVaultCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'getVaultCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getVaultCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getVaultCollateralRatio'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonGetVaultDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
          'getVaultDebt'
        >['abi'],
        'getVaultDebt'
      > & { functionName?: 'getVaultDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
        'getVaultDebt'
      > & {
        abi?: never
        functionName?: 'getVaultDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getVaultDebt'
  >({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonAddToFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'addToFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'addToFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRemoveFromFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'removeFromFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'removeFromFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonSetDeniers(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'setDeniers'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setDeniers'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonSetFeatureFlagAllowAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'setFeatureFlagAllowAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setFeatureFlagAllowAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonSetFeatureFlagDenyAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'setFeatureFlagDenyAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setFeatureFlagDenyAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonCreateAccount(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'createAccount'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'createAccount'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonGrantPermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'grantPermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'grantPermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonNotifyAccountTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'notifyAccountTransfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'notifyAccountTransfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRenouncePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'renouncePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'renouncePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRevokePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'revokePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'revokePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonAssociateDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'associateDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'associateDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonCleanExpiredLocks(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'cleanExpiredLocks'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'cleanExpiredLocks'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonCreateLock(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'createLock'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'createLock',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'createLock'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonDeposit(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'deposit'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'deposit',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'deposit'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'withdraw'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'withdraw'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonConfigureCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'configureCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'configureCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonBurnUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'burnUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'burnUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonMintUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'mintUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'mintUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonIsPositionLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'isPositionLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isPositionLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonIsVaultLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'isVaultLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'isVaultLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonLiquidate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'liquidate'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'liquidate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonLiquidateVault(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'liquidateVault'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'liquidateVault'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonConfigureMaximumMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'configureMaximumMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'configureMaximumMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonDepositMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'depositMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'depositMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonWithdrawMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'withdrawMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'withdrawMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonDepositMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'depositMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'depositMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonDistributeDebtToPools(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'distributeDebtToPools'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'distributeDebtToPools'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonGetMarketDebtPerShare(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getMarketDebtPerShare'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getMarketDebtPerShare'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRegisterMarket(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'registerMarket'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'registerMarket'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonWithdrawMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'withdrawMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'withdrawMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonMulticall(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'multicall'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'multicall',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'multicall'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonAddApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'addApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'addApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRemoveApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'removeApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'removeApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonSetPreferredPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'setPreferredPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setPreferredPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonAcceptPoolOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'acceptPoolOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'acceptPoolOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonCreatePool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'createPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'createPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'createPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonNominatePoolOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'nominatePoolOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'nominatePoolOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRenouncePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'renouncePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'renouncePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRevokePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'revokePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'revokePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonSetMinLiquidityRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'setMinLiquidityRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setMinLiquidityRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonSetPoolConfiguration(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'setPoolConfiguration'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setPoolConfiguration'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonSetPoolName(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'setPoolName'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setPoolName'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonClaimRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'claimRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'claimRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonDistributeRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'distributeRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'distributeRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRegisterRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'registerRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'registerRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRemoveRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'removeRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'removeRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonUpdateRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'updateRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'updateRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonConfigureOracleManager(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'configureOracleManager'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'configureOracleManager'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonRegisterCcip(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'registerCcip'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'registerCcip'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonSetConfig(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'setConfig'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'setConfig'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonDelegateCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'delegateCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'delegateCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonGetPosition(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getPosition'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPosition'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonGetPositionCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getPositionCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPositionCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonGetPositionDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getPositionDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getPositionDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonGetVaultCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getVaultCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getVaultCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixCoreRouterJsonGetVaultDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'getVaultDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'getVaultDebt'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagAllowAllSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonFeatureFlagAllowAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'FeatureFlagAllowAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagAllowAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'FeatureFlagAllowAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistAdded"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonFeatureFlagAllowlistAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'FeatureFlagAllowlistAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagAllowlistAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'FeatureFlagAllowlistAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistRemoved"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonFeatureFlagAllowlistRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'FeatureFlagAllowlistRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagAllowlistRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'FeatureFlagAllowlistRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagDeniersReset"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonFeatureFlagDeniersResetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'FeatureFlagDeniersReset'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagDeniersReset',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'FeatureFlagDeniersReset'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagDenyAllSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonFeatureFlagDenyAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'FeatureFlagDenyAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagDenyAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'FeatureFlagDenyAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"AccountCreated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonAccountCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'AccountCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'AccountCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'AccountCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PermissionGranted"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPermissionGrantedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PermissionGranted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PermissionGranted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PermissionGranted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PermissionRevoked"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPermissionRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PermissionRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PermissionRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PermissionRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"DebtAssociated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonDebtAssociatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'DebtAssociated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'DebtAssociated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'DebtAssociated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"CollateralLockCreated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonCollateralLockCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'CollateralLockCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'CollateralLockCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'CollateralLockCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"CollateralLockExpired"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonCollateralLockExpiredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'CollateralLockExpired'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'CollateralLockExpired',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'CollateralLockExpired'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"Deposited"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'Deposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'Deposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'Deposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"Withdrawn"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'Withdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'Withdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'Withdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"CollateralConfigured"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'CollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'CollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'CollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"UsdBurned"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonUsdBurnedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'UsdBurned'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'UsdBurned',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'UsdBurned'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"UsdMinted"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonUsdMintedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'UsdMinted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'UsdMinted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'UsdMinted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"Liquidation"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'Liquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'Liquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'Liquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"VaultLiquidation"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonVaultLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'VaultLiquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'VaultLiquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'VaultLiquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketCollateralDeposited"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonMarketCollateralDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'MarketCollateralDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'MarketCollateralDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'MarketCollateralDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketCollateralWithdrawn"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonMarketCollateralWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'MarketCollateralWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'MarketCollateralWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'MarketCollateralWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MaximumMarketCollateralConfigured"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonMaximumMarketCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'MaximumMarketCollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'MaximumMarketCollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'MaximumMarketCollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketRegistered"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonMarketRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'MarketRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'MarketRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'MarketRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketUsdDeposited"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonMarketUsdDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'MarketUsdDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'MarketUsdDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'MarketUsdDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketUsdWithdrawn"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonMarketUsdWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'MarketUsdWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'MarketUsdWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'MarketUsdWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolApprovedAdded"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPoolApprovedAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PoolApprovedAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PoolApprovedAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PoolApprovedAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolApprovedRemoved"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPoolApprovedRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PoolApprovedRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PoolApprovedRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PoolApprovedRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PreferredPoolSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPreferredPoolSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PreferredPoolSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PreferredPoolSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PreferredPoolSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolConfigurationSet"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPoolConfigurationSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PoolConfigurationSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PoolConfigurationSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PoolConfigurationSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolCreated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPoolCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PoolCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PoolCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PoolCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolNameUpdated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPoolNameUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PoolNameUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PoolNameUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PoolNameUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolNominationRenounced"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPoolNominationRenouncedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PoolNominationRenounced'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PoolNominationRenounced',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PoolNominationRenounced'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolNominationRevoked"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPoolNominationRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PoolNominationRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PoolNominationRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PoolNominationRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolOwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPoolOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PoolOwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PoolOwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PoolOwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolOwnershipAccepted"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonPoolOwnershipAcceptedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'PoolOwnershipAccepted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'PoolOwnershipAccepted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'PoolOwnershipAccepted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"RewardsClaimed"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRewardsClaimedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'RewardsClaimed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'RewardsClaimed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'RewardsClaimed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"RewardsDistributed"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRewardsDistributedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'RewardsDistributed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'RewardsDistributed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'RewardsDistributed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"RewardsDistributorRegistered"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRewardsDistributorRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'RewardsDistributorRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'RewardsDistributorRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'RewardsDistributorRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"RewardsDistributorRemoved"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonRewardsDistributorRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'RewardsDistributorRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'RewardsDistributorRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'RewardsDistributorRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixCoreRouterJsonABI}__ and `eventName` set to `"DelegationUpdated"`.
 */
export function useDeploymentsSpotMarketSynthetixCoreRouterJsonDelegationUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
      'DelegationUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    address: deploymentsSpotMarketSynthetixCoreRouterJsonAddress,
    eventName: 'DelegationUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixCoreRouterJsonABI,
    'DelegationUpdated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"getDeniers"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonGetDeniers<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'getDeniers'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'getDeniers',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'getDeniers',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'getDeniers',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"getFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonGetFeatureFlagAllowAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'getFeatureFlagAllowAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'getFeatureFlagAllowAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"getFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonGetFeatureFlagAllowlist<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowlist'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'getFeatureFlagAllowlist',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'getFeatureFlagAllowlist',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowlist',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"getFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonGetFeatureFlagDenyAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagDenyAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'getFeatureFlagDenyAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'getFeatureFlagDenyAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagDenyAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"isFeatureAllowed"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonIsFeatureAllowed<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'isFeatureAllowed'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'isFeatureAllowed',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'isFeatureAllowed',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'isFeatureAllowed',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddToFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
          'addToFeatureFlagAllowlist'
        >['abi'],
        'addToFeatureFlagAllowlist'
      > & { functionName?: 'addToFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
        'addToFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'addToFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'addToFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonRemoveFromFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
          'removeFromFeatureFlagAllowlist'
        >['abi'],
        'removeFromFeatureFlagAllowlist'
      > & { functionName?: 'removeFromFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
        'removeFromFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'removeFromFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'removeFromFeatureFlagAllowlist'
  >({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonSetDeniers<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
          'setDeniers'
        >['abi'],
        'setDeniers'
      > & { functionName?: 'setDeniers' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
        'setDeniers'
      > & {
        abi?: never
        functionName?: 'setDeniers'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'setDeniers'
  >({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonSetFeatureFlagAllowAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
          'setFeatureFlagAllowAll'
        >['abi'],
        'setFeatureFlagAllowAll'
      > & { functionName?: 'setFeatureFlagAllowAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
        'setFeatureFlagAllowAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagAllowAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'setFeatureFlagAllowAll'
  >({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonSetFeatureFlagDenyAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
          'setFeatureFlagDenyAll'
        >['abi'],
        'setFeatureFlagDenyAll'
      > & { functionName?: 'setFeatureFlagDenyAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
        'setFeatureFlagDenyAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagDenyAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'setFeatureFlagDenyAll'
  >({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddToFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'addToFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'addToFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonRemoveFromFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'removeFromFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'removeFromFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonSetDeniers(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'setDeniers'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'setDeniers'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonSetFeatureFlagAllowAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'setFeatureFlagAllowAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'setFeatureFlagAllowAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonSetFeatureFlagDenyAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'setFeatureFlagDenyAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'setFeatureFlagDenyAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagAllowAllSet"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonFeatureFlagAllowAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagAllowAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagAllowAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagAllowAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistAdded"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonFeatureFlagAllowlistAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagAllowlistAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagAllowlistAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagAllowlistAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistRemoved"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonFeatureFlagAllowlistRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagAllowlistRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagAllowlistRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagAllowlistRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagDeniersReset"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonFeatureFlagDeniersResetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagDeniersReset'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagDeniersReset',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagDeniersReset'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagDenyAllSet"`.
 */
export function useDeploymentsSpotMarketSynthetixFeatureFlagModuleJsonFeatureFlagDenyAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagDenyAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSpotMarketSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagDenyAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagDenyAllSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialCoreProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialCoreProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialCoreProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialCoreProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialCoreProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialCoreProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialCoreProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSpotMarketSynthetixInitialCoreProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixInitialCoreProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialModuleBundleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialModuleBundleJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialModuleBundleJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialModuleBundleJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialModuleBundleJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixInitialModuleBundleJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixInitialModuleBundleJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSpotMarketSynthetixInitialModuleBundleJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixInitialModuleBundleJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixIssueUsdModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixIssueUsdModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixIssueUsdModuleJsonBurnUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
          'burnUsd'
        >['abi'],
        'burnUsd'
      > & { functionName?: 'burnUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
        'burnUsd'
      > & {
        abi?: never
        functionName?: 'burnUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    'burnUsd'
  >({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixIssueUsdModuleJsonMintUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
          'mintUsd'
        >['abi'],
        'mintUsd'
      > & { functionName?: 'mintUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
        'mintUsd'
      > & {
        abi?: never
        functionName?: 'mintUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    'mintUsd'
  >({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixIssueUsdModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixIssueUsdModuleJsonBurnUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
      'burnUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    'burnUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixIssueUsdModuleJsonMintUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
      'mintUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    'mintUsd'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixIssueUsdModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__ and `eventName` set to `"UsdBurned"`.
 */
export function useDeploymentsSpotMarketSynthetixIssueUsdModuleJsonUsdBurnedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
      'UsdBurned'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    eventName: 'UsdBurned',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    'UsdBurned'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI}__ and `eventName` set to `"UsdMinted"`.
 */
export function useDeploymentsSpotMarketSynthetixIssueUsdModuleJsonUsdMintedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
      'UsdMinted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSpotMarketSynthetixIssueUsdModuleJsonAddress,
    eventName: 'UsdMinted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixIssueUsdModuleJsonABI,
    'UsdMinted'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixLiquidationModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixLiquidationModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function useDeploymentsSpotMarketSynthetixLiquidationModuleJsonIsPositionLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
          'isPositionLiquidatable'
        >['abi'],
        'isPositionLiquidatable'
      > & { functionName?: 'isPositionLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
        'isPositionLiquidatable'
      > & {
        abi?: never
        functionName?: 'isPositionLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'isPositionLiquidatable'
  >({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function useDeploymentsSpotMarketSynthetixLiquidationModuleJsonIsVaultLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
          'isVaultLiquidatable'
        >['abi'],
        'isVaultLiquidatable'
      > & { functionName?: 'isVaultLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
        'isVaultLiquidatable'
      > & {
        abi?: never
        functionName?: 'isVaultLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'isVaultLiquidatable'
  >({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function useDeploymentsSpotMarketSynthetixLiquidationModuleJsonLiquidate<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
          'liquidate'
        >['abi'],
        'liquidate'
      > & { functionName?: 'liquidate' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
        'liquidate'
      > & {
        abi?: never
        functionName?: 'liquidate'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'liquidate'
  >({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function useDeploymentsSpotMarketSynthetixLiquidationModuleJsonLiquidateVault<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
          'liquidateVault'
        >['abi'],
        'liquidateVault'
      > & { functionName?: 'liquidateVault' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
        'liquidateVault'
      > & {
        abi?: never
        functionName?: 'liquidateVault'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'liquidateVault'
  >({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixLiquidationModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixLiquidationModuleJsonIsPositionLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
      'isPositionLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'isPositionLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixLiquidationModuleJsonIsVaultLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
      'isVaultLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'isVaultLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixLiquidationModuleJsonLiquidate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
      'liquidate'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'liquidate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixLiquidationModuleJsonLiquidateVault(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
      'liquidateVault'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'liquidateVault'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixLiquidationModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `eventName` set to `"Liquidation"`.
 */
export function useDeploymentsSpotMarketSynthetixLiquidationModuleJsonLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
      'Liquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    eventName: 'Liquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'Liquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixLiquidationModuleJsonABI}__ and `eventName` set to `"VaultLiquidation"`.
 */
export function useDeploymentsSpotMarketSynthetixLiquidationModuleJsonVaultLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
      'VaultLiquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixLiquidationModuleJsonAddress,
    eventName: 'VaultLiquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixLiquidationModuleJsonABI,
    'VaultLiquidation'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"getMarketCollateralAmount"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonGetMarketCollateralAmount<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'getMarketCollateralAmount'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      'getMarketCollateralAmount',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'getMarketCollateralAmount',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'getMarketCollateralAmount',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"getMarketCollateralValue"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonGetMarketCollateralValue<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'getMarketCollateralValue'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      'getMarketCollateralValue',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'getMarketCollateralValue',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'getMarketCollateralValue',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"getMaximumMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonGetMaximumMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'getMaximumMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      'getMaximumMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'getMaximumMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'getMaximumMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonConfigureMaximumMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
          'configureMaximumMarketCollateral'
        >['abi'],
        'configureMaximumMarketCollateral'
      > & { functionName?: 'configureMaximumMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
        'configureMaximumMarketCollateral'
      > & {
        abi?: never
        functionName?: 'configureMaximumMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'configureMaximumMarketCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonDepositMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
          'depositMarketCollateral'
        >['abi'],
        'depositMarketCollateral'
      > & { functionName?: 'depositMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
        'depositMarketCollateral'
      > & {
        abi?: never
        functionName?: 'depositMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'depositMarketCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonWithdrawMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
          'withdrawMarketCollateral'
        >['abi'],
        'withdrawMarketCollateral'
      > & { functionName?: 'withdrawMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
        'withdrawMarketCollateral'
      > & {
        abi?: never
        functionName?: 'withdrawMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'withdrawMarketCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonConfigureMaximumMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      'configureMaximumMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'configureMaximumMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonDepositMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      'depositMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'depositMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonWithdrawMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      'withdrawMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'withdrawMarketCollateral'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `eventName` set to `"MarketCollateralDeposited"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonMarketCollateralDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      'MarketCollateralDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    eventName: 'MarketCollateralDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'MarketCollateralDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `eventName` set to `"MarketCollateralWithdrawn"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonMarketCollateralWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      'MarketCollateralWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    eventName: 'MarketCollateralWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'MarketCollateralWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI}__ and `eventName` set to `"MaximumMarketCollateralConfigured"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketCollateralModuleJsonMaximumMarketCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
      'MaximumMarketCollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketCollateralModuleJsonAddress,
    eventName: 'MaximumMarketCollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixMarketCollateralModuleJsonABI,
    'MaximumMarketCollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonGetMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'getMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketNetIssuance"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonGetMarketNetIssuance<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketNetIssuance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'getMarketNetIssuance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketNetIssuance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketNetIssuance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketReportedDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonGetMarketReportedDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketReportedDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'getMarketReportedDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketReportedDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketReportedDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketTotalDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonGetMarketTotalDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketTotalDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'getMarketTotalDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketTotalDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketTotalDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getWithdrawableMarketUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonGetWithdrawableMarketUsd<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getWithdrawableMarketUsd'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'getWithdrawableMarketUsd',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getWithdrawableMarketUsd',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getWithdrawableMarketUsd',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"isMarketCapacityLocked"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonIsMarketCapacityLocked<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'isMarketCapacityLocked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'isMarketCapacityLocked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'isMarketCapacityLocked',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'isMarketCapacityLocked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonDepositMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
          'depositMarketUsd'
        >['abi'],
        'depositMarketUsd'
      > & { functionName?: 'depositMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
        'depositMarketUsd'
      > & {
        abi?: never
        functionName?: 'depositMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'depositMarketUsd'
  >({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonDistributeDebtToPools<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
          'distributeDebtToPools'
        >['abi'],
        'distributeDebtToPools'
      > & { functionName?: 'distributeDebtToPools' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
        'distributeDebtToPools'
      > & {
        abi?: never
        functionName?: 'distributeDebtToPools'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'distributeDebtToPools'
  >({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonGetMarketDebtPerShare<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
          'getMarketDebtPerShare'
        >['abi'],
        'getMarketDebtPerShare'
      > & { functionName?: 'getMarketDebtPerShare' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
        'getMarketDebtPerShare'
      > & {
        abi?: never
        functionName?: 'getMarketDebtPerShare'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketDebtPerShare'
  >({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonRegisterMarket<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
          'registerMarket'
        >['abi'],
        'registerMarket'
      > & { functionName?: 'registerMarket' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
        'registerMarket'
      > & {
        abi?: never
        functionName?: 'registerMarket'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'registerMarket'
  >({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonWithdrawMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
          'withdrawMarketUsd'
        >['abi'],
        'withdrawMarketUsd'
      > & { functionName?: 'withdrawMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
        'withdrawMarketUsd'
      > & {
        abi?: never
        functionName?: 'withdrawMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'withdrawMarketUsd'
  >({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketManagerModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketManagerModuleJsonDepositMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'depositMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'depositMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketManagerModuleJsonDistributeDebtToPools(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'distributeDebtToPools'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'distributeDebtToPools'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketManagerModuleJsonGetMarketDebtPerShare(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'getMarketDebtPerShare'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'getMarketDebtPerShare'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketManagerModuleJsonRegisterMarket(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'registerMarket'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'registerMarket'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMarketManagerModuleJsonWithdrawMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'withdrawMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'withdrawMarketUsd'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `eventName` set to `"MarketRegistered"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonMarketRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'MarketRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    eventName: 'MarketRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'MarketRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `eventName` set to `"MarketUsdDeposited"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonMarketUsdDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'MarketUsdDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    eventName: 'MarketUsdDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'MarketUsdDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI}__ and `eventName` set to `"MarketUsdWithdrawn"`.
 */
export function useDeploymentsSpotMarketSynthetixMarketManagerModuleJsonMarketUsdWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
      'MarketUsdWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMarketManagerModuleJsonAddress,
    eventName: 'MarketUsdWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixMarketManagerModuleJsonABI,
    'MarketUsdWithdrawn'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMulticallModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMulticallModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMulticallModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMulticallModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixMulticallModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMulticallModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMulticallModuleJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function useDeploymentsSpotMarketSynthetixMulticallModuleJsonMulticall<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
          'multicall'
        >['abi'],
        'multicall'
      > & { functionName?: 'multicall' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
        'multicall'
      > & {
        abi?: never
        functionName?: 'multicall'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
    'multicall'
  >({
    abi: deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMulticallModuleJsonAddress,
    functionName: 'multicall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMulticallModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMulticallModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMulticallModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixMulticallModuleJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixMulticallModuleJsonMulticall(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
      'multicall'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
    address: deploymentsSpotMarketSynthetixMulticallModuleJsonAddress,
    functionName: 'multicall',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixMulticallModuleJsonABI,
    'multicall'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"getApprovedPools"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonGetApprovedPools<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'getApprovedPools'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      'getApprovedPools',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'getApprovedPools',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'getApprovedPools',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"getPreferredPool"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonGetPreferredPool<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'getPreferredPool'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      'getPreferredPool',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'getPreferredPool',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'getPreferredPool',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
          'addApprovedPool'
        >['abi'],
        'addApprovedPool'
      > & { functionName?: 'addApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
        'addApprovedPool'
      > & {
        abi?: never
        functionName?: 'addApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'addApprovedPool'
  >({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonRemoveApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
          'removeApprovedPool'
        >['abi'],
        'removeApprovedPool'
      > & { functionName?: 'removeApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
        'removeApprovedPool'
      > & {
        abi?: never
        functionName?: 'removeApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'removeApprovedPool'
  >({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonSetPreferredPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
          'setPreferredPool'
        >['abi'],
        'setPreferredPool'
      > & { functionName?: 'setPreferredPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
        'setPreferredPool'
      > & {
        abi?: never
        functionName?: 'setPreferredPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'setPreferredPool'
  >({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      'addApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'addApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonRemoveApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      'removeApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'removeApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonSetPreferredPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      'setPreferredPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'setPreferredPool'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `eventName` set to `"PoolApprovedAdded"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonPoolApprovedAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      'PoolApprovedAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    eventName: 'PoolApprovedAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'PoolApprovedAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `eventName` set to `"PoolApprovedRemoved"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonPoolApprovedRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      'PoolApprovedRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    eventName: 'PoolApprovedRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'PoolApprovedRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI}__ and `eventName` set to `"PreferredPoolSet"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolConfigurationModuleJsonPreferredPoolSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
      'PreferredPoolSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonAddress,
    eventName: 'PreferredPoolSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolConfigurationModuleJsonABI,
    'PreferredPoolSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getMinLiquidityRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonGetMinLiquidityRatio<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getMinLiquidityRatio'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'getMinLiquidityRatio',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'getMinLiquidityRatio',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getMinLiquidityRatio',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getNominatedPoolOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonGetNominatedPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getNominatedPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'getNominatedPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'getNominatedPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getNominatedPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getPoolConfiguration"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonGetPoolConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getPoolConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'getPoolConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'getPoolConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getPoolConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getPoolName"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonGetPoolName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getPoolName'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'getPoolName',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'getPoolName',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getPoolName',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getPoolOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonGetPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'getPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'getPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'getPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonAcceptPoolOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
          'acceptPoolOwnership'
        >['abi'],
        'acceptPoolOwnership'
      > & { functionName?: 'acceptPoolOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
        'acceptPoolOwnership'
      > & {
        abi?: never
        functionName?: 'acceptPoolOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'acceptPoolOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonCreatePool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
          'createPool'
        >['abi'],
        'createPool'
      > & { functionName?: 'createPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
        'createPool'
      > & {
        abi?: never
        functionName?: 'createPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'createPool'
  >({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'createPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonNominatePoolOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
          'nominatePoolOwner'
        >['abi'],
        'nominatePoolOwner'
      > & { functionName?: 'nominatePoolOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
        'nominatePoolOwner'
      > & {
        abi?: never
        functionName?: 'nominatePoolOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'nominatePoolOwner'
  >({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonRenouncePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
          'renouncePoolNomination'
        >['abi'],
        'renouncePoolNomination'
      > & { functionName?: 'renouncePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
        'renouncePoolNomination'
      > & {
        abi?: never
        functionName?: 'renouncePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'renouncePoolNomination'
  >({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonRevokePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
          'revokePoolNomination'
        >['abi'],
        'revokePoolNomination'
      > & { functionName?: 'revokePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
        'revokePoolNomination'
      > & {
        abi?: never
        functionName?: 'revokePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'revokePoolNomination'
  >({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonSetMinLiquidityRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
          'setMinLiquidityRatio'
        >['abi'],
        'setMinLiquidityRatio'
      > & { functionName?: 'setMinLiquidityRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
        'setMinLiquidityRatio'
      > & {
        abi?: never
        functionName?: 'setMinLiquidityRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'setMinLiquidityRatio'
  >({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonSetPoolConfiguration<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
          'setPoolConfiguration'
        >['abi'],
        'setPoolConfiguration'
      > & { functionName?: 'setPoolConfiguration' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
        'setPoolConfiguration'
      > & {
        abi?: never
        functionName?: 'setPoolConfiguration'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'setPoolConfiguration'
  >({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonSetPoolName<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
          'setPoolName'
        >['abi'],
        'setPoolName'
      > & { functionName?: 'setPoolName' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
        'setPoolName'
      > & {
        abi?: never
        functionName?: 'setPoolName'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'setPoolName'
  >({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolModuleJsonAcceptPoolOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'acceptPoolOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'acceptPoolOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolModuleJsonCreatePool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'createPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'createPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'createPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolModuleJsonNominatePoolOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'nominatePoolOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'nominatePoolOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolModuleJsonRenouncePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'renouncePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'renouncePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolModuleJsonRevokePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'revokePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'revokePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolModuleJsonSetMinLiquidityRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'setMinLiquidityRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'setMinLiquidityRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolModuleJsonSetPoolConfiguration(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'setPoolConfiguration'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'setPoolConfiguration'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixPoolModuleJsonSetPoolName(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'setPoolName'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'setPoolName'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolConfigurationSet"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonPoolConfigurationSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'PoolConfigurationSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    eventName: 'PoolConfigurationSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'PoolConfigurationSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolCreated"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonPoolCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'PoolCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    eventName: 'PoolCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'PoolCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolNameUpdated"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonPoolNameUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'PoolNameUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    eventName: 'PoolNameUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'PoolNameUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolNominationRenounced"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonPoolNominationRenouncedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'PoolNominationRenounced'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    eventName: 'PoolNominationRenounced',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'PoolNominationRenounced'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolNominationRevoked"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonPoolNominationRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'PoolNominationRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    eventName: 'PoolNominationRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'PoolNominationRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolOwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonPoolOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'PoolOwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    eventName: 'PoolOwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'PoolOwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolOwnershipAccepted"`.
 */
export function useDeploymentsSpotMarketSynthetixPoolModuleJsonPoolOwnershipAcceptedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
      'PoolOwnershipAccepted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    address: deploymentsSpotMarketSynthetixPoolModuleJsonAddress,
    eventName: 'PoolOwnershipAccepted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixPoolModuleJsonABI,
    'PoolOwnershipAccepted'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"getRewardRate"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonGetRewardRate<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'getRewardRate'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'getRewardRate',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'getRewardRate',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'getRewardRate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonClaimRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
          'claimRewards'
        >['abi'],
        'claimRewards'
      > & { functionName?: 'claimRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
        'claimRewards'
      > & {
        abi?: never
        functionName?: 'claimRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'claimRewards'
  >({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonDistributeRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
          'distributeRewards'
        >['abi'],
        'distributeRewards'
      > & { functionName?: 'distributeRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
        'distributeRewards'
      > & {
        abi?: never
        functionName?: 'distributeRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'distributeRewards'
  >({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonRegisterRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
          'registerRewardsDistributor'
        >['abi'],
        'registerRewardsDistributor'
      > & { functionName?: 'registerRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
        'registerRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'registerRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'registerRewardsDistributor'
  >({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonRemoveRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
          'removeRewardsDistributor'
        >['abi'],
        'removeRewardsDistributor'
      > & { functionName?: 'removeRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
        'removeRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'removeRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'removeRewardsDistributor'
  >({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonUpdateRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
          'updateRewards'
        >['abi'],
        'updateRewards'
      > & { functionName?: 'updateRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
        'updateRewards'
      > & {
        abi?: never
        functionName?: 'updateRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'updateRewards'
  >({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonClaimRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'claimRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'claimRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonDistributeRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'distributeRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'distributeRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonRegisterRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'registerRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'registerRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonRemoveRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'removeRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'removeRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonUpdateRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'updateRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'updateRewards'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `eventName` set to `"RewardsClaimed"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonRewardsClaimedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'RewardsClaimed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    eventName: 'RewardsClaimed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'RewardsClaimed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `eventName` set to `"RewardsDistributed"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonRewardsDistributedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'RewardsDistributed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    eventName: 'RewardsDistributed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'RewardsDistributed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `eventName` set to `"RewardsDistributorRegistered"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonRewardsDistributorRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'RewardsDistributorRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    eventName: 'RewardsDistributorRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'RewardsDistributorRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI}__ and `eventName` set to `"RewardsDistributorRemoved"`.
 */
export function useDeploymentsSpotMarketSynthetixRewardsManagerModuleJsonRewardsDistributorRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
      'RewardsDistributorRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSpotMarketSynthetixRewardsManagerModuleJsonAddress,
    eventName: 'RewardsDistributorRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixRewardsManagerModuleJsonABI,
    'RewardsDistributorRemoved'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"allowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonAllowance<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'allowance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'allowance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'allowance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'approve'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'burn'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonBurnWithAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'burnWithAllowance'
        >['abi'],
        'burnWithAllowance'
      > & { functionName?: 'burnWithAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'burnWithAllowance'
      > & {
        abi?: never
        functionName?: 'burnWithAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'burnWithAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonDecreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'decreaseAllowance'
      > & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'decreaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonIncreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'increaseAllowance'
      > & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'increaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'mint'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'transfer'
        >['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'transfer'
      > & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'transfer'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonTransferCrossChain<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'transferCrossChain'
        >['abi'],
        'transferCrossChain'
      > & { functionName?: 'transferCrossChain' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'transferCrossChain'
      > & {
        abi?: never
        functionName?: 'transferCrossChain'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'transferCrossChain'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonBurnWithAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'burnWithAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'burnWithAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'decreaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'increaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'transfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'transfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonTransferCrossChain(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'transferCrossChain'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'transferCrossChain'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdProxyJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdProxyJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdProxyJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    address: deploymentsSpotMarketSynthetixUsdProxyJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdProxyJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"allowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonAllowance<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'allowance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'allowance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'allowance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'approve'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'burn'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonBurnWithAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'burnWithAllowance'
        >['abi'],
        'burnWithAllowance'
      > & { functionName?: 'burnWithAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'burnWithAllowance'
      > & {
        abi?: never
        functionName?: 'burnWithAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'burnWithAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonDecreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'decreaseAllowance'
      > & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'decreaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonIncreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'increaseAllowance'
      > & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'increaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'mint'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'transfer'
        >['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'transfer'
      > & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'transfer'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonTransferCrossChain<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'transferCrossChain'
        >['abi'],
        'transferCrossChain'
      > & { functionName?: 'transferCrossChain' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'transferCrossChain'
      > & {
        abi?: never
        functionName?: 'transferCrossChain'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'transferCrossChain'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonBurnWithAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'burnWithAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'burnWithAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'decreaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'increaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'transfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'transfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonTransferCrossChain(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'transferCrossChain'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'transferCrossChain'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdRouterJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdRouterJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdRouterJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    address: deploymentsSpotMarketSynthetixUsdRouterJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdRouterJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"allowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonAllowance<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'allowance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'allowance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'allowance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'approve'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'burn'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonBurnWithAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'burnWithAllowance'
        >['abi'],
        'burnWithAllowance'
      > & { functionName?: 'burnWithAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'burnWithAllowance'
      > & {
        abi?: never
        functionName?: 'burnWithAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'burnWithAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonDecreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'decreaseAllowance'
      > & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'decreaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonIncreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'increaseAllowance'
      > & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'increaseAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'initialize'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'mint'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'transfer'
        >['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'transfer'
      > & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'transfer'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonTransferCrossChain<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'transferCrossChain'
        >['abi'],
        'transferCrossChain'
      > & { functionName?: 'transferCrossChain' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'transferCrossChain'
      > & {
        abi?: never
        functionName?: 'transferCrossChain'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'transferCrossChain'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonBurnWithAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'burnWithAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'burnWithAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'decreaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'increaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'transfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'transfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonTransferCrossChain(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'transferCrossChain'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'transferCrossChain'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUsdTokenModuleJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSpotMarketSynthetixUsdTokenModuleJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUsdTokenModuleJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixUsdTokenModuleJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUtilsModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUtilsModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"getConfig"`.
 */
export function useDeploymentsSpotMarketSynthetixUtilsModuleJsonGetConfig<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    'getConfig'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
      'getConfig',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    functionName: 'getConfig',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    'getConfig',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixUtilsModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function useDeploymentsSpotMarketSynthetixUtilsModuleJsonConfigureOracleManager<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
          'configureOracleManager'
        >['abi'],
        'configureOracleManager'
      > & { functionName?: 'configureOracleManager' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
        'configureOracleManager'
      > & {
        abi?: never
        functionName?: 'configureOracleManager'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    'configureOracleManager'
  >({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function useDeploymentsSpotMarketSynthetixUtilsModuleJsonRegisterCcip<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
          'registerCcip'
        >['abi'],
        'registerCcip'
      > & { functionName?: 'registerCcip' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
        'registerCcip'
      > & {
        abi?: never
        functionName?: 'registerCcip'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    'registerCcip'
  >({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function useDeploymentsSpotMarketSynthetixUtilsModuleJsonSetConfig<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
          'setConfig'
        >['abi'],
        'setConfig'
      > & { functionName?: 'setConfig' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
        'setConfig'
      > & {
        abi?: never
        functionName?: 'setConfig'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    'setConfig'
  >({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUtilsModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUtilsModuleJsonConfigureOracleManager(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
      'configureOracleManager'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    'configureOracleManager'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUtilsModuleJsonRegisterCcip(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
      'registerCcip'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    'registerCcip'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixUtilsModuleJsonSetConfig(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
      'setConfig'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    address: deploymentsSpotMarketSynthetixUtilsModuleJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixUtilsModuleJsonABI,
    'setConfig'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonGetPositionCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getPositionCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      'getPositionCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getPositionCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonGetVaultCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getVaultCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      'getVaultCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getVaultCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonDelegateCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
          'delegateCollateral'
        >['abi'],
        'delegateCollateral'
      > & { functionName?: 'delegateCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
        'delegateCollateral'
      > & {
        abi?: never
        functionName?: 'delegateCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'delegateCollateral'
  >({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonGetPosition<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
          'getPosition'
        >['abi'],
        'getPosition'
      > & { functionName?: 'getPosition' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
        'getPosition'
      > & {
        abi?: never
        functionName?: 'getPosition'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getPosition'
  >({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonGetPositionCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
          'getPositionCollateralRatio'
        >['abi'],
        'getPositionCollateralRatio'
      > & { functionName?: 'getPositionCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
        'getPositionCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getPositionCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getPositionCollateralRatio'
  >({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonGetPositionDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
          'getPositionDebt'
        >['abi'],
        'getPositionDebt'
      > & { functionName?: 'getPositionDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
        'getPositionDebt'
      > & {
        abi?: never
        functionName?: 'getPositionDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getPositionDebt'
  >({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonGetVaultCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
          'getVaultCollateralRatio'
        >['abi'],
        'getVaultCollateralRatio'
      > & { functionName?: 'getVaultCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
        'getVaultCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getVaultCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getVaultCollateralRatio'
  >({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonGetVaultDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
          'getVaultDebt'
        >['abi'],
        'getVaultDebt'
      > & { functionName?: 'getVaultDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
        'getVaultDebt'
      > & {
        abi?: never
        functionName?: 'getVaultDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getVaultDebt'
  >({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixVaultModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixVaultModuleJsonDelegateCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      'delegateCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'delegateCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixVaultModuleJsonGetPosition(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      'getPosition'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getPosition'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixVaultModuleJsonGetPositionCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      'getPositionCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getPositionCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixVaultModuleJsonGetPositionDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      'getPositionDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getPositionDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixVaultModuleJsonGetVaultCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      'getVaultCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getVaultCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixVaultModuleJsonGetVaultDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      'getVaultDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'getVaultDebt'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixVaultModuleJsonABI}__ and `eventName` set to `"DelegationUpdated"`.
 */
export function useDeploymentsSpotMarketSynthetixVaultModuleJsonDelegationUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
      'DelegationUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    address: deploymentsSpotMarketSynthetixVaultModuleJsonAddress,
    eventName: 'DelegationUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixVaultModuleJsonABI,
    'DelegationUpdated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerCoreModuleJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerInitialProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"getNode"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonGetNode<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    'getNode'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
      'getNode',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'getNode',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    'getNode',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"getNodeId"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonGetNodeId<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    'getNodeId'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
      'getNodeId',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'getNodeId',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    'getNodeId',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"process"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonProcess<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    'process'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
      'process',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'process',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    'process',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonRegisterNode<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
          'registerNode'
        >['abi'],
        'registerNode'
      > & { functionName?: 'registerNode' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
        'registerNode'
      > & {
        abi?: never
        functionName?: 'registerNode'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    'registerNode'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonRegisterNode(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
      'registerNode'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    'registerNode'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI}__ and `eventName` set to `"NodeRegistered"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonNodeRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
      'NodeRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonAddress,
    eventName: 'NodeRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerNodeModuleJsonABI,
    'NodeRegistered'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"getNode"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonGetNode<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'getNode'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'getNode',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'getNode',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'getNode',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"getNodeId"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonGetNodeId<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'getNodeId'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'getNodeId',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'getNodeId',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'getNodeId',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"process"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonProcess<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'process'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'process',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'process',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'process',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonRegisterNode<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
          'registerNode'
        >['abi'],
        'registerNode'
      > & { functionName?: 'registerNode' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
        'registerNode'
      > & {
        abi?: never
        functionName?: 'registerNode'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'registerNode'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonRegisterNode(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'registerNode'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'registerNode'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI}__ and `eventName` set to `"NodeRegistered"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonNodeRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
      'NodeRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonAddress,
    eventName: 'NodeRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerOracleRouterJsonABI,
    'NodeRegistered'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"getNode"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonGetNode<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'getNode'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'getNode',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'getNode',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'getNode',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"getNodeId"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonGetNodeId<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'getNodeId'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'getNodeId',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'getNodeId',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'getNodeId',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"process"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonProcess<
  TSelectData = ReadContractResult<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'process'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'process',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'process',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'process',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonRegisterNode<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
          'registerNode'
        >['abi'],
        'registerNode'
      > & { functionName?: 'registerNode' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
        'registerNode'
      > & {
        abi?: never
        functionName?: 'registerNode'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'registerNode'
  >({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function usePrepareDeploymentsSpotMarketSynthetixOracleManagerProxyJsonRegisterNode(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'registerNode'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'registerNode'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI}__ and `eventName` set to `"NodeRegistered"`.
 */
export function useDeploymentsSpotMarketSynthetixOracleManagerProxyJsonNodeRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
      'NodeRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSpotMarketSynthetixOracleManagerProxyJsonAddress,
    eventName: 'NodeRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSpotMarketSynthetixOracleManagerProxyJsonABI,
    'NodeRegistered'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAccountModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAccountModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"getAccountLastInteraction"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonGetAccountLastInteraction<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'getAccountLastInteraction'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'getAccountLastInteraction',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'getAccountLastInteraction',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'getAccountLastInteraction',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"getAccountOwner"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonGetAccountOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'getAccountOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'getAccountOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'getAccountOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'getAccountOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"getAccountPermissions"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonGetAccountPermissions<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'getAccountPermissions'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'getAccountPermissions',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'getAccountPermissions',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'getAccountPermissions',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"getAccountTokenAddress"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonGetAccountTokenAddress<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'getAccountTokenAddress'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'getAccountTokenAddress',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'getAccountTokenAddress',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'getAccountTokenAddress',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"hasPermission"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonHasPermission<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'hasPermission'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'hasPermission',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'hasPermission',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'hasPermission',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"isAuthorized"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonIsAuthorized<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'isAuthorized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'isAuthorized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'isAuthorized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'isAuthorized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAccountModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonCreateAccount<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountModuleJsonABI,
          'createAccount'
        >['abi'],
        'createAccount'
      > & { functionName?: 'createAccount' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountModuleJsonABI,
        'createAccount'
      > & {
        abi?: never
        functionName?: 'createAccount'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'createAccount'
  >({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonGrantPermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountModuleJsonABI,
          'grantPermission'
        >['abi'],
        'grantPermission'
      > & { functionName?: 'grantPermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountModuleJsonABI,
        'grantPermission'
      > & {
        abi?: never
        functionName?: 'grantPermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'grantPermission'
  >({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonNotifyAccountTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountModuleJsonABI,
          'notifyAccountTransfer'
        >['abi'],
        'notifyAccountTransfer'
      > & { functionName?: 'notifyAccountTransfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountModuleJsonABI,
        'notifyAccountTransfer'
      > & {
        abi?: never
        functionName?: 'notifyAccountTransfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'notifyAccountTransfer'
  >({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonRenouncePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountModuleJsonABI,
          'renouncePermission'
        >['abi'],
        'renouncePermission'
      > & { functionName?: 'renouncePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountModuleJsonABI,
        'renouncePermission'
      > & {
        abi?: never
        functionName?: 'renouncePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'renouncePermission'
  >({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonRevokePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountModuleJsonABI,
          'revokePermission'
        >['abi'],
        'revokePermission'
      > & { functionName?: 'revokePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountModuleJsonABI,
        'revokePermission'
      > & {
        abi?: never
        functionName?: 'revokePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'revokePermission'
  >({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixAccountModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function usePrepareDeploymentsSynthetixAccountModuleJsonCreateAccount(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'createAccount'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'createAccount'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function usePrepareDeploymentsSynthetixAccountModuleJsonGrantPermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'grantPermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'grantPermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function usePrepareDeploymentsSynthetixAccountModuleJsonNotifyAccountTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'notifyAccountTransfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'notifyAccountTransfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function usePrepareDeploymentsSynthetixAccountModuleJsonRenouncePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'renouncePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'renouncePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function usePrepareDeploymentsSynthetixAccountModuleJsonRevokePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'revokePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'revokePermission'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAccountModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `eventName` set to `"AccountCreated"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonAccountCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'AccountCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    eventName: 'AccountCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'AccountCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `eventName` set to `"PermissionGranted"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonPermissionGrantedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'PermissionGranted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    eventName: 'PermissionGranted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'PermissionGranted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountModuleJsonABI}__ and `eventName` set to `"PermissionRevoked"`.
 */
export function useDeploymentsSynthetixAccountModuleJsonPermissionRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountModuleJsonABI,
      'PermissionRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountModuleJsonABI,
    address: deploymentsSynthetixAccountModuleJsonAddress,
    eventName: 'PermissionRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountModuleJsonABI,
    'PermissionRevoked'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__.
 */
export function useDeploymentsSynthetixAccountProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__.
 */
export function useDeploymentsSynthetixAccountProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"getApproved"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonGetApproved<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'getApproved'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'getApproved',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'getApproved',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonIsApprovedForAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'isApprovedForAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"ownerOf"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonOwnerOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'ownerOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'ownerOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'ownerOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonSupportsInterface<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"tokenByIndex"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonTokenByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'tokenByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'tokenByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'tokenByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonTokenOfOwnerByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'tokenOfOwnerByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'tokenOfOwnerByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'tokenOfOwnerByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"tokenURI"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonTokenUri<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'tokenURI'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'tokenURI',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'tokenURI',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__.
 */
export function useDeploymentsSynthetixAccountProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'approve'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'burn'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'initialize'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'mint'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonSafeMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'safeMint'
        >['abi'],
        'safeMint'
      > & { functionName?: 'safeMint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'safeMint'
      > & {
        abi?: never
        functionName?: 'safeMint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'safeMint'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonSafeTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & { functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'safeTransferFrom'
      > & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'safeTransferFrom'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonSetApprovalForAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & { functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'setApprovalForAll'
      > & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'setApprovalForAll'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountProxyJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountProxyJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonSafeMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'safeMint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'safeMint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'safeTransferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'setApprovalForAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSynthetixAccountProxyJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__.
 */
export function useDeploymentsSynthetixAccountProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'ApprovalForAll'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'ApprovalForAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountProxyJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSynthetixAccountProxyJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountProxyJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountProxyJsonABI,
    address: deploymentsSynthetixAccountProxyJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountProxyJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__.
 */
export function useDeploymentsSynthetixAccountRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__.
 */
export function useDeploymentsSynthetixAccountRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"getApproved"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonGetApproved<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'getApproved'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'getApproved',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'getApproved',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonIsApprovedForAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'isApprovedForAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"ownerOf"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonOwnerOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'ownerOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'ownerOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'ownerOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonSupportsInterface<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"tokenByIndex"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonTokenByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'tokenByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'tokenByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'tokenByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonTokenOfOwnerByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'tokenOfOwnerByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'tokenOfOwnerByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'tokenOfOwnerByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"tokenURI"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonTokenUri<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'tokenURI'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'tokenURI',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'tokenURI',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__.
 */
export function useDeploymentsSynthetixAccountRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'approve'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'burn'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'initialize'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'mint'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonSafeMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'safeMint'
        >['abi'],
        'safeMint'
      > & { functionName?: 'safeMint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'safeMint'
      > & {
        abi?: never
        functionName?: 'safeMint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'safeMint'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonSafeTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & { functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'safeTransferFrom'
      > & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'safeTransferFrom'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonSetApprovalForAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & { functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'setApprovalForAll'
      > & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'setApprovalForAll'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountRouterJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountRouterJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonSafeMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'safeMint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'safeMint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'safeTransferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'setApprovalForAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSynthetixAccountRouterJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__.
 */
export function useDeploymentsSynthetixAccountRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'ApprovalForAll'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'ApprovalForAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountRouterJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSynthetixAccountRouterJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountRouterJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountRouterJsonABI,
    address: deploymentsSynthetixAccountRouterJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountRouterJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAccountTokenModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"getApproved"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonGetApproved<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'getApproved'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'getApproved',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'getApproved',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonIsApprovedForAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'isApprovedForAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"ownerOf"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonOwnerOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'ownerOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'ownerOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'ownerOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonSupportsInterface<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'supportsInterface'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"tokenByIndex"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonTokenByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'tokenByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'tokenByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'tokenByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonTokenOfOwnerByIndex<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'tokenOfOwnerByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'tokenOfOwnerByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'tokenOfOwnerByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"tokenURI"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonTokenUri<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'tokenURI'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'tokenURI',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'tokenURI',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'approve'
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'burn'
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'initialize'
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'mint'
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonSafeMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          'safeMint'
        >['abi'],
        'safeMint'
      > & { functionName?: 'safeMint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        'safeMint'
      > & {
        abi?: never
        functionName?: 'safeMint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'safeMint'
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonSafeTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & { functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        'safeTransferFrom'
      > & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'safeTransferFrom'
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonSetApprovalForAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & { functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        'setApprovalForAll'
      > & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'setApprovalForAll'
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAccountTokenModuleJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAccountTokenModuleJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"safeMint"`.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonSafeMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'safeMint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'safeMint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'safeMint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'safeTransferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'setApprovalForAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSynthetixAccountTokenModuleJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'ApprovalForAll'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'ApprovalForAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAccountTokenModuleJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSynthetixAccountTokenModuleJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAccountTokenModuleJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAccountTokenModuleJsonABI,
    address: deploymentsSynthetixAccountTokenModuleJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAccountTokenModuleJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixAssociateDebtModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAssociateDebtModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSynthetixAssociateDebtModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociateDebtModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAssociateDebtModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSynthetixAssociateDebtModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociateDebtModuleJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function useDeploymentsSynthetixAssociateDebtModuleJsonAssociateDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
          'associateDebt'
        >['abi'],
        'associateDebt'
      > & { functionName?: 'associateDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
        'associateDebt'
      > & {
        abi?: never
        functionName?: 'associateDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
    'associateDebt'
  >({
    abi: deploymentsSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSynthetixAssociateDebtModuleJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociateDebtModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixAssociateDebtModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSynthetixAssociateDebtModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociateDebtModuleJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function usePrepareDeploymentsSynthetixAssociateDebtModuleJsonAssociateDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
      'associateDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSynthetixAssociateDebtModuleJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
    'associateDebt'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAssociateDebtModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAssociateDebtModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSynthetixAssociateDebtModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAssociateDebtModuleJsonABI}__ and `eventName` set to `"DebtAssociated"`.
 */
export function useDeploymentsSynthetixAssociateDebtModuleJsonDebtAssociatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
      'DebtAssociated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAssociateDebtModuleJsonABI,
    address: deploymentsSynthetixAssociateDebtModuleJsonAddress,
    eventName: 'DebtAssociated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAssociateDebtModuleJsonABI,
    'DebtAssociated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAssociatedSystemsModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAssociatedSystemsModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSynthetixAssociatedSystemsModuleJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAssociatedSystemsModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSynthetixAssociatedSystemsModuleJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSynthetixAssociatedSystemsModuleJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSynthetixAssociatedSystemsModuleJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixAssociatedSystemsModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSynthetixAssociatedSystemsModuleJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSynthetixAssociatedSystemsModuleJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSynthetixAssociatedSystemsModuleJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__.
 */
export function useDeploymentsSynthetixAssociatedSystemsModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixAssociatedSystemsModuleJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSynthetixAssociatedSystemsModuleJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    address: deploymentsSynthetixAssociatedSystemsModuleJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixAssociatedSystemsModuleJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixCollateralConfigurationModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixCollateralConfigurationModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"getCollateralConfiguration"`.
 */
export function useDeploymentsSynthetixCollateralConfigurationModuleJsonGetCollateralConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
      'getCollateralConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'getCollateralConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"getCollateralConfigurations"`.
 */
export function useDeploymentsSynthetixCollateralConfigurationModuleJsonGetCollateralConfigurations<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralConfigurations'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
      'getCollateralConfigurations',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'getCollateralConfigurations',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralConfigurations',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"getCollateralPrice"`.
 */
export function useDeploymentsSynthetixCollateralConfigurationModuleJsonGetCollateralPrice<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralPrice'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
      'getCollateralPrice',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'getCollateralPrice',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    'getCollateralPrice',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixCollateralConfigurationModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function useDeploymentsSynthetixCollateralConfigurationModuleJsonConfigureCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
          'configureCollateral'
        >['abi'],
        'configureCollateral'
      > & { functionName?: 'configureCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
        'configureCollateral'
      > & {
        abi?: never
        functionName?: 'configureCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    'configureCollateral'
  >({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixCollateralConfigurationModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCollateralConfigurationModuleJsonConfigureCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
      'configureCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    'configureCollateral'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixCollateralConfigurationModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCollateralConfigurationModuleJsonABI}__ and `eventName` set to `"CollateralConfigured"`.
 */
export function useDeploymentsSynthetixCollateralConfigurationModuleJsonCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
      'CollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    address: deploymentsSynthetixCollateralConfigurationModuleJsonAddress,
    eventName: 'CollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCollateralConfigurationModuleJsonABI,
    'CollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__.
 */
export function useDeploymentsSynthetixCollateralModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__.
 */
export function useDeploymentsSynthetixCollateralModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"getAccountAvailableCollateral"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonGetAccountAvailableCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'getAccountAvailableCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'getAccountAvailableCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'getAccountAvailableCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'getAccountAvailableCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"getAccountCollateral"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonGetAccountCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'getAccountCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'getAccountCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'getAccountCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'getAccountCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"getLocks"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonGetLocks<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'getLocks'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'getLocks',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'getLocks',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'getLocks',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__.
 */
export function useDeploymentsSynthetixCollateralModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCollateralModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCollateralModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonCleanExpiredLocks<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCollateralModuleJsonABI,
          'cleanExpiredLocks'
        >['abi'],
        'cleanExpiredLocks'
      > & { functionName?: 'cleanExpiredLocks' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCollateralModuleJsonABI,
        'cleanExpiredLocks'
      > & {
        abi?: never
        functionName?: 'cleanExpiredLocks'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'cleanExpiredLocks'
  >({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonCreateLock<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCollateralModuleJsonABI,
          'createLock'
        >['abi'],
        'createLock'
      > & { functionName?: 'createLock' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCollateralModuleJsonABI,
        'createLock'
      > & {
        abi?: never
        functionName?: 'createLock'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'createLock'
  >({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'createLock',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonDeposit<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCollateralModuleJsonABI,
          'deposit'
        >['abi'],
        'deposit'
      > & { functionName?: 'deposit' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCollateralModuleJsonABI,
        'deposit'
      > & {
        abi?: never
        functionName?: 'deposit'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'deposit'
  >({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'deposit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonWithdraw<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCollateralModuleJsonABI,
          'withdraw'
        >['abi'],
        'withdraw'
      > & { functionName?: 'withdraw' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCollateralModuleJsonABI,
        'withdraw'
      > & {
        abi?: never
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'withdraw'
  >({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixCollateralModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function usePrepareDeploymentsSynthetixCollateralModuleJsonCleanExpiredLocks(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'cleanExpiredLocks'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'cleanExpiredLocks'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function usePrepareDeploymentsSynthetixCollateralModuleJsonCreateLock(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'createLock'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'createLock',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'createLock'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function usePrepareDeploymentsSynthetixCollateralModuleJsonDeposit(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'deposit'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'deposit',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'deposit'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function usePrepareDeploymentsSynthetixCollateralModuleJsonWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'withdraw'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'withdraw'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__.
 */
export function useDeploymentsSynthetixCollateralModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `eventName` set to `"CollateralLockCreated"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonCollateralLockCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'CollateralLockCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    eventName: 'CollateralLockCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'CollateralLockCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `eventName` set to `"CollateralLockExpired"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonCollateralLockExpiredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'CollateralLockExpired'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    eventName: 'CollateralLockExpired',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'CollateralLockExpired'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `eventName` set to `"Deposited"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'Deposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    eventName: 'Deposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'Deposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCollateralModuleJsonABI}__ and `eventName` set to `"Withdrawn"`.
 */
export function useDeploymentsSynthetixCollateralModuleJsonWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCollateralModuleJsonABI,
      'Withdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCollateralModuleJsonABI,
    address: deploymentsSynthetixCollateralModuleJsonAddress,
    eventName: 'Withdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCollateralModuleJsonABI,
    'Withdrawn'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__.
 */
export function useDeploymentsSynthetixCoreProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__.
 */
export function useDeploymentsSynthetixCoreProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getDeniers"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetDeniers<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getDeniers'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getDeniers',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getDeniers',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getDeniers',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getFeatureFlagAllowAll"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetFeatureFlagAllowAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getFeatureFlagAllowAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getFeatureFlagAllowAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getFeatureFlagAllowAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getFeatureFlagAllowAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getFeatureFlagAllowlist"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetFeatureFlagAllowlist<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getFeatureFlagAllowlist'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getFeatureFlagAllowlist',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getFeatureFlagAllowlist',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getFeatureFlagAllowlist',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getFeatureFlagDenyAll"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetFeatureFlagDenyAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getFeatureFlagDenyAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getFeatureFlagDenyAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getFeatureFlagDenyAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getFeatureFlagDenyAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isFeatureAllowed"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonIsFeatureAllowed<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isFeatureAllowed'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'isFeatureAllowed',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'isFeatureAllowed',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isFeatureAllowed',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountLastInteraction"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetAccountLastInteraction<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountLastInteraction'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getAccountLastInteraction',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountLastInteraction',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountLastInteraction',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountOwner"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetAccountOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getAccountOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountPermissions"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetAccountPermissions<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountPermissions'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getAccountPermissions',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountPermissions',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountPermissions',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountTokenAddress"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetAccountTokenAddress<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountTokenAddress'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getAccountTokenAddress',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountTokenAddress',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountTokenAddress',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"hasPermission"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonHasPermission<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'hasPermission'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'hasPermission',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'hasPermission',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'hasPermission',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isAuthorized"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonIsAuthorized<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isAuthorized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'isAuthorized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'isAuthorized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isAuthorized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountAvailableCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetAccountAvailableCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountAvailableCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getAccountAvailableCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountAvailableCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountAvailableCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getAccountCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetAccountCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getAccountCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getAccountCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getAccountCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getLocks"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetLocks<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getLocks'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getLocks',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getLocks',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getLocks',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getCollateralConfiguration"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetCollateralConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getCollateralConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getCollateralConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getCollateralConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getCollateralConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getCollateralConfigurations"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetCollateralConfigurations<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getCollateralConfigurations'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getCollateralConfigurations',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getCollateralConfigurations',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getCollateralConfigurations',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getCollateralPrice"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetCollateralPrice<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getCollateralPrice'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getCollateralPrice',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getCollateralPrice',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getCollateralPrice',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketCollateralAmount"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetMarketCollateralAmount<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketCollateralAmount'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getMarketCollateralAmount',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketCollateralAmount',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketCollateralAmount',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketCollateralValue"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetMarketCollateralValue<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketCollateralValue'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getMarketCollateralValue',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketCollateralValue',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketCollateralValue',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMaximumMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetMaximumMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMaximumMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getMaximumMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMaximumMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMaximumMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketNetIssuance"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetMarketNetIssuance<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketNetIssuance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getMarketNetIssuance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketNetIssuance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketNetIssuance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketReportedDebt"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetMarketReportedDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketReportedDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getMarketReportedDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketReportedDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketReportedDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketTotalDebt"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetMarketTotalDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketTotalDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getMarketTotalDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketTotalDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketTotalDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getWithdrawableMarketUsd"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetWithdrawableMarketUsd<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getWithdrawableMarketUsd'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getWithdrawableMarketUsd',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getWithdrawableMarketUsd',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getWithdrawableMarketUsd',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isMarketCapacityLocked"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonIsMarketCapacityLocked<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isMarketCapacityLocked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'isMarketCapacityLocked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'isMarketCapacityLocked',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isMarketCapacityLocked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getApprovedPools"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetApprovedPools<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getApprovedPools'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getApprovedPools',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getApprovedPools',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getApprovedPools',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPreferredPool"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetPreferredPool<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPreferredPool'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getPreferredPool',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPreferredPool',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPreferredPool',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMinLiquidityRatio"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetMinLiquidityRatio<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMinLiquidityRatio'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getMinLiquidityRatio',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMinLiquidityRatio',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMinLiquidityRatio',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getNominatedPoolOwner"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetNominatedPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getNominatedPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getNominatedPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getNominatedPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getNominatedPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPoolConfiguration"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetPoolConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPoolConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getPoolConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPoolConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPoolConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPoolName"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetPoolName<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPoolName'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getPoolName',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPoolName',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPoolName',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPoolOwner"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getRewardRate"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetRewardRate<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getRewardRate'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getRewardRate',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getRewardRate',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getRewardRate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getConfig"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetConfig<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getConfig'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getConfig',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getConfig',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getConfig',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetPositionCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPositionCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getPositionCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPositionCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetVaultCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getVaultCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getVaultCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getVaultCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__.
 */
export function useDeploymentsSynthetixCoreProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonAddToFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'addToFeatureFlagAllowlist'
        >['abi'],
        'addToFeatureFlagAllowlist'
      > & { functionName?: 'addToFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'addToFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'addToFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'addToFeatureFlagAllowlist'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRemoveFromFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'removeFromFeatureFlagAllowlist'
        >['abi'],
        'removeFromFeatureFlagAllowlist'
      > & { functionName?: 'removeFromFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'removeFromFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'removeFromFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'removeFromFeatureFlagAllowlist'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonSetDeniers<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'setDeniers'
        >['abi'],
        'setDeniers'
      > & { functionName?: 'setDeniers' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'setDeniers'
      > & {
        abi?: never
        functionName?: 'setDeniers'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setDeniers'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonSetFeatureFlagAllowAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'setFeatureFlagAllowAll'
        >['abi'],
        'setFeatureFlagAllowAll'
      > & { functionName?: 'setFeatureFlagAllowAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'setFeatureFlagAllowAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagAllowAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setFeatureFlagAllowAll'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonSetFeatureFlagDenyAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'setFeatureFlagDenyAll'
        >['abi'],
        'setFeatureFlagDenyAll'
      > & { functionName?: 'setFeatureFlagDenyAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'setFeatureFlagDenyAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagDenyAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setFeatureFlagDenyAll'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonCreateAccount<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'createAccount'
        >['abi'],
        'createAccount'
      > & { functionName?: 'createAccount' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'createAccount'
      > & {
        abi?: never
        functionName?: 'createAccount'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'createAccount'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGrantPermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'grantPermission'
        >['abi'],
        'grantPermission'
      > & { functionName?: 'grantPermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'grantPermission'
      > & {
        abi?: never
        functionName?: 'grantPermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'grantPermission'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonNotifyAccountTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'notifyAccountTransfer'
        >['abi'],
        'notifyAccountTransfer'
      > & { functionName?: 'notifyAccountTransfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'notifyAccountTransfer'
      > & {
        abi?: never
        functionName?: 'notifyAccountTransfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'notifyAccountTransfer'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRenouncePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'renouncePermission'
        >['abi'],
        'renouncePermission'
      > & { functionName?: 'renouncePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'renouncePermission'
      > & {
        abi?: never
        functionName?: 'renouncePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'renouncePermission'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRevokePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'revokePermission'
        >['abi'],
        'revokePermission'
      > & { functionName?: 'revokePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'revokePermission'
      > & {
        abi?: never
        functionName?: 'revokePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'revokePermission'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonAssociateDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'associateDebt'
        >['abi'],
        'associateDebt'
      > & { functionName?: 'associateDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'associateDebt'
      > & {
        abi?: never
        functionName?: 'associateDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'associateDebt'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonCleanExpiredLocks<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'cleanExpiredLocks'
        >['abi'],
        'cleanExpiredLocks'
      > & { functionName?: 'cleanExpiredLocks' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'cleanExpiredLocks'
      > & {
        abi?: never
        functionName?: 'cleanExpiredLocks'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'cleanExpiredLocks'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonCreateLock<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'createLock'
        >['abi'],
        'createLock'
      > & { functionName?: 'createLock' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'createLock'
      > & {
        abi?: never
        functionName?: 'createLock'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'createLock'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'createLock',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonDeposit<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'deposit'
        >['abi'],
        'deposit'
      > & { functionName?: 'deposit' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'deposit'
      > & {
        abi?: never
        functionName?: 'deposit'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'deposit'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'deposit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonWithdraw<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'withdraw'
        >['abi'],
        'withdraw'
      > & { functionName?: 'withdraw' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'withdraw'
      > & {
        abi?: never
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'withdraw'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonConfigureCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'configureCollateral'
        >['abi'],
        'configureCollateral'
      > & { functionName?: 'configureCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'configureCollateral'
      > & {
        abi?: never
        functionName?: 'configureCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'configureCollateral'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonBurnUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'burnUsd'
        >['abi'],
        'burnUsd'
      > & { functionName?: 'burnUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'burnUsd'
      > & {
        abi?: never
        functionName?: 'burnUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'burnUsd'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonMintUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'mintUsd'
        >['abi'],
        'mintUsd'
      > & { functionName?: 'mintUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'mintUsd'
      > & {
        abi?: never
        functionName?: 'mintUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'mintUsd'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonIsPositionLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'isPositionLiquidatable'
        >['abi'],
        'isPositionLiquidatable'
      > & { functionName?: 'isPositionLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'isPositionLiquidatable'
      > & {
        abi?: never
        functionName?: 'isPositionLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isPositionLiquidatable'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonIsVaultLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'isVaultLiquidatable'
        >['abi'],
        'isVaultLiquidatable'
      > & { functionName?: 'isVaultLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'isVaultLiquidatable'
      > & {
        abi?: never
        functionName?: 'isVaultLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isVaultLiquidatable'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonLiquidate<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'liquidate'
        >['abi'],
        'liquidate'
      > & { functionName?: 'liquidate' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'liquidate'
      > & {
        abi?: never
        functionName?: 'liquidate'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'liquidate'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonLiquidateVault<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'liquidateVault'
        >['abi'],
        'liquidateVault'
      > & { functionName?: 'liquidateVault' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'liquidateVault'
      > & {
        abi?: never
        functionName?: 'liquidateVault'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'liquidateVault'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonConfigureMaximumMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'configureMaximumMarketCollateral'
        >['abi'],
        'configureMaximumMarketCollateral'
      > & { functionName?: 'configureMaximumMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'configureMaximumMarketCollateral'
      > & {
        abi?: never
        functionName?: 'configureMaximumMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'configureMaximumMarketCollateral'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonDepositMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'depositMarketCollateral'
        >['abi'],
        'depositMarketCollateral'
      > & { functionName?: 'depositMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'depositMarketCollateral'
      > & {
        abi?: never
        functionName?: 'depositMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'depositMarketCollateral'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonWithdrawMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'withdrawMarketCollateral'
        >['abi'],
        'withdrawMarketCollateral'
      > & { functionName?: 'withdrawMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'withdrawMarketCollateral'
      > & {
        abi?: never
        functionName?: 'withdrawMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'withdrawMarketCollateral'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonDepositMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'depositMarketUsd'
        >['abi'],
        'depositMarketUsd'
      > & { functionName?: 'depositMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'depositMarketUsd'
      > & {
        abi?: never
        functionName?: 'depositMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'depositMarketUsd'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonDistributeDebtToPools<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'distributeDebtToPools'
        >['abi'],
        'distributeDebtToPools'
      > & { functionName?: 'distributeDebtToPools' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'distributeDebtToPools'
      > & {
        abi?: never
        functionName?: 'distributeDebtToPools'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'distributeDebtToPools'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetMarketDebtPerShare<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'getMarketDebtPerShare'
        >['abi'],
        'getMarketDebtPerShare'
      > & { functionName?: 'getMarketDebtPerShare' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'getMarketDebtPerShare'
      > & {
        abi?: never
        functionName?: 'getMarketDebtPerShare'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketDebtPerShare'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRegisterMarket<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'registerMarket'
        >['abi'],
        'registerMarket'
      > & { functionName?: 'registerMarket' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'registerMarket'
      > & {
        abi?: never
        functionName?: 'registerMarket'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'registerMarket'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonWithdrawMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'withdrawMarketUsd'
        >['abi'],
        'withdrawMarketUsd'
      > & { functionName?: 'withdrawMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'withdrawMarketUsd'
      > & {
        abi?: never
        functionName?: 'withdrawMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'withdrawMarketUsd'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonMulticall<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'multicall'
        >['abi'],
        'multicall'
      > & { functionName?: 'multicall' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'multicall'
      > & {
        abi?: never
        functionName?: 'multicall'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'multicall'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'multicall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonAddApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'addApprovedPool'
        >['abi'],
        'addApprovedPool'
      > & { functionName?: 'addApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'addApprovedPool'
      > & {
        abi?: never
        functionName?: 'addApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'addApprovedPool'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRemoveApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'removeApprovedPool'
        >['abi'],
        'removeApprovedPool'
      > & { functionName?: 'removeApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'removeApprovedPool'
      > & {
        abi?: never
        functionName?: 'removeApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'removeApprovedPool'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonSetPreferredPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'setPreferredPool'
        >['abi'],
        'setPreferredPool'
      > & { functionName?: 'setPreferredPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'setPreferredPool'
      > & {
        abi?: never
        functionName?: 'setPreferredPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setPreferredPool'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonAcceptPoolOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'acceptPoolOwnership'
        >['abi'],
        'acceptPoolOwnership'
      > & { functionName?: 'acceptPoolOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'acceptPoolOwnership'
      > & {
        abi?: never
        functionName?: 'acceptPoolOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'acceptPoolOwnership'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonCreatePool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'createPool'
        >['abi'],
        'createPool'
      > & { functionName?: 'createPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'createPool'
      > & {
        abi?: never
        functionName?: 'createPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'createPool'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'createPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonNominatePoolOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'nominatePoolOwner'
        >['abi'],
        'nominatePoolOwner'
      > & { functionName?: 'nominatePoolOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'nominatePoolOwner'
      > & {
        abi?: never
        functionName?: 'nominatePoolOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'nominatePoolOwner'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRenouncePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'renouncePoolNomination'
        >['abi'],
        'renouncePoolNomination'
      > & { functionName?: 'renouncePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'renouncePoolNomination'
      > & {
        abi?: never
        functionName?: 'renouncePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'renouncePoolNomination'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRevokePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'revokePoolNomination'
        >['abi'],
        'revokePoolNomination'
      > & { functionName?: 'revokePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'revokePoolNomination'
      > & {
        abi?: never
        functionName?: 'revokePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'revokePoolNomination'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonSetMinLiquidityRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'setMinLiquidityRatio'
        >['abi'],
        'setMinLiquidityRatio'
      > & { functionName?: 'setMinLiquidityRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'setMinLiquidityRatio'
      > & {
        abi?: never
        functionName?: 'setMinLiquidityRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setMinLiquidityRatio'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonSetPoolConfiguration<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'setPoolConfiguration'
        >['abi'],
        'setPoolConfiguration'
      > & { functionName?: 'setPoolConfiguration' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'setPoolConfiguration'
      > & {
        abi?: never
        functionName?: 'setPoolConfiguration'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setPoolConfiguration'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonSetPoolName<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'setPoolName'
        >['abi'],
        'setPoolName'
      > & { functionName?: 'setPoolName' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'setPoolName'
      > & {
        abi?: never
        functionName?: 'setPoolName'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setPoolName'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonClaimRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'claimRewards'
        >['abi'],
        'claimRewards'
      > & { functionName?: 'claimRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'claimRewards'
      > & {
        abi?: never
        functionName?: 'claimRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'claimRewards'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonDistributeRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'distributeRewards'
        >['abi'],
        'distributeRewards'
      > & { functionName?: 'distributeRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'distributeRewards'
      > & {
        abi?: never
        functionName?: 'distributeRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'distributeRewards'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRegisterRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'registerRewardsDistributor'
        >['abi'],
        'registerRewardsDistributor'
      > & { functionName?: 'registerRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'registerRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'registerRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'registerRewardsDistributor'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRemoveRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'removeRewardsDistributor'
        >['abi'],
        'removeRewardsDistributor'
      > & { functionName?: 'removeRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'removeRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'removeRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'removeRewardsDistributor'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonUpdateRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'updateRewards'
        >['abi'],
        'updateRewards'
      > & { functionName?: 'updateRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'updateRewards'
      > & {
        abi?: never
        functionName?: 'updateRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'updateRewards'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonConfigureOracleManager<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'configureOracleManager'
        >['abi'],
        'configureOracleManager'
      > & { functionName?: 'configureOracleManager' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'configureOracleManager'
      > & {
        abi?: never
        functionName?: 'configureOracleManager'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'configureOracleManager'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRegisterCcip<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'registerCcip'
        >['abi'],
        'registerCcip'
      > & { functionName?: 'registerCcip' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'registerCcip'
      > & {
        abi?: never
        functionName?: 'registerCcip'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'registerCcip'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonSetConfig<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'setConfig'
        >['abi'],
        'setConfig'
      > & { functionName?: 'setConfig' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'setConfig'
      > & {
        abi?: never
        functionName?: 'setConfig'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setConfig'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonDelegateCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'delegateCollateral'
        >['abi'],
        'delegateCollateral'
      > & { functionName?: 'delegateCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'delegateCollateral'
      > & {
        abi?: never
        functionName?: 'delegateCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'delegateCollateral'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetPosition<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'getPosition'
        >['abi'],
        'getPosition'
      > & { functionName?: 'getPosition' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'getPosition'
      > & {
        abi?: never
        functionName?: 'getPosition'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPosition'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetPositionCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'getPositionCollateralRatio'
        >['abi'],
        'getPositionCollateralRatio'
      > & { functionName?: 'getPositionCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'getPositionCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getPositionCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPositionCollateralRatio'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetPositionDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'getPositionDebt'
        >['abi'],
        'getPositionDebt'
      > & { functionName?: 'getPositionDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'getPositionDebt'
      > & {
        abi?: never
        functionName?: 'getPositionDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPositionDebt'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetVaultCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'getVaultCollateralRatio'
        >['abi'],
        'getVaultCollateralRatio'
      > & { functionName?: 'getVaultCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'getVaultCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getVaultCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getVaultCollateralRatio'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonGetVaultDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreProxyJsonABI,
          'getVaultDebt'
        >['abi'],
        'getVaultDebt'
      > & { functionName?: 'getVaultDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreProxyJsonABI,
        'getVaultDebt'
      > & {
        abi?: never
        functionName?: 'getVaultDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getVaultDebt'
  >({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonAddToFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'addToFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'addToFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRemoveFromFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'removeFromFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'removeFromFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonSetDeniers(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'setDeniers'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setDeniers'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonSetFeatureFlagAllowAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'setFeatureFlagAllowAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setFeatureFlagAllowAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonSetFeatureFlagDenyAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'setFeatureFlagDenyAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setFeatureFlagDenyAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonCreateAccount(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'createAccount'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'createAccount'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonGrantPermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'grantPermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'grantPermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonNotifyAccountTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'notifyAccountTransfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'notifyAccountTransfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRenouncePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'renouncePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'renouncePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRevokePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'revokePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'revokePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonAssociateDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'associateDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'associateDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonCleanExpiredLocks(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'cleanExpiredLocks'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'cleanExpiredLocks'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonCreateLock(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'createLock'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'createLock',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'createLock'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonDeposit(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'deposit'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'deposit',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'deposit'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'withdraw'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'withdraw'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonConfigureCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'configureCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'configureCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonBurnUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'burnUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'burnUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonMintUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'mintUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'mintUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonIsPositionLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'isPositionLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isPositionLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonIsVaultLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'isVaultLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'isVaultLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonLiquidate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'liquidate'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'liquidate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonLiquidateVault(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'liquidateVault'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'liquidateVault'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonConfigureMaximumMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'configureMaximumMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'configureMaximumMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonDepositMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'depositMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'depositMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonWithdrawMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'withdrawMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'withdrawMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonDepositMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'depositMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'depositMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonDistributeDebtToPools(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'distributeDebtToPools'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'distributeDebtToPools'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonGetMarketDebtPerShare(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getMarketDebtPerShare'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getMarketDebtPerShare'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRegisterMarket(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'registerMarket'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'registerMarket'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonWithdrawMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'withdrawMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'withdrawMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonMulticall(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'multicall'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'multicall',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'multicall'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonAddApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'addApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'addApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRemoveApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'removeApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'removeApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonSetPreferredPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'setPreferredPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setPreferredPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonAcceptPoolOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'acceptPoolOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'acceptPoolOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonCreatePool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'createPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'createPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'createPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonNominatePoolOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'nominatePoolOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'nominatePoolOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRenouncePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'renouncePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'renouncePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRevokePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'revokePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'revokePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonSetMinLiquidityRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'setMinLiquidityRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setMinLiquidityRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonSetPoolConfiguration(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'setPoolConfiguration'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setPoolConfiguration'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonSetPoolName(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'setPoolName'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setPoolName'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonClaimRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'claimRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'claimRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonDistributeRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'distributeRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'distributeRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRegisterRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'registerRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'registerRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRemoveRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'removeRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'removeRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonUpdateRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'updateRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'updateRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonConfigureOracleManager(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'configureOracleManager'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'configureOracleManager'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonRegisterCcip(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'registerCcip'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'registerCcip'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonSetConfig(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'setConfig'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'setConfig'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonDelegateCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'delegateCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'delegateCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonGetPosition(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getPosition'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPosition'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonGetPositionCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getPositionCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPositionCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonGetPositionDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getPositionDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getPositionDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonGetVaultCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getVaultCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getVaultCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function usePrepareDeploymentsSynthetixCoreProxyJsonGetVaultDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'getVaultDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'getVaultDebt'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__.
 */
export function useDeploymentsSynthetixCoreProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagAllowAllSet"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonFeatureFlagAllowAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'FeatureFlagAllowAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagAllowAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'FeatureFlagAllowAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistAdded"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonFeatureFlagAllowlistAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'FeatureFlagAllowlistAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagAllowlistAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'FeatureFlagAllowlistAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistRemoved"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonFeatureFlagAllowlistRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'FeatureFlagAllowlistRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagAllowlistRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'FeatureFlagAllowlistRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagDeniersReset"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonFeatureFlagDeniersResetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'FeatureFlagDeniersReset'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagDeniersReset',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'FeatureFlagDeniersReset'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"FeatureFlagDenyAllSet"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonFeatureFlagDenyAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'FeatureFlagDenyAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'FeatureFlagDenyAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'FeatureFlagDenyAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"AccountCreated"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonAccountCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'AccountCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'AccountCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'AccountCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PermissionGranted"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPermissionGrantedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PermissionGranted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PermissionGranted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PermissionGranted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PermissionRevoked"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPermissionRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PermissionRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PermissionRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PermissionRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"DebtAssociated"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonDebtAssociatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'DebtAssociated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'DebtAssociated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'DebtAssociated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"CollateralLockCreated"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonCollateralLockCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'CollateralLockCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'CollateralLockCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'CollateralLockCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"CollateralLockExpired"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonCollateralLockExpiredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'CollateralLockExpired'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'CollateralLockExpired',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'CollateralLockExpired'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"Deposited"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'Deposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'Deposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'Deposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"Withdrawn"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'Withdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'Withdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'Withdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"CollateralConfigured"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'CollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'CollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'CollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"UsdBurned"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonUsdBurnedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'UsdBurned'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'UsdBurned',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'UsdBurned'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"UsdMinted"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonUsdMintedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'UsdMinted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'UsdMinted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'UsdMinted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"Liquidation"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'Liquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'Liquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'Liquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"VaultLiquidation"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonVaultLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'VaultLiquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'VaultLiquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'VaultLiquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketCollateralDeposited"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonMarketCollateralDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'MarketCollateralDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'MarketCollateralDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'MarketCollateralDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketCollateralWithdrawn"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonMarketCollateralWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'MarketCollateralWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'MarketCollateralWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'MarketCollateralWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MaximumMarketCollateralConfigured"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonMaximumMarketCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'MaximumMarketCollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'MaximumMarketCollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'MaximumMarketCollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketRegistered"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonMarketRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'MarketRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'MarketRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'MarketRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketUsdDeposited"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonMarketUsdDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'MarketUsdDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'MarketUsdDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'MarketUsdDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"MarketUsdWithdrawn"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonMarketUsdWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'MarketUsdWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'MarketUsdWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'MarketUsdWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolApprovedAdded"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPoolApprovedAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PoolApprovedAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PoolApprovedAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PoolApprovedAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolApprovedRemoved"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPoolApprovedRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PoolApprovedRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PoolApprovedRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PoolApprovedRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PreferredPoolSet"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPreferredPoolSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PreferredPoolSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PreferredPoolSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PreferredPoolSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolConfigurationSet"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPoolConfigurationSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PoolConfigurationSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PoolConfigurationSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PoolConfigurationSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolCreated"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPoolCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PoolCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PoolCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PoolCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolNameUpdated"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPoolNameUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PoolNameUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PoolNameUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PoolNameUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolNominationRenounced"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPoolNominationRenouncedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PoolNominationRenounced'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PoolNominationRenounced',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PoolNominationRenounced'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolNominationRevoked"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPoolNominationRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PoolNominationRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PoolNominationRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PoolNominationRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolOwnerNominated"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPoolOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PoolOwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PoolOwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PoolOwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"PoolOwnershipAccepted"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonPoolOwnershipAcceptedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'PoolOwnershipAccepted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'PoolOwnershipAccepted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'PoolOwnershipAccepted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"RewardsClaimed"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRewardsClaimedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'RewardsClaimed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'RewardsClaimed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'RewardsClaimed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"RewardsDistributed"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRewardsDistributedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'RewardsDistributed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'RewardsDistributed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'RewardsDistributed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"RewardsDistributorRegistered"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRewardsDistributorRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'RewardsDistributorRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'RewardsDistributorRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'RewardsDistributorRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"RewardsDistributorRemoved"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonRewardsDistributorRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'RewardsDistributorRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'RewardsDistributorRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'RewardsDistributorRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreProxyJsonABI}__ and `eventName` set to `"DelegationUpdated"`.
 */
export function useDeploymentsSynthetixCoreProxyJsonDelegationUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreProxyJsonABI,
      'DelegationUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreProxyJsonABI,
    address: deploymentsSynthetixCoreProxyJsonAddress,
    eventName: 'DelegationUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreProxyJsonABI,
    'DelegationUpdated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__.
 */
export function useDeploymentsSynthetixCoreRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__.
 */
export function useDeploymentsSynthetixCoreRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getDeniers"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetDeniers<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getDeniers'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getDeniers',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getDeniers',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getDeniers',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getFeatureFlagAllowAll"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetFeatureFlagAllowAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getFeatureFlagAllowAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getFeatureFlagAllowAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getFeatureFlagAllowAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getFeatureFlagAllowAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getFeatureFlagAllowlist"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetFeatureFlagAllowlist<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getFeatureFlagAllowlist'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getFeatureFlagAllowlist',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getFeatureFlagAllowlist',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getFeatureFlagAllowlist',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getFeatureFlagDenyAll"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetFeatureFlagDenyAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getFeatureFlagDenyAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getFeatureFlagDenyAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getFeatureFlagDenyAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getFeatureFlagDenyAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isFeatureAllowed"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonIsFeatureAllowed<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isFeatureAllowed'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'isFeatureAllowed',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'isFeatureAllowed',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isFeatureAllowed',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountLastInteraction"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetAccountLastInteraction<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountLastInteraction'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getAccountLastInteraction',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountLastInteraction',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountLastInteraction',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountOwner"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetAccountOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getAccountOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountPermissions"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetAccountPermissions<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountPermissions'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getAccountPermissions',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountPermissions',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountPermissions',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountTokenAddress"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetAccountTokenAddress<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountTokenAddress'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getAccountTokenAddress',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountTokenAddress',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountTokenAddress',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"hasPermission"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonHasPermission<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'hasPermission'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'hasPermission',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'hasPermission',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'hasPermission',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isAuthorized"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonIsAuthorized<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isAuthorized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'isAuthorized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'isAuthorized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isAuthorized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountAvailableCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetAccountAvailableCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountAvailableCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getAccountAvailableCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountAvailableCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountAvailableCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getAccountCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetAccountCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getAccountCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getAccountCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getAccountCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getLocks"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetLocks<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getLocks'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getLocks',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getLocks',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getLocks',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getCollateralConfiguration"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetCollateralConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getCollateralConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getCollateralConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getCollateralConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getCollateralConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getCollateralConfigurations"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetCollateralConfigurations<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getCollateralConfigurations'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getCollateralConfigurations',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getCollateralConfigurations',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getCollateralConfigurations',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getCollateralPrice"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetCollateralPrice<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getCollateralPrice'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getCollateralPrice',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getCollateralPrice',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getCollateralPrice',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketCollateralAmount"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetMarketCollateralAmount<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketCollateralAmount'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getMarketCollateralAmount',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketCollateralAmount',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketCollateralAmount',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketCollateralValue"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetMarketCollateralValue<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketCollateralValue'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getMarketCollateralValue',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketCollateralValue',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketCollateralValue',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMaximumMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetMaximumMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMaximumMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getMaximumMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMaximumMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMaximumMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketNetIssuance"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetMarketNetIssuance<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketNetIssuance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getMarketNetIssuance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketNetIssuance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketNetIssuance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketReportedDebt"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetMarketReportedDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketReportedDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getMarketReportedDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketReportedDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketReportedDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketTotalDebt"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetMarketTotalDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketTotalDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getMarketTotalDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketTotalDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketTotalDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getWithdrawableMarketUsd"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetWithdrawableMarketUsd<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getWithdrawableMarketUsd'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getWithdrawableMarketUsd',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getWithdrawableMarketUsd',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getWithdrawableMarketUsd',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isMarketCapacityLocked"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonIsMarketCapacityLocked<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isMarketCapacityLocked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'isMarketCapacityLocked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'isMarketCapacityLocked',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isMarketCapacityLocked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getApprovedPools"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetApprovedPools<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getApprovedPools'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getApprovedPools',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getApprovedPools',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getApprovedPools',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPreferredPool"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetPreferredPool<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPreferredPool'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getPreferredPool',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPreferredPool',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPreferredPool',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMinLiquidityRatio"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetMinLiquidityRatio<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMinLiquidityRatio'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getMinLiquidityRatio',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMinLiquidityRatio',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMinLiquidityRatio',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getNominatedPoolOwner"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetNominatedPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getNominatedPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getNominatedPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getNominatedPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getNominatedPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPoolConfiguration"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetPoolConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPoolConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getPoolConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPoolConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPoolConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPoolName"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetPoolName<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPoolName'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getPoolName',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPoolName',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPoolName',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPoolOwner"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getRewardRate"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetRewardRate<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getRewardRate'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getRewardRate',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getRewardRate',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getRewardRate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getConfig"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetConfig<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getConfig'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getConfig',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getConfig',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getConfig',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetPositionCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPositionCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getPositionCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPositionCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetVaultCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getVaultCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getVaultCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getVaultCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__.
 */
export function useDeploymentsSynthetixCoreRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonAddToFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'addToFeatureFlagAllowlist'
        >['abi'],
        'addToFeatureFlagAllowlist'
      > & { functionName?: 'addToFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'addToFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'addToFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'addToFeatureFlagAllowlist'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRemoveFromFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'removeFromFeatureFlagAllowlist'
        >['abi'],
        'removeFromFeatureFlagAllowlist'
      > & { functionName?: 'removeFromFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'removeFromFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'removeFromFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'removeFromFeatureFlagAllowlist'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonSetDeniers<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'setDeniers'
        >['abi'],
        'setDeniers'
      > & { functionName?: 'setDeniers' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'setDeniers'
      > & {
        abi?: never
        functionName?: 'setDeniers'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setDeniers'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonSetFeatureFlagAllowAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'setFeatureFlagAllowAll'
        >['abi'],
        'setFeatureFlagAllowAll'
      > & { functionName?: 'setFeatureFlagAllowAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'setFeatureFlagAllowAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagAllowAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setFeatureFlagAllowAll'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonSetFeatureFlagDenyAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'setFeatureFlagDenyAll'
        >['abi'],
        'setFeatureFlagDenyAll'
      > & { functionName?: 'setFeatureFlagDenyAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'setFeatureFlagDenyAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagDenyAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setFeatureFlagDenyAll'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonCreateAccount<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'createAccount'
        >['abi'],
        'createAccount'
      > & { functionName?: 'createAccount' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'createAccount'
      > & {
        abi?: never
        functionName?: 'createAccount'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'createAccount'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGrantPermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'grantPermission'
        >['abi'],
        'grantPermission'
      > & { functionName?: 'grantPermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'grantPermission'
      > & {
        abi?: never
        functionName?: 'grantPermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'grantPermission'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonNotifyAccountTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'notifyAccountTransfer'
        >['abi'],
        'notifyAccountTransfer'
      > & { functionName?: 'notifyAccountTransfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'notifyAccountTransfer'
      > & {
        abi?: never
        functionName?: 'notifyAccountTransfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'notifyAccountTransfer'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRenouncePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'renouncePermission'
        >['abi'],
        'renouncePermission'
      > & { functionName?: 'renouncePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'renouncePermission'
      > & {
        abi?: never
        functionName?: 'renouncePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'renouncePermission'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRevokePermission<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'revokePermission'
        >['abi'],
        'revokePermission'
      > & { functionName?: 'revokePermission' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'revokePermission'
      > & {
        abi?: never
        functionName?: 'revokePermission'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'revokePermission'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonAssociateDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'associateDebt'
        >['abi'],
        'associateDebt'
      > & { functionName?: 'associateDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'associateDebt'
      > & {
        abi?: never
        functionName?: 'associateDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'associateDebt'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonCleanExpiredLocks<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'cleanExpiredLocks'
        >['abi'],
        'cleanExpiredLocks'
      > & { functionName?: 'cleanExpiredLocks' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'cleanExpiredLocks'
      > & {
        abi?: never
        functionName?: 'cleanExpiredLocks'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'cleanExpiredLocks'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonCreateLock<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'createLock'
        >['abi'],
        'createLock'
      > & { functionName?: 'createLock' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'createLock'
      > & {
        abi?: never
        functionName?: 'createLock'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'createLock'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'createLock',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonDeposit<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'deposit'
        >['abi'],
        'deposit'
      > & { functionName?: 'deposit' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'deposit'
      > & {
        abi?: never
        functionName?: 'deposit'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'deposit'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'deposit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonWithdraw<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'withdraw'
        >['abi'],
        'withdraw'
      > & { functionName?: 'withdraw' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'withdraw'
      > & {
        abi?: never
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'withdraw'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonConfigureCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'configureCollateral'
        >['abi'],
        'configureCollateral'
      > & { functionName?: 'configureCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'configureCollateral'
      > & {
        abi?: never
        functionName?: 'configureCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'configureCollateral'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonBurnUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'burnUsd'
        >['abi'],
        'burnUsd'
      > & { functionName?: 'burnUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'burnUsd'
      > & {
        abi?: never
        functionName?: 'burnUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'burnUsd'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonMintUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'mintUsd'
        >['abi'],
        'mintUsd'
      > & { functionName?: 'mintUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'mintUsd'
      > & {
        abi?: never
        functionName?: 'mintUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'mintUsd'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonIsPositionLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'isPositionLiquidatable'
        >['abi'],
        'isPositionLiquidatable'
      > & { functionName?: 'isPositionLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'isPositionLiquidatable'
      > & {
        abi?: never
        functionName?: 'isPositionLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isPositionLiquidatable'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonIsVaultLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'isVaultLiquidatable'
        >['abi'],
        'isVaultLiquidatable'
      > & { functionName?: 'isVaultLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'isVaultLiquidatable'
      > & {
        abi?: never
        functionName?: 'isVaultLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isVaultLiquidatable'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonLiquidate<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'liquidate'
        >['abi'],
        'liquidate'
      > & { functionName?: 'liquidate' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'liquidate'
      > & {
        abi?: never
        functionName?: 'liquidate'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'liquidate'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonLiquidateVault<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'liquidateVault'
        >['abi'],
        'liquidateVault'
      > & { functionName?: 'liquidateVault' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'liquidateVault'
      > & {
        abi?: never
        functionName?: 'liquidateVault'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'liquidateVault'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonConfigureMaximumMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'configureMaximumMarketCollateral'
        >['abi'],
        'configureMaximumMarketCollateral'
      > & { functionName?: 'configureMaximumMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'configureMaximumMarketCollateral'
      > & {
        abi?: never
        functionName?: 'configureMaximumMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'configureMaximumMarketCollateral'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonDepositMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'depositMarketCollateral'
        >['abi'],
        'depositMarketCollateral'
      > & { functionName?: 'depositMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'depositMarketCollateral'
      > & {
        abi?: never
        functionName?: 'depositMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'depositMarketCollateral'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonWithdrawMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'withdrawMarketCollateral'
        >['abi'],
        'withdrawMarketCollateral'
      > & { functionName?: 'withdrawMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'withdrawMarketCollateral'
      > & {
        abi?: never
        functionName?: 'withdrawMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'withdrawMarketCollateral'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonDepositMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'depositMarketUsd'
        >['abi'],
        'depositMarketUsd'
      > & { functionName?: 'depositMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'depositMarketUsd'
      > & {
        abi?: never
        functionName?: 'depositMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'depositMarketUsd'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonDistributeDebtToPools<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'distributeDebtToPools'
        >['abi'],
        'distributeDebtToPools'
      > & { functionName?: 'distributeDebtToPools' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'distributeDebtToPools'
      > & {
        abi?: never
        functionName?: 'distributeDebtToPools'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'distributeDebtToPools'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetMarketDebtPerShare<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'getMarketDebtPerShare'
        >['abi'],
        'getMarketDebtPerShare'
      > & { functionName?: 'getMarketDebtPerShare' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'getMarketDebtPerShare'
      > & {
        abi?: never
        functionName?: 'getMarketDebtPerShare'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketDebtPerShare'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRegisterMarket<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'registerMarket'
        >['abi'],
        'registerMarket'
      > & { functionName?: 'registerMarket' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'registerMarket'
      > & {
        abi?: never
        functionName?: 'registerMarket'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'registerMarket'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonWithdrawMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'withdrawMarketUsd'
        >['abi'],
        'withdrawMarketUsd'
      > & { functionName?: 'withdrawMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'withdrawMarketUsd'
      > & {
        abi?: never
        functionName?: 'withdrawMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'withdrawMarketUsd'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonMulticall<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'multicall'
        >['abi'],
        'multicall'
      > & { functionName?: 'multicall' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'multicall'
      > & {
        abi?: never
        functionName?: 'multicall'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'multicall'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'multicall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonAddApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'addApprovedPool'
        >['abi'],
        'addApprovedPool'
      > & { functionName?: 'addApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'addApprovedPool'
      > & {
        abi?: never
        functionName?: 'addApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'addApprovedPool'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRemoveApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'removeApprovedPool'
        >['abi'],
        'removeApprovedPool'
      > & { functionName?: 'removeApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'removeApprovedPool'
      > & {
        abi?: never
        functionName?: 'removeApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'removeApprovedPool'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonSetPreferredPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'setPreferredPool'
        >['abi'],
        'setPreferredPool'
      > & { functionName?: 'setPreferredPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'setPreferredPool'
      > & {
        abi?: never
        functionName?: 'setPreferredPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setPreferredPool'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonAcceptPoolOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'acceptPoolOwnership'
        >['abi'],
        'acceptPoolOwnership'
      > & { functionName?: 'acceptPoolOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'acceptPoolOwnership'
      > & {
        abi?: never
        functionName?: 'acceptPoolOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'acceptPoolOwnership'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonCreatePool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'createPool'
        >['abi'],
        'createPool'
      > & { functionName?: 'createPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'createPool'
      > & {
        abi?: never
        functionName?: 'createPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'createPool'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'createPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonNominatePoolOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'nominatePoolOwner'
        >['abi'],
        'nominatePoolOwner'
      > & { functionName?: 'nominatePoolOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'nominatePoolOwner'
      > & {
        abi?: never
        functionName?: 'nominatePoolOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'nominatePoolOwner'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRenouncePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'renouncePoolNomination'
        >['abi'],
        'renouncePoolNomination'
      > & { functionName?: 'renouncePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'renouncePoolNomination'
      > & {
        abi?: never
        functionName?: 'renouncePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'renouncePoolNomination'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRevokePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'revokePoolNomination'
        >['abi'],
        'revokePoolNomination'
      > & { functionName?: 'revokePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'revokePoolNomination'
      > & {
        abi?: never
        functionName?: 'revokePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'revokePoolNomination'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonSetMinLiquidityRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'setMinLiquidityRatio'
        >['abi'],
        'setMinLiquidityRatio'
      > & { functionName?: 'setMinLiquidityRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'setMinLiquidityRatio'
      > & {
        abi?: never
        functionName?: 'setMinLiquidityRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setMinLiquidityRatio'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonSetPoolConfiguration<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'setPoolConfiguration'
        >['abi'],
        'setPoolConfiguration'
      > & { functionName?: 'setPoolConfiguration' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'setPoolConfiguration'
      > & {
        abi?: never
        functionName?: 'setPoolConfiguration'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setPoolConfiguration'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonSetPoolName<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'setPoolName'
        >['abi'],
        'setPoolName'
      > & { functionName?: 'setPoolName' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'setPoolName'
      > & {
        abi?: never
        functionName?: 'setPoolName'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setPoolName'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonClaimRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'claimRewards'
        >['abi'],
        'claimRewards'
      > & { functionName?: 'claimRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'claimRewards'
      > & {
        abi?: never
        functionName?: 'claimRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'claimRewards'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonDistributeRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'distributeRewards'
        >['abi'],
        'distributeRewards'
      > & { functionName?: 'distributeRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'distributeRewards'
      > & {
        abi?: never
        functionName?: 'distributeRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'distributeRewards'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRegisterRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'registerRewardsDistributor'
        >['abi'],
        'registerRewardsDistributor'
      > & { functionName?: 'registerRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'registerRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'registerRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'registerRewardsDistributor'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRemoveRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'removeRewardsDistributor'
        >['abi'],
        'removeRewardsDistributor'
      > & { functionName?: 'removeRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'removeRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'removeRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'removeRewardsDistributor'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonUpdateRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'updateRewards'
        >['abi'],
        'updateRewards'
      > & { functionName?: 'updateRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'updateRewards'
      > & {
        abi?: never
        functionName?: 'updateRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'updateRewards'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonConfigureOracleManager<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'configureOracleManager'
        >['abi'],
        'configureOracleManager'
      > & { functionName?: 'configureOracleManager' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'configureOracleManager'
      > & {
        abi?: never
        functionName?: 'configureOracleManager'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'configureOracleManager'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRegisterCcip<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'registerCcip'
        >['abi'],
        'registerCcip'
      > & { functionName?: 'registerCcip' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'registerCcip'
      > & {
        abi?: never
        functionName?: 'registerCcip'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'registerCcip'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonSetConfig<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'setConfig'
        >['abi'],
        'setConfig'
      > & { functionName?: 'setConfig' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'setConfig'
      > & {
        abi?: never
        functionName?: 'setConfig'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setConfig'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonDelegateCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'delegateCollateral'
        >['abi'],
        'delegateCollateral'
      > & { functionName?: 'delegateCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'delegateCollateral'
      > & {
        abi?: never
        functionName?: 'delegateCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'delegateCollateral'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetPosition<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'getPosition'
        >['abi'],
        'getPosition'
      > & { functionName?: 'getPosition' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'getPosition'
      > & {
        abi?: never
        functionName?: 'getPosition'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPosition'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetPositionCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'getPositionCollateralRatio'
        >['abi'],
        'getPositionCollateralRatio'
      > & { functionName?: 'getPositionCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'getPositionCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getPositionCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPositionCollateralRatio'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetPositionDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'getPositionDebt'
        >['abi'],
        'getPositionDebt'
      > & { functionName?: 'getPositionDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'getPositionDebt'
      > & {
        abi?: never
        functionName?: 'getPositionDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPositionDebt'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetVaultCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'getVaultCollateralRatio'
        >['abi'],
        'getVaultCollateralRatio'
      > & { functionName?: 'getVaultCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'getVaultCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getVaultCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getVaultCollateralRatio'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonGetVaultDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixCoreRouterJsonABI,
          'getVaultDebt'
        >['abi'],
        'getVaultDebt'
      > & { functionName?: 'getVaultDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixCoreRouterJsonABI,
        'getVaultDebt'
      > & {
        abi?: never
        functionName?: 'getVaultDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getVaultDebt'
  >({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonAddToFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'addToFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'addToFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRemoveFromFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'removeFromFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'removeFromFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonSetDeniers(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'setDeniers'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setDeniers'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonSetFeatureFlagAllowAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'setFeatureFlagAllowAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setFeatureFlagAllowAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonSetFeatureFlagDenyAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'setFeatureFlagDenyAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setFeatureFlagDenyAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createAccount"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonCreateAccount(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'createAccount'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'createAccount',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'createAccount'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"grantPermission"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonGrantPermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'grantPermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'grantPermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'grantPermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"notifyAccountTransfer"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonNotifyAccountTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'notifyAccountTransfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'notifyAccountTransfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'notifyAccountTransfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renouncePermission"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRenouncePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'renouncePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'renouncePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'renouncePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"revokePermission"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRevokePermission(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'revokePermission'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'revokePermission',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'revokePermission'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"associateDebt"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonAssociateDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'associateDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'associateDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'associateDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"cleanExpiredLocks"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonCleanExpiredLocks(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'cleanExpiredLocks'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'cleanExpiredLocks',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'cleanExpiredLocks'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createLock"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonCreateLock(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'createLock'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'createLock',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'createLock'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"deposit"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonDeposit(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'deposit'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'deposit',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'deposit'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdraw"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'withdraw'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'withdraw'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonConfigureCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'configureCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'configureCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'configureCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonBurnUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'burnUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'burnUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonMintUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'mintUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'mintUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonIsPositionLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'isPositionLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isPositionLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonIsVaultLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'isVaultLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'isVaultLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonLiquidate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'liquidate'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'liquidate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonLiquidateVault(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'liquidateVault'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'liquidateVault'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonConfigureMaximumMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'configureMaximumMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'configureMaximumMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonDepositMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'depositMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'depositMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonWithdrawMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'withdrawMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'withdrawMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonDepositMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'depositMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'depositMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonDistributeDebtToPools(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'distributeDebtToPools'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'distributeDebtToPools'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonGetMarketDebtPerShare(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getMarketDebtPerShare'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getMarketDebtPerShare'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRegisterMarket(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'registerMarket'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'registerMarket'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonWithdrawMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'withdrawMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'withdrawMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonMulticall(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'multicall'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'multicall',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'multicall'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonAddApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'addApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'addApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRemoveApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'removeApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'removeApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonSetPreferredPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'setPreferredPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setPreferredPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonAcceptPoolOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'acceptPoolOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'acceptPoolOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonCreatePool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'createPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'createPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'createPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonNominatePoolOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'nominatePoolOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'nominatePoolOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRenouncePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'renouncePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'renouncePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRevokePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'revokePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'revokePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonSetMinLiquidityRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'setMinLiquidityRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setMinLiquidityRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonSetPoolConfiguration(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'setPoolConfiguration'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setPoolConfiguration'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonSetPoolName(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'setPoolName'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setPoolName'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonClaimRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'claimRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'claimRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonDistributeRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'distributeRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'distributeRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRegisterRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'registerRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'registerRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRemoveRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'removeRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'removeRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonUpdateRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'updateRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'updateRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonConfigureOracleManager(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'configureOracleManager'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'configureOracleManager'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonRegisterCcip(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'registerCcip'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'registerCcip'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonSetConfig(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'setConfig'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'setConfig'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonDelegateCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'delegateCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'delegateCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonGetPosition(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getPosition'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPosition'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonGetPositionCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getPositionCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPositionCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonGetPositionDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getPositionDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getPositionDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonGetVaultCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getVaultCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getVaultCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function usePrepareDeploymentsSynthetixCoreRouterJsonGetVaultDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'getVaultDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'getVaultDebt'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__.
 */
export function useDeploymentsSynthetixCoreRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagAllowAllSet"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonFeatureFlagAllowAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'FeatureFlagAllowAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagAllowAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'FeatureFlagAllowAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistAdded"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonFeatureFlagAllowlistAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'FeatureFlagAllowlistAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagAllowlistAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'FeatureFlagAllowlistAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistRemoved"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonFeatureFlagAllowlistRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'FeatureFlagAllowlistRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagAllowlistRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'FeatureFlagAllowlistRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagDeniersReset"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonFeatureFlagDeniersResetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'FeatureFlagDeniersReset'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagDeniersReset',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'FeatureFlagDeniersReset'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"FeatureFlagDenyAllSet"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonFeatureFlagDenyAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'FeatureFlagDenyAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'FeatureFlagDenyAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'FeatureFlagDenyAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"AccountCreated"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonAccountCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'AccountCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'AccountCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'AccountCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PermissionGranted"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPermissionGrantedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PermissionGranted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PermissionGranted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PermissionGranted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PermissionRevoked"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPermissionRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PermissionRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PermissionRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PermissionRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"DebtAssociated"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonDebtAssociatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'DebtAssociated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'DebtAssociated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'DebtAssociated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"CollateralLockCreated"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonCollateralLockCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'CollateralLockCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'CollateralLockCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'CollateralLockCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"CollateralLockExpired"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonCollateralLockExpiredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'CollateralLockExpired'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'CollateralLockExpired',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'CollateralLockExpired'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"Deposited"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'Deposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'Deposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'Deposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"Withdrawn"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'Withdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'Withdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'Withdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"CollateralConfigured"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'CollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'CollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'CollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"UsdBurned"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonUsdBurnedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'UsdBurned'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'UsdBurned',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'UsdBurned'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"UsdMinted"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonUsdMintedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'UsdMinted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'UsdMinted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'UsdMinted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"Liquidation"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'Liquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'Liquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'Liquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"VaultLiquidation"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonVaultLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'VaultLiquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'VaultLiquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'VaultLiquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketCollateralDeposited"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonMarketCollateralDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'MarketCollateralDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'MarketCollateralDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'MarketCollateralDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketCollateralWithdrawn"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonMarketCollateralWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'MarketCollateralWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'MarketCollateralWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'MarketCollateralWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MaximumMarketCollateralConfigured"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonMaximumMarketCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'MaximumMarketCollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'MaximumMarketCollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'MaximumMarketCollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketRegistered"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonMarketRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'MarketRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'MarketRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'MarketRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketUsdDeposited"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonMarketUsdDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'MarketUsdDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'MarketUsdDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'MarketUsdDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"MarketUsdWithdrawn"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonMarketUsdWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'MarketUsdWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'MarketUsdWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'MarketUsdWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolApprovedAdded"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPoolApprovedAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PoolApprovedAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PoolApprovedAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PoolApprovedAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolApprovedRemoved"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPoolApprovedRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PoolApprovedRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PoolApprovedRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PoolApprovedRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PreferredPoolSet"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPreferredPoolSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PreferredPoolSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PreferredPoolSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PreferredPoolSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolConfigurationSet"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPoolConfigurationSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PoolConfigurationSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PoolConfigurationSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PoolConfigurationSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolCreated"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPoolCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PoolCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PoolCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PoolCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolNameUpdated"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPoolNameUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PoolNameUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PoolNameUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PoolNameUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolNominationRenounced"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPoolNominationRenouncedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PoolNominationRenounced'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PoolNominationRenounced',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PoolNominationRenounced'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolNominationRevoked"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPoolNominationRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PoolNominationRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PoolNominationRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PoolNominationRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolOwnerNominated"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPoolOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PoolOwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PoolOwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PoolOwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"PoolOwnershipAccepted"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonPoolOwnershipAcceptedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'PoolOwnershipAccepted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'PoolOwnershipAccepted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'PoolOwnershipAccepted'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"RewardsClaimed"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRewardsClaimedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'RewardsClaimed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'RewardsClaimed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'RewardsClaimed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"RewardsDistributed"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRewardsDistributedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'RewardsDistributed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'RewardsDistributed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'RewardsDistributed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"RewardsDistributorRegistered"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRewardsDistributorRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'RewardsDistributorRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'RewardsDistributorRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'RewardsDistributorRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"RewardsDistributorRemoved"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonRewardsDistributorRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'RewardsDistributorRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'RewardsDistributorRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'RewardsDistributorRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixCoreRouterJsonABI}__ and `eventName` set to `"DelegationUpdated"`.
 */
export function useDeploymentsSynthetixCoreRouterJsonDelegationUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixCoreRouterJsonABI,
      'DelegationUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixCoreRouterJsonABI,
    address: deploymentsSynthetixCoreRouterJsonAddress,
    eventName: 'DelegationUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixCoreRouterJsonABI,
    'DelegationUpdated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"getDeniers"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonGetDeniers<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'getDeniers'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'getDeniers',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'getDeniers',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'getDeniers',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"getFeatureFlagAllowAll"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonGetFeatureFlagAllowAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'getFeatureFlagAllowAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'getFeatureFlagAllowAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"getFeatureFlagAllowlist"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonGetFeatureFlagAllowlist<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowlist'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'getFeatureFlagAllowlist',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'getFeatureFlagAllowlist',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagAllowlist',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"getFeatureFlagDenyAll"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonGetFeatureFlagDenyAll<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagDenyAll'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'getFeatureFlagDenyAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'getFeatureFlagDenyAll',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'getFeatureFlagDenyAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"isFeatureAllowed"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonIsFeatureAllowed<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'isFeatureAllowed'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'isFeatureAllowed',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'isFeatureAllowed',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'isFeatureAllowed',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonAddToFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
          'addToFeatureFlagAllowlist'
        >['abi'],
        'addToFeatureFlagAllowlist'
      > & { functionName?: 'addToFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
        'addToFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'addToFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'addToFeatureFlagAllowlist'
  >({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonRemoveFromFeatureFlagAllowlist<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
          'removeFromFeatureFlagAllowlist'
        >['abi'],
        'removeFromFeatureFlagAllowlist'
      > & { functionName?: 'removeFromFeatureFlagAllowlist' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
        'removeFromFeatureFlagAllowlist'
      > & {
        abi?: never
        functionName?: 'removeFromFeatureFlagAllowlist'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'removeFromFeatureFlagAllowlist'
  >({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonSetDeniers<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
          'setDeniers'
        >['abi'],
        'setDeniers'
      > & { functionName?: 'setDeniers' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
        'setDeniers'
      > & {
        abi?: never
        functionName?: 'setDeniers'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'setDeniers'
  >({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonSetFeatureFlagAllowAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
          'setFeatureFlagAllowAll'
        >['abi'],
        'setFeatureFlagAllowAll'
      > & { functionName?: 'setFeatureFlagAllowAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
        'setFeatureFlagAllowAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagAllowAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'setFeatureFlagAllowAll'
  >({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonSetFeatureFlagDenyAll<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
          'setFeatureFlagDenyAll'
        >['abi'],
        'setFeatureFlagDenyAll'
      > & { functionName?: 'setFeatureFlagDenyAll' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
        'setFeatureFlagDenyAll'
      > & {
        abi?: never
        functionName?: 'setFeatureFlagDenyAll'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'setFeatureFlagDenyAll'
  >({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixFeatureFlagModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"addToFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSynthetixFeatureFlagModuleJsonAddToFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'addToFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'addToFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'addToFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"removeFromFeatureFlagAllowlist"`.
 */
export function usePrepareDeploymentsSynthetixFeatureFlagModuleJsonRemoveFromFeatureFlagAllowlist(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'removeFromFeatureFlagAllowlist'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'removeFromFeatureFlagAllowlist',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'removeFromFeatureFlagAllowlist'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setDeniers"`.
 */
export function usePrepareDeploymentsSynthetixFeatureFlagModuleJsonSetDeniers(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'setDeniers'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setDeniers',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'setDeniers'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagAllowAll"`.
 */
export function usePrepareDeploymentsSynthetixFeatureFlagModuleJsonSetFeatureFlagAllowAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'setFeatureFlagAllowAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagAllowAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'setFeatureFlagAllowAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `functionName` set to `"setFeatureFlagDenyAll"`.
 */
export function usePrepareDeploymentsSynthetixFeatureFlagModuleJsonSetFeatureFlagDenyAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'setFeatureFlagDenyAll'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    functionName: 'setFeatureFlagDenyAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'setFeatureFlagDenyAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagAllowAllSet"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonFeatureFlagAllowAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagAllowAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagAllowAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagAllowAllSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistAdded"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonFeatureFlagAllowlistAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagAllowlistAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagAllowlistAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagAllowlistAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagAllowlistRemoved"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonFeatureFlagAllowlistRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagAllowlistRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagAllowlistRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagAllowlistRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagDeniersReset"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonFeatureFlagDeniersResetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagDeniersReset'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagDeniersReset',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagDeniersReset'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixFeatureFlagModuleJsonABI}__ and `eventName` set to `"FeatureFlagDenyAllSet"`.
 */
export function useDeploymentsSynthetixFeatureFlagModuleJsonFeatureFlagDenyAllSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
      'FeatureFlagDenyAllSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixFeatureFlagModuleJsonABI,
    address: deploymentsSynthetixFeatureFlagModuleJsonAddress,
    eventName: 'FeatureFlagDenyAllSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixFeatureFlagModuleJsonABI,
    'FeatureFlagDenyAllSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__.
 */
export function useDeploymentsSynthetixInitialCoreProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialCoreProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialCoreProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialCoreProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialCoreProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialCoreProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialCoreProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialCoreProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialCoreProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialCoreProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialCoreProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialCoreProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialCoreProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixInitialCoreProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixInitialCoreProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixInitialCoreProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixInitialCoreProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixInitialCoreProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixInitialCoreProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixInitialCoreProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixInitialCoreProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixInitialCoreProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixInitialCoreProxyJsonABI,
    address: deploymentsSynthetixInitialCoreProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixInitialCoreProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__.
 */
export function useDeploymentsSynthetixInitialModuleBundleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialModuleBundleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialModuleBundleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialModuleBundleJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialModuleBundleJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialModuleBundleJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialModuleBundleJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialModuleBundleJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialModuleBundleJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialModuleBundleJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialModuleBundleJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixInitialModuleBundleJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixInitialModuleBundleJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixInitialModuleBundleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixInitialModuleBundleJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixInitialModuleBundleJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixInitialModuleBundleJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixInitialModuleBundleJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixInitialModuleBundleJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixInitialModuleBundleJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixInitialModuleBundleJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixInitialModuleBundleJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixInitialModuleBundleJsonABI,
    address: deploymentsSynthetixInitialModuleBundleJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixInitialModuleBundleJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__.
 */
export function useDeploymentsSynthetixIssueUsdModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__.
 */
export function useDeploymentsSynthetixIssueUsdModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixIssueUsdModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixIssueUsdModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixIssueUsdModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function useDeploymentsSynthetixIssueUsdModuleJsonBurnUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixIssueUsdModuleJsonABI,
          'burnUsd'
        >['abi'],
        'burnUsd'
      > & { functionName?: 'burnUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixIssueUsdModuleJsonABI,
        'burnUsd'
      > & {
        abi?: never
        functionName?: 'burnUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixIssueUsdModuleJsonABI,
    'burnUsd'
  >({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function useDeploymentsSynthetixIssueUsdModuleJsonMintUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixIssueUsdModuleJsonABI,
          'mintUsd'
        >['abi'],
        'mintUsd'
      > & { functionName?: 'mintUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixIssueUsdModuleJsonABI,
        'mintUsd'
      > & {
        abi?: never
        functionName?: 'mintUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixIssueUsdModuleJsonABI,
    'mintUsd'
  >({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixIssueUsdModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixIssueUsdModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixIssueUsdModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__ and `functionName` set to `"burnUsd"`.
 */
export function usePrepareDeploymentsSynthetixIssueUsdModuleJsonBurnUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixIssueUsdModuleJsonABI,
      'burnUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    functionName: 'burnUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixIssueUsdModuleJsonABI,
    'burnUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__ and `functionName` set to `"mintUsd"`.
 */
export function usePrepareDeploymentsSynthetixIssueUsdModuleJsonMintUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixIssueUsdModuleJsonABI,
      'mintUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    functionName: 'mintUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixIssueUsdModuleJsonABI,
    'mintUsd'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__.
 */
export function useDeploymentsSynthetixIssueUsdModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixIssueUsdModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixIssueUsdModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__ and `eventName` set to `"UsdBurned"`.
 */
export function useDeploymentsSynthetixIssueUsdModuleJsonUsdBurnedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixIssueUsdModuleJsonABI,
      'UsdBurned'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    eventName: 'UsdBurned',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixIssueUsdModuleJsonABI,
    'UsdBurned'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixIssueUsdModuleJsonABI}__ and `eventName` set to `"UsdMinted"`.
 */
export function useDeploymentsSynthetixIssueUsdModuleJsonUsdMintedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixIssueUsdModuleJsonABI,
      'UsdMinted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixIssueUsdModuleJsonABI,
    address: deploymentsSynthetixIssueUsdModuleJsonAddress,
    eventName: 'UsdMinted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixIssueUsdModuleJsonABI,
    'UsdMinted'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixLiquidationModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixLiquidationModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixLiquidationModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixLiquidationModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function useDeploymentsSynthetixLiquidationModuleJsonIsPositionLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixLiquidationModuleJsonABI,
          'isPositionLiquidatable'
        >['abi'],
        'isPositionLiquidatable'
      > & { functionName?: 'isPositionLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixLiquidationModuleJsonABI,
        'isPositionLiquidatable'
      > & {
        abi?: never
        functionName?: 'isPositionLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'isPositionLiquidatable'
  >({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function useDeploymentsSynthetixLiquidationModuleJsonIsVaultLiquidatable<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixLiquidationModuleJsonABI,
          'isVaultLiquidatable'
        >['abi'],
        'isVaultLiquidatable'
      > & { functionName?: 'isVaultLiquidatable' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixLiquidationModuleJsonABI,
        'isVaultLiquidatable'
      > & {
        abi?: never
        functionName?: 'isVaultLiquidatable'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'isVaultLiquidatable'
  >({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function useDeploymentsSynthetixLiquidationModuleJsonLiquidate<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixLiquidationModuleJsonABI,
          'liquidate'
        >['abi'],
        'liquidate'
      > & { functionName?: 'liquidate' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixLiquidationModuleJsonABI,
        'liquidate'
      > & {
        abi?: never
        functionName?: 'liquidate'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'liquidate'
  >({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function useDeploymentsSynthetixLiquidationModuleJsonLiquidateVault<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixLiquidationModuleJsonABI,
          'liquidateVault'
        >['abi'],
        'liquidateVault'
      > & { functionName?: 'liquidateVault' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixLiquidationModuleJsonABI,
        'liquidateVault'
      > & {
        abi?: never
        functionName?: 'liquidateVault'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'liquidateVault'
  >({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixLiquidationModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixLiquidationModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"isPositionLiquidatable"`.
 */
export function usePrepareDeploymentsSynthetixLiquidationModuleJsonIsPositionLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixLiquidationModuleJsonABI,
      'isPositionLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    functionName: 'isPositionLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'isPositionLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"isVaultLiquidatable"`.
 */
export function usePrepareDeploymentsSynthetixLiquidationModuleJsonIsVaultLiquidatable(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixLiquidationModuleJsonABI,
      'isVaultLiquidatable'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    functionName: 'isVaultLiquidatable',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'isVaultLiquidatable'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"liquidate"`.
 */
export function usePrepareDeploymentsSynthetixLiquidationModuleJsonLiquidate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixLiquidationModuleJsonABI,
      'liquidate'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    functionName: 'liquidate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'liquidate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `functionName` set to `"liquidateVault"`.
 */
export function usePrepareDeploymentsSynthetixLiquidationModuleJsonLiquidateVault(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixLiquidationModuleJsonABI,
      'liquidateVault'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    functionName: 'liquidateVault',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'liquidateVault'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixLiquidationModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixLiquidationModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `eventName` set to `"Liquidation"`.
 */
export function useDeploymentsSynthetixLiquidationModuleJsonLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixLiquidationModuleJsonABI,
      'Liquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    eventName: 'Liquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'Liquidation'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixLiquidationModuleJsonABI}__ and `eventName` set to `"VaultLiquidation"`.
 */
export function useDeploymentsSynthetixLiquidationModuleJsonVaultLiquidationEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixLiquidationModuleJsonABI,
      'VaultLiquidation'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixLiquidationModuleJsonABI,
    address: deploymentsSynthetixLiquidationModuleJsonAddress,
    eventName: 'VaultLiquidation',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixLiquidationModuleJsonABI,
    'VaultLiquidation'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"getMarketCollateralAmount"`.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonGetMarketCollateralAmount<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'getMarketCollateralAmount'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      'getMarketCollateralAmount',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'getMarketCollateralAmount',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'getMarketCollateralAmount',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"getMarketCollateralValue"`.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonGetMarketCollateralValue<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'getMarketCollateralValue'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      'getMarketCollateralValue',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'getMarketCollateralValue',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'getMarketCollateralValue',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"getMaximumMarketCollateral"`.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonGetMaximumMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'getMaximumMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      'getMaximumMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'getMaximumMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'getMaximumMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonConfigureMaximumMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
          'configureMaximumMarketCollateral'
        >['abi'],
        'configureMaximumMarketCollateral'
      > & { functionName?: 'configureMaximumMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
        'configureMaximumMarketCollateral'
      > & {
        abi?: never
        functionName?: 'configureMaximumMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'configureMaximumMarketCollateral'
  >({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonDepositMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
          'depositMarketCollateral'
        >['abi'],
        'depositMarketCollateral'
      > & { functionName?: 'depositMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
        'depositMarketCollateral'
      > & {
        abi?: never
        functionName?: 'depositMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'depositMarketCollateral'
  >({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonWithdrawMarketCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
          'withdrawMarketCollateral'
        >['abi'],
        'withdrawMarketCollateral'
      > & { functionName?: 'withdrawMarketCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
        'withdrawMarketCollateral'
      > & {
        abi?: never
        functionName?: 'withdrawMarketCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'withdrawMarketCollateral'
  >({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixMarketCollateralModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"configureMaximumMarketCollateral"`.
 */
export function usePrepareDeploymentsSynthetixMarketCollateralModuleJsonConfigureMaximumMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      'configureMaximumMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'configureMaximumMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'configureMaximumMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"depositMarketCollateral"`.
 */
export function usePrepareDeploymentsSynthetixMarketCollateralModuleJsonDepositMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      'depositMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'depositMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'depositMarketCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `functionName` set to `"withdrawMarketCollateral"`.
 */
export function usePrepareDeploymentsSynthetixMarketCollateralModuleJsonWithdrawMarketCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      'withdrawMarketCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    functionName: 'withdrawMarketCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'withdrawMarketCollateral'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `eventName` set to `"MarketCollateralDeposited"`.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonMarketCollateralDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      'MarketCollateralDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    eventName: 'MarketCollateralDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'MarketCollateralDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `eventName` set to `"MarketCollateralWithdrawn"`.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonMarketCollateralWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      'MarketCollateralWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    eventName: 'MarketCollateralWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'MarketCollateralWithdrawn'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixMarketCollateralModuleJsonABI}__ and `eventName` set to `"MaximumMarketCollateralConfigured"`.
 */
export function useDeploymentsSynthetixMarketCollateralModuleJsonMaximumMarketCollateralConfiguredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
      'MaximumMarketCollateralConfigured'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixMarketCollateralModuleJsonABI,
    address: deploymentsSynthetixMarketCollateralModuleJsonAddress,
    eventName: 'MaximumMarketCollateralConfigured',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixMarketCollateralModuleJsonABI,
    'MaximumMarketCollateralConfigured'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMarketManagerModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketCollateral"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonGetMarketCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'getMarketCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketNetIssuance"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonGetMarketNetIssuance<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketNetIssuance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'getMarketNetIssuance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketNetIssuance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketNetIssuance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketReportedDebt"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonGetMarketReportedDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketReportedDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'getMarketReportedDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketReportedDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketReportedDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketTotalDebt"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonGetMarketTotalDebt<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketTotalDebt'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'getMarketTotalDebt',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketTotalDebt',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketTotalDebt',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getWithdrawableMarketUsd"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonGetWithdrawableMarketUsd<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getWithdrawableMarketUsd'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'getWithdrawableMarketUsd',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getWithdrawableMarketUsd',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getWithdrawableMarketUsd',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"isMarketCapacityLocked"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonIsMarketCapacityLocked<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'isMarketCapacityLocked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'isMarketCapacityLocked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'isMarketCapacityLocked',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'isMarketCapacityLocked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketManagerModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketManagerModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonDepositMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketManagerModuleJsonABI,
          'depositMarketUsd'
        >['abi'],
        'depositMarketUsd'
      > & { functionName?: 'depositMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketManagerModuleJsonABI,
        'depositMarketUsd'
      > & {
        abi?: never
        functionName?: 'depositMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'depositMarketUsd'
  >({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonDistributeDebtToPools<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketManagerModuleJsonABI,
          'distributeDebtToPools'
        >['abi'],
        'distributeDebtToPools'
      > & { functionName?: 'distributeDebtToPools' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketManagerModuleJsonABI,
        'distributeDebtToPools'
      > & {
        abi?: never
        functionName?: 'distributeDebtToPools'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'distributeDebtToPools'
  >({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonGetMarketDebtPerShare<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketManagerModuleJsonABI,
          'getMarketDebtPerShare'
        >['abi'],
        'getMarketDebtPerShare'
      > & { functionName?: 'getMarketDebtPerShare' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketManagerModuleJsonABI,
        'getMarketDebtPerShare'
      > & {
        abi?: never
        functionName?: 'getMarketDebtPerShare'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketDebtPerShare'
  >({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonRegisterMarket<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketManagerModuleJsonABI,
          'registerMarket'
        >['abi'],
        'registerMarket'
      > & { functionName?: 'registerMarket' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketManagerModuleJsonABI,
        'registerMarket'
      > & {
        abi?: never
        functionName?: 'registerMarket'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'registerMarket'
  >({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonWithdrawMarketUsd<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMarketManagerModuleJsonABI,
          'withdrawMarketUsd'
        >['abi'],
        'withdrawMarketUsd'
      > & { functionName?: 'withdrawMarketUsd' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMarketManagerModuleJsonABI,
        'withdrawMarketUsd'
      > & {
        abi?: never
        functionName?: 'withdrawMarketUsd'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'withdrawMarketUsd'
  >({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixMarketManagerModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"depositMarketUsd"`.
 */
export function usePrepareDeploymentsSynthetixMarketManagerModuleJsonDepositMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'depositMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'depositMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'depositMarketUsd'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"distributeDebtToPools"`.
 */
export function usePrepareDeploymentsSynthetixMarketManagerModuleJsonDistributeDebtToPools(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'distributeDebtToPools'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'distributeDebtToPools',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'distributeDebtToPools'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"getMarketDebtPerShare"`.
 */
export function usePrepareDeploymentsSynthetixMarketManagerModuleJsonGetMarketDebtPerShare(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'getMarketDebtPerShare'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'getMarketDebtPerShare',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'getMarketDebtPerShare'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"registerMarket"`.
 */
export function usePrepareDeploymentsSynthetixMarketManagerModuleJsonRegisterMarket(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'registerMarket'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'registerMarket',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'registerMarket'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `functionName` set to `"withdrawMarketUsd"`.
 */
export function usePrepareDeploymentsSynthetixMarketManagerModuleJsonWithdrawMarketUsd(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'withdrawMarketUsd'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    functionName: 'withdrawMarketUsd',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'withdrawMarketUsd'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `eventName` set to `"MarketRegistered"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonMarketRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'MarketRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    eventName: 'MarketRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'MarketRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `eventName` set to `"MarketUsdDeposited"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonMarketUsdDepositedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'MarketUsdDeposited'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    eventName: 'MarketUsdDeposited',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'MarketUsdDeposited'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixMarketManagerModuleJsonABI}__ and `eventName` set to `"MarketUsdWithdrawn"`.
 */
export function useDeploymentsSynthetixMarketManagerModuleJsonMarketUsdWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixMarketManagerModuleJsonABI,
      'MarketUsdWithdrawn'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixMarketManagerModuleJsonABI,
    address: deploymentsSynthetixMarketManagerModuleJsonAddress,
    eventName: 'MarketUsdWithdrawn',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixMarketManagerModuleJsonABI,
    'MarketUsdWithdrawn'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixMulticallModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMulticallModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixMulticallModuleJsonABI,
    address: deploymentsSynthetixMulticallModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMulticallModuleJsonABI}__.
 */
export function useDeploymentsSynthetixMulticallModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMulticallModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMulticallModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMulticallModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixMulticallModuleJsonABI,
    address: deploymentsSynthetixMulticallModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMulticallModuleJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function useDeploymentsSynthetixMulticallModuleJsonMulticall<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixMulticallModuleJsonABI,
          'multicall'
        >['abi'],
        'multicall'
      > & { functionName?: 'multicall' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixMulticallModuleJsonABI,
        'multicall'
      > & {
        abi?: never
        functionName?: 'multicall'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixMulticallModuleJsonABI,
    'multicall'
  >({
    abi: deploymentsSynthetixMulticallModuleJsonABI,
    address: deploymentsSynthetixMulticallModuleJsonAddress,
    functionName: 'multicall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMulticallModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixMulticallModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMulticallModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMulticallModuleJsonABI,
    address: deploymentsSynthetixMulticallModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMulticallModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixMulticallModuleJsonABI}__ and `functionName` set to `"multicall"`.
 */
export function usePrepareDeploymentsSynthetixMulticallModuleJsonMulticall(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixMulticallModuleJsonABI,
      'multicall'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixMulticallModuleJsonABI,
    address: deploymentsSynthetixMulticallModuleJsonAddress,
    functionName: 'multicall',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixMulticallModuleJsonABI,
    'multicall'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"getApprovedPools"`.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonGetApprovedPools<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'getApprovedPools'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      'getApprovedPools',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'getApprovedPools',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'getApprovedPools',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"getPreferredPool"`.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonGetPreferredPool<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'getPreferredPool'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      'getPreferredPool',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'getPreferredPool',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'getPreferredPool',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonAddApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
          'addApprovedPool'
        >['abi'],
        'addApprovedPool'
      > & { functionName?: 'addApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
        'addApprovedPool'
      > & {
        abi?: never
        functionName?: 'addApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'addApprovedPool'
  >({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonRemoveApprovedPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
          'removeApprovedPool'
        >['abi'],
        'removeApprovedPool'
      > & { functionName?: 'removeApprovedPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
        'removeApprovedPool'
      > & {
        abi?: never
        functionName?: 'removeApprovedPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'removeApprovedPool'
  >({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonSetPreferredPool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
          'setPreferredPool'
        >['abi'],
        'setPreferredPool'
      > & { functionName?: 'setPreferredPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
        'setPreferredPool'
      > & {
        abi?: never
        functionName?: 'setPreferredPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'setPreferredPool'
  >({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixPoolConfigurationModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"addApprovedPool"`.
 */
export function usePrepareDeploymentsSynthetixPoolConfigurationModuleJsonAddApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      'addApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'addApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'addApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"removeApprovedPool"`.
 */
export function usePrepareDeploymentsSynthetixPoolConfigurationModuleJsonRemoveApprovedPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      'removeApprovedPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'removeApprovedPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'removeApprovedPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `functionName` set to `"setPreferredPool"`.
 */
export function usePrepareDeploymentsSynthetixPoolConfigurationModuleJsonSetPreferredPool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      'setPreferredPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    functionName: 'setPreferredPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'setPreferredPool'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `eventName` set to `"PoolApprovedAdded"`.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonPoolApprovedAddedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      'PoolApprovedAdded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    eventName: 'PoolApprovedAdded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'PoolApprovedAdded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `eventName` set to `"PoolApprovedRemoved"`.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonPoolApprovedRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      'PoolApprovedRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    eventName: 'PoolApprovedRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'PoolApprovedRemoved'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolConfigurationModuleJsonABI}__ and `eventName` set to `"PreferredPoolSet"`.
 */
export function useDeploymentsSynthetixPoolConfigurationModuleJsonPreferredPoolSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
      'PreferredPoolSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolConfigurationModuleJsonABI,
    address: deploymentsSynthetixPoolConfigurationModuleJsonAddress,
    eventName: 'PreferredPoolSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolConfigurationModuleJsonABI,
    'PreferredPoolSet'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__.
 */
export function useDeploymentsSynthetixPoolModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__.
 */
export function useDeploymentsSynthetixPoolModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getMinLiquidityRatio"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonGetMinLiquidityRatio<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getMinLiquidityRatio'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'getMinLiquidityRatio',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'getMinLiquidityRatio',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getMinLiquidityRatio',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getNominatedPoolOwner"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonGetNominatedPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getNominatedPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'getNominatedPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'getNominatedPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getNominatedPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getPoolConfiguration"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonGetPoolConfiguration<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getPoolConfiguration'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'getPoolConfiguration',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'getPoolConfiguration',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getPoolConfiguration',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getPoolName"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonGetPoolName<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getPoolName'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'getPoolName',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'getPoolName',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getPoolName',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"getPoolOwner"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonGetPoolOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getPoolOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'getPoolOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'getPoolOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'getPoolOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__.
 */
export function useDeploymentsSynthetixPoolModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonAcceptPoolOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolModuleJsonABI,
          'acceptPoolOwnership'
        >['abi'],
        'acceptPoolOwnership'
      > & { functionName?: 'acceptPoolOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolModuleJsonABI,
        'acceptPoolOwnership'
      > & {
        abi?: never
        functionName?: 'acceptPoolOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'acceptPoolOwnership'
  >({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonCreatePool<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolModuleJsonABI,
          'createPool'
        >['abi'],
        'createPool'
      > & { functionName?: 'createPool' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolModuleJsonABI,
        'createPool'
      > & {
        abi?: never
        functionName?: 'createPool'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'createPool'
  >({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'createPool',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonNominatePoolOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolModuleJsonABI,
          'nominatePoolOwner'
        >['abi'],
        'nominatePoolOwner'
      > & { functionName?: 'nominatePoolOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolModuleJsonABI,
        'nominatePoolOwner'
      > & {
        abi?: never
        functionName?: 'nominatePoolOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'nominatePoolOwner'
  >({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonRenouncePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolModuleJsonABI,
          'renouncePoolNomination'
        >['abi'],
        'renouncePoolNomination'
      > & { functionName?: 'renouncePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolModuleJsonABI,
        'renouncePoolNomination'
      > & {
        abi?: never
        functionName?: 'renouncePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'renouncePoolNomination'
  >({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonRevokePoolNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolModuleJsonABI,
          'revokePoolNomination'
        >['abi'],
        'revokePoolNomination'
      > & { functionName?: 'revokePoolNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolModuleJsonABI,
        'revokePoolNomination'
      > & {
        abi?: never
        functionName?: 'revokePoolNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'revokePoolNomination'
  >({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonSetMinLiquidityRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolModuleJsonABI,
          'setMinLiquidityRatio'
        >['abi'],
        'setMinLiquidityRatio'
      > & { functionName?: 'setMinLiquidityRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolModuleJsonABI,
        'setMinLiquidityRatio'
      > & {
        abi?: never
        functionName?: 'setMinLiquidityRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'setMinLiquidityRatio'
  >({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonSetPoolConfiguration<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolModuleJsonABI,
          'setPoolConfiguration'
        >['abi'],
        'setPoolConfiguration'
      > & { functionName?: 'setPoolConfiguration' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolModuleJsonABI,
        'setPoolConfiguration'
      > & {
        abi?: never
        functionName?: 'setPoolConfiguration'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'setPoolConfiguration'
  >({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonSetPoolName<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixPoolModuleJsonABI,
          'setPoolName'
        >['abi'],
        'setPoolName'
      > & { functionName?: 'setPoolName' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixPoolModuleJsonABI,
        'setPoolName'
      > & {
        abi?: never
        functionName?: 'setPoolName'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'setPoolName'
  >({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixPoolModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"acceptPoolOwnership"`.
 */
export function usePrepareDeploymentsSynthetixPoolModuleJsonAcceptPoolOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'acceptPoolOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'acceptPoolOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'acceptPoolOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"createPool"`.
 */
export function usePrepareDeploymentsSynthetixPoolModuleJsonCreatePool(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'createPool'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'createPool',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'createPool'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"nominatePoolOwner"`.
 */
export function usePrepareDeploymentsSynthetixPoolModuleJsonNominatePoolOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'nominatePoolOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'nominatePoolOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'nominatePoolOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"renouncePoolNomination"`.
 */
export function usePrepareDeploymentsSynthetixPoolModuleJsonRenouncePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'renouncePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'renouncePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'renouncePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"revokePoolNomination"`.
 */
export function usePrepareDeploymentsSynthetixPoolModuleJsonRevokePoolNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'revokePoolNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'revokePoolNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'revokePoolNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setMinLiquidityRatio"`.
 */
export function usePrepareDeploymentsSynthetixPoolModuleJsonSetMinLiquidityRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'setMinLiquidityRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'setMinLiquidityRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'setMinLiquidityRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setPoolConfiguration"`.
 */
export function usePrepareDeploymentsSynthetixPoolModuleJsonSetPoolConfiguration(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'setPoolConfiguration'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'setPoolConfiguration',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'setPoolConfiguration'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `functionName` set to `"setPoolName"`.
 */
export function usePrepareDeploymentsSynthetixPoolModuleJsonSetPoolName(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'setPoolName'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    functionName: 'setPoolName',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'setPoolName'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__.
 */
export function useDeploymentsSynthetixPoolModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolConfigurationSet"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonPoolConfigurationSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'PoolConfigurationSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    eventName: 'PoolConfigurationSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'PoolConfigurationSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolCreated"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonPoolCreatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'PoolCreated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    eventName: 'PoolCreated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'PoolCreated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolNameUpdated"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonPoolNameUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'PoolNameUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    eventName: 'PoolNameUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'PoolNameUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolNominationRenounced"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonPoolNominationRenouncedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'PoolNominationRenounced'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    eventName: 'PoolNominationRenounced',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'PoolNominationRenounced'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolNominationRevoked"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonPoolNominationRevokedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'PoolNominationRevoked'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    eventName: 'PoolNominationRevoked',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'PoolNominationRevoked'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolOwnerNominated"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonPoolOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'PoolOwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    eventName: 'PoolOwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'PoolOwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixPoolModuleJsonABI}__ and `eventName` set to `"PoolOwnershipAccepted"`.
 */
export function useDeploymentsSynthetixPoolModuleJsonPoolOwnershipAcceptedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixPoolModuleJsonABI,
      'PoolOwnershipAccepted'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixPoolModuleJsonABI,
    address: deploymentsSynthetixPoolModuleJsonAddress,
    eventName: 'PoolOwnershipAccepted',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixPoolModuleJsonABI,
    'PoolOwnershipAccepted'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"getRewardRate"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonGetRewardRate<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'getRewardRate'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'getRewardRate',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'getRewardRate',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'getRewardRate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonClaimRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
          'claimRewards'
        >['abi'],
        'claimRewards'
      > & { functionName?: 'claimRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
        'claimRewards'
      > & {
        abi?: never
        functionName?: 'claimRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'claimRewards'
  >({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonDistributeRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
          'distributeRewards'
        >['abi'],
        'distributeRewards'
      > & { functionName?: 'distributeRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
        'distributeRewards'
      > & {
        abi?: never
        functionName?: 'distributeRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'distributeRewards'
  >({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonRegisterRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
          'registerRewardsDistributor'
        >['abi'],
        'registerRewardsDistributor'
      > & { functionName?: 'registerRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
        'registerRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'registerRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'registerRewardsDistributor'
  >({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonRemoveRewardsDistributor<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
          'removeRewardsDistributor'
        >['abi'],
        'removeRewardsDistributor'
      > & { functionName?: 'removeRewardsDistributor' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
        'removeRewardsDistributor'
      > & {
        abi?: never
        functionName?: 'removeRewardsDistributor'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'removeRewardsDistributor'
  >({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonUpdateRewards<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
          'updateRewards'
        >['abi'],
        'updateRewards'
      > & { functionName?: 'updateRewards' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
        'updateRewards'
      > & {
        abi?: never
        functionName?: 'updateRewards'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'updateRewards'
  >({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixRewardsManagerModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"claimRewards"`.
 */
export function usePrepareDeploymentsSynthetixRewardsManagerModuleJsonClaimRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'claimRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'claimRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'claimRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"distributeRewards"`.
 */
export function usePrepareDeploymentsSynthetixRewardsManagerModuleJsonDistributeRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'distributeRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'distributeRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'distributeRewards'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"registerRewardsDistributor"`.
 */
export function usePrepareDeploymentsSynthetixRewardsManagerModuleJsonRegisterRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'registerRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'registerRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'registerRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"removeRewardsDistributor"`.
 */
export function usePrepareDeploymentsSynthetixRewardsManagerModuleJsonRemoveRewardsDistributor(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'removeRewardsDistributor'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'removeRewardsDistributor',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'removeRewardsDistributor'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `functionName` set to `"updateRewards"`.
 */
export function usePrepareDeploymentsSynthetixRewardsManagerModuleJsonUpdateRewards(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'updateRewards'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    functionName: 'updateRewards',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'updateRewards'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `eventName` set to `"RewardsClaimed"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonRewardsClaimedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'RewardsClaimed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    eventName: 'RewardsClaimed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'RewardsClaimed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `eventName` set to `"RewardsDistributed"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonRewardsDistributedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'RewardsDistributed'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    eventName: 'RewardsDistributed',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'RewardsDistributed'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `eventName` set to `"RewardsDistributorRegistered"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonRewardsDistributorRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'RewardsDistributorRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    eventName: 'RewardsDistributorRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'RewardsDistributorRegistered'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixRewardsManagerModuleJsonABI}__ and `eventName` set to `"RewardsDistributorRemoved"`.
 */
export function useDeploymentsSynthetixRewardsManagerModuleJsonRewardsDistributorRemovedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
      'RewardsDistributorRemoved'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixRewardsManagerModuleJsonABI,
    address: deploymentsSynthetixRewardsManagerModuleJsonAddress,
    eventName: 'RewardsDistributorRemoved',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixRewardsManagerModuleJsonABI,
    'RewardsDistributorRemoved'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__.
 */
export function useDeploymentsSynthetixUsdProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__.
 */
export function useDeploymentsSynthetixUsdProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"allowance"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonAllowance<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'allowance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'allowance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'allowance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__.
 */
export function useDeploymentsSynthetixUsdProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'approve'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'burn'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonBurnWithAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'burnWithAllowance'
        >['abi'],
        'burnWithAllowance'
      > & { functionName?: 'burnWithAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'burnWithAllowance'
      > & {
        abi?: never
        functionName?: 'burnWithAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'burnWithAllowance'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonDecreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'decreaseAllowance'
      > & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'decreaseAllowance'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonIncreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'increaseAllowance'
      > & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'increaseAllowance'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'initialize'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'mint'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'transfer'
        >['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'transfer'
      > & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'transfer'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonTransferCrossChain<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'transferCrossChain'
        >['abi'],
        'transferCrossChain'
      > & { functionName?: 'transferCrossChain' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'transferCrossChain'
      > & {
        abi?: never
        functionName?: 'transferCrossChain'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'transferCrossChain'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdProxyJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdProxyJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonBurnWithAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'burnWithAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'burnWithAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'decreaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'increaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'transfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'transfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonTransferCrossChain(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'transferCrossChain'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'transferCrossChain'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSynthetixUsdProxyJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__.
 */
export function useDeploymentsSynthetixUsdProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdProxyJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSynthetixUsdProxyJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdProxyJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdProxyJsonABI,
    address: deploymentsSynthetixUsdProxyJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdProxyJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__.
 */
export function useDeploymentsSynthetixUsdRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__.
 */
export function useDeploymentsSynthetixUsdRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"getAssociatedSystem"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonGetAssociatedSystem<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'getAssociatedSystem'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'getAssociatedSystem',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'getAssociatedSystem',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'getAssociatedSystem',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"allowance"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonAllowance<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'allowance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'allowance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'allowance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__.
 */
export function useDeploymentsSynthetixUsdRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonInitOrUpgradeNft<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'initOrUpgradeNft'
        >['abi'],
        'initOrUpgradeNft'
      > & { functionName?: 'initOrUpgradeNft' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'initOrUpgradeNft'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeNft'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'initOrUpgradeNft'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonInitOrUpgradeToken<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'initOrUpgradeToken'
        >['abi'],
        'initOrUpgradeToken'
      > & { functionName?: 'initOrUpgradeToken' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'initOrUpgradeToken'
      > & {
        abi?: never
        functionName?: 'initOrUpgradeToken'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'initOrUpgradeToken'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonRegisterUnmanagedSystem<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'registerUnmanagedSystem'
        >['abi'],
        'registerUnmanagedSystem'
      > & { functionName?: 'registerUnmanagedSystem' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'registerUnmanagedSystem'
      > & {
        abi?: never
        functionName?: 'registerUnmanagedSystem'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'registerUnmanagedSystem'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'approve'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'burn'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonBurnWithAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'burnWithAllowance'
        >['abi'],
        'burnWithAllowance'
      > & { functionName?: 'burnWithAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'burnWithAllowance'
      > & {
        abi?: never
        functionName?: 'burnWithAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'burnWithAllowance'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonDecreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'decreaseAllowance'
      > & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'decreaseAllowance'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonIncreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'increaseAllowance'
      > & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'increaseAllowance'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'initialize'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'mint'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'transfer'
        >['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'transfer'
      > & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'transfer'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonTransferCrossChain<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'transferCrossChain'
        >['abi'],
        'transferCrossChain'
      > & { functionName?: 'transferCrossChain' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'transferCrossChain'
      > & {
        abi?: never
        functionName?: 'transferCrossChain'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'transferCrossChain'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdRouterJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdRouterJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initOrUpgradeNft"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonInitOrUpgradeNft(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'initOrUpgradeNft'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'initOrUpgradeNft',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'initOrUpgradeNft'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initOrUpgradeToken"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonInitOrUpgradeToken(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'initOrUpgradeToken'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'initOrUpgradeToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'initOrUpgradeToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"registerUnmanagedSystem"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonRegisterUnmanagedSystem(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'registerUnmanagedSystem'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'registerUnmanagedSystem',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'registerUnmanagedSystem'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonBurnWithAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'burnWithAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'burnWithAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'decreaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'increaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'transfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'transfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonTransferCrossChain(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'transferCrossChain'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'transferCrossChain'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSynthetixUsdRouterJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__.
 */
export function useDeploymentsSynthetixUsdRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `eventName` set to `"AssociatedSystemSet"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonAssociatedSystemSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'AssociatedSystemSet'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    eventName: 'AssociatedSystemSet',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'AssociatedSystemSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdRouterJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSynthetixUsdRouterJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdRouterJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdRouterJsonABI,
    address: deploymentsSynthetixUsdRouterJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdRouterJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__.
 */
export function useDeploymentsSynthetixUsdTokenModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"allowance"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonAllowance<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'allowance'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'allowance',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'allowance',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonBalanceOf<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'balanceOf'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'balanceOf',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'balanceOf',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"decimals"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonDecimals<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'decimals'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'decimals',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'decimals',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"isInitialized"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonIsInitialized<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'isInitialized'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'isInitialized',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'isInitialized',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'isInitialized',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"name"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonName<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'name'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'name',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'name',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"symbol"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonSymbol<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'symbol'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'symbol',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'symbol',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonTotalSupply<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'totalSupply'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'totalSupply',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonApprove<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'approve'
        >['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'approve'
      > & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'approve'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonBurn<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'burn'
        >['abi'],
        'burn'
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'burn'
      > & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'burn'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonBurnWithAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'burnWithAllowance'
        >['abi'],
        'burnWithAllowance'
      > & { functionName?: 'burnWithAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'burnWithAllowance'
      > & {
        abi?: never
        functionName?: 'burnWithAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'burnWithAllowance'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonDecreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'decreaseAllowance'
      > & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'decreaseAllowance'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonIncreaseAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'increaseAllowance'
      > & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'increaseAllowance'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonInitialize<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'initialize'
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'initialize'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonMint<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'mint'
        >['abi'],
        'mint'
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'mint'
      > & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'mint'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonSetAllowance<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'setAllowance'
        >['abi'],
        'setAllowance'
      > & { functionName?: 'setAllowance' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'setAllowance'
      > & {
        abi?: never
        functionName?: 'setAllowance'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'setAllowance'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonTransfer<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'transfer'
        >['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'transfer'
      > & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'transfer'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonTransferCrossChain<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'transferCrossChain'
        >['abi'],
        'transferCrossChain'
      > & { functionName?: 'transferCrossChain' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'transferCrossChain'
      > & {
        abi?: never
        functionName?: 'transferCrossChain'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'transferCrossChain'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonTransferFrom<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUsdTokenModuleJsonABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUsdTokenModuleJsonABI,
        'transferFrom'
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'transferFrom'
  >({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonApprove(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'approve'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonBurn(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'burn'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"burnWithAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonBurnWithAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'burnWithAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'burnWithAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'burnWithAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'decreaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'increaseAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'initialize'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonMint(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'mint'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"setAllowance"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonSetAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'setAllowance'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'setAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'setAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'transfer'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'transfer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transferCrossChain"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonTransferCrossChain(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'transferCrossChain'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transferCrossChain',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'transferCrossChain'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareDeploymentsSynthetixUsdTokenModuleJsonTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'transferFrom'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `eventName` set to `"Approval"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonApprovalEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'Approval'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'Approval'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixUsdTokenModuleJsonABI}__ and `eventName` set to `"Transfer"`.
 */
export function useDeploymentsSynthetixUsdTokenModuleJsonTransferEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixUsdTokenModuleJsonABI,
      'Transfer'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixUsdTokenModuleJsonABI,
    address: deploymentsSynthetixUsdTokenModuleJsonAddress,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixUsdTokenModuleJsonABI,
    'Transfer'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__.
 */
export function useDeploymentsSynthetixUtilsModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__.
 */
export function useDeploymentsSynthetixUtilsModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUtilsModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"getConfig"`.
 */
export function useDeploymentsSynthetixUtilsModuleJsonGetConfig<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    'getConfig'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixUtilsModuleJsonABI,
      'getConfig',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    functionName: 'getConfig',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    'getConfig',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__.
 */
export function useDeploymentsSynthetixUtilsModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUtilsModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUtilsModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function useDeploymentsSynthetixUtilsModuleJsonConfigureOracleManager<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUtilsModuleJsonABI,
          'configureOracleManager'
        >['abi'],
        'configureOracleManager'
      > & { functionName?: 'configureOracleManager' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUtilsModuleJsonABI,
        'configureOracleManager'
      > & {
        abi?: never
        functionName?: 'configureOracleManager'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    'configureOracleManager'
  >({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function useDeploymentsSynthetixUtilsModuleJsonRegisterCcip<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUtilsModuleJsonABI,
          'registerCcip'
        >['abi'],
        'registerCcip'
      > & { functionName?: 'registerCcip' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUtilsModuleJsonABI,
        'registerCcip'
      > & {
        abi?: never
        functionName?: 'registerCcip'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    'registerCcip'
  >({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function useDeploymentsSynthetixUtilsModuleJsonSetConfig<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixUtilsModuleJsonABI,
          'setConfig'
        >['abi'],
        'setConfig'
      > & { functionName?: 'setConfig' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixUtilsModuleJsonABI,
        'setConfig'
      > & {
        abi?: never
        functionName?: 'setConfig'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    'setConfig'
  >({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixUtilsModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUtilsModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"configureOracleManager"`.
 */
export function usePrepareDeploymentsSynthetixUtilsModuleJsonConfigureOracleManager(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUtilsModuleJsonABI,
      'configureOracleManager'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    functionName: 'configureOracleManager',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    'configureOracleManager'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"registerCcip"`.
 */
export function usePrepareDeploymentsSynthetixUtilsModuleJsonRegisterCcip(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUtilsModuleJsonABI,
      'registerCcip'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    functionName: 'registerCcip',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    'registerCcip'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixUtilsModuleJsonABI}__ and `functionName` set to `"setConfig"`.
 */
export function usePrepareDeploymentsSynthetixUtilsModuleJsonSetConfig(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixUtilsModuleJsonABI,
      'setConfig'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixUtilsModuleJsonABI,
    address: deploymentsSynthetixUtilsModuleJsonAddress,
    functionName: 'setConfig',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixUtilsModuleJsonABI,
    'setConfig'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__.
 */
export function useDeploymentsSynthetixVaultModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__.
 */
export function useDeploymentsSynthetixVaultModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionCollateral"`.
 */
export function useDeploymentsSynthetixVaultModuleJsonGetPositionCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getPositionCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      'getPositionCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getPositionCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultCollateral"`.
 */
export function useDeploymentsSynthetixVaultModuleJsonGetVaultCollateral<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getVaultCollateral'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      'getVaultCollateral',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultCollateral',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getVaultCollateral',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__.
 */
export function useDeploymentsSynthetixVaultModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixVaultModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixVaultModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixVaultModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function useDeploymentsSynthetixVaultModuleJsonDelegateCollateral<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixVaultModuleJsonABI,
          'delegateCollateral'
        >['abi'],
        'delegateCollateral'
      > & { functionName?: 'delegateCollateral' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixVaultModuleJsonABI,
        'delegateCollateral'
      > & {
        abi?: never
        functionName?: 'delegateCollateral'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'delegateCollateral'
  >({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function useDeploymentsSynthetixVaultModuleJsonGetPosition<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixVaultModuleJsonABI,
          'getPosition'
        >['abi'],
        'getPosition'
      > & { functionName?: 'getPosition' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixVaultModuleJsonABI,
        'getPosition'
      > & {
        abi?: never
        functionName?: 'getPosition'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getPosition'
  >({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function useDeploymentsSynthetixVaultModuleJsonGetPositionCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixVaultModuleJsonABI,
          'getPositionCollateralRatio'
        >['abi'],
        'getPositionCollateralRatio'
      > & { functionName?: 'getPositionCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixVaultModuleJsonABI,
        'getPositionCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getPositionCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getPositionCollateralRatio'
  >({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function useDeploymentsSynthetixVaultModuleJsonGetPositionDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixVaultModuleJsonABI,
          'getPositionDebt'
        >['abi'],
        'getPositionDebt'
      > & { functionName?: 'getPositionDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixVaultModuleJsonABI,
        'getPositionDebt'
      > & {
        abi?: never
        functionName?: 'getPositionDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getPositionDebt'
  >({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function useDeploymentsSynthetixVaultModuleJsonGetVaultCollateralRatio<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixVaultModuleJsonABI,
          'getVaultCollateralRatio'
        >['abi'],
        'getVaultCollateralRatio'
      > & { functionName?: 'getVaultCollateralRatio' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixVaultModuleJsonABI,
        'getVaultCollateralRatio'
      > & {
        abi?: never
        functionName?: 'getVaultCollateralRatio'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getVaultCollateralRatio'
  >({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function useDeploymentsSynthetixVaultModuleJsonGetVaultDebt<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixVaultModuleJsonABI,
          'getVaultDebt'
        >['abi'],
        'getVaultDebt'
      > & { functionName?: 'getVaultDebt' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixVaultModuleJsonABI,
        'getVaultDebt'
      > & {
        abi?: never
        functionName?: 'getVaultDebt'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getVaultDebt'
  >({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixVaultModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"delegateCollateral"`.
 */
export function usePrepareDeploymentsSynthetixVaultModuleJsonDelegateCollateral(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      'delegateCollateral'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'delegateCollateral',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'delegateCollateral'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPosition"`.
 */
export function usePrepareDeploymentsSynthetixVaultModuleJsonGetPosition(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      'getPosition'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getPosition',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getPosition'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionCollateralRatio"`.
 */
export function usePrepareDeploymentsSynthetixVaultModuleJsonGetPositionCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      'getPositionCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getPositionCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getPositionDebt"`.
 */
export function usePrepareDeploymentsSynthetixVaultModuleJsonGetPositionDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      'getPositionDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getPositionDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getPositionDebt'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultCollateralRatio"`.
 */
export function usePrepareDeploymentsSynthetixVaultModuleJsonGetVaultCollateralRatio(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      'getVaultCollateralRatio'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultCollateralRatio',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getVaultCollateralRatio'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `functionName` set to `"getVaultDebt"`.
 */
export function usePrepareDeploymentsSynthetixVaultModuleJsonGetVaultDebt(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      'getVaultDebt'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    functionName: 'getVaultDebt',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'getVaultDebt'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__.
 */
export function useDeploymentsSynthetixVaultModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixVaultModuleJsonABI}__ and `eventName` set to `"DelegationUpdated"`.
 */
export function useDeploymentsSynthetixVaultModuleJsonDelegationUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixVaultModuleJsonABI,
      'DelegationUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixVaultModuleJsonABI,
    address: deploymentsSynthetixVaultModuleJsonAddress,
    eventName: 'DelegationUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixVaultModuleJsonABI,
    'DelegationUpdated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixOracleManagerCoreModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerCoreModuleJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerCoreModuleJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerCoreModuleJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerCoreModuleJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerCoreModuleJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerCoreModuleJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixOracleManagerCoreModuleJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    address: deploymentsSynthetixOracleManagerCoreModuleJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerCoreModuleJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixOracleManagerInitialProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerInitialProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerInitialProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerInitialProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerInitialProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerInitialProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerInitialProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixOracleManagerInitialProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    address: deploymentsSynthetixOracleManagerInitialProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerInitialProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerNodeModuleJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerNodeModuleJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"getNode"`.
 */
export function useDeploymentsSynthetixOracleManagerNodeModuleJsonGetNode<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    'getNode'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
      'getNode',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'getNode',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    'getNode',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"getNodeId"`.
 */
export function useDeploymentsSynthetixOracleManagerNodeModuleJsonGetNodeId<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    'getNodeId'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
      'getNodeId',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'getNodeId',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    'getNodeId',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"process"`.
 */
export function useDeploymentsSynthetixOracleManagerNodeModuleJsonProcess<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    'process'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
      'process',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'process',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    'process',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerNodeModuleJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function useDeploymentsSynthetixOracleManagerNodeModuleJsonRegisterNode<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
          'registerNode'
        >['abi'],
        'registerNode'
      > & { functionName?: 'registerNode' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
        'registerNode'
      > & {
        abi?: never
        functionName?: 'registerNode'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    'registerNode'
  >({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixOracleManagerNodeModuleJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerNodeModuleJsonRegisterNode(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
      'registerNode'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    'registerNode'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerNodeModuleJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerNodeModuleJsonABI}__ and `eventName` set to `"NodeRegistered"`.
 */
export function useDeploymentsSynthetixOracleManagerNodeModuleJsonNodeRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
      'NodeRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    address: deploymentsSynthetixOracleManagerNodeModuleJsonAddress,
    eventName: 'NodeRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerNodeModuleJsonABI,
    'NodeRegistered'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"getNode"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonGetNode<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'getNode'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'getNode',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'getNode',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'getNode',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"getNodeId"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonGetNodeId<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'getNodeId'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'getNodeId',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'getNodeId',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'getNodeId',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"process"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonProcess<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'process'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'process',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'process',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'process',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonRegisterNode<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
          'registerNode'
        >['abi'],
        'registerNode'
      > & { functionName?: 'registerNode' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
        'registerNode'
      > & {
        abi?: never
        functionName?: 'registerNode'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'registerNode'
  >({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixOracleManagerOracleRouterJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerOracleRouterJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerOracleRouterJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerOracleRouterJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerOracleRouterJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerOracleRouterJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerOracleRouterJsonRegisterNode(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'registerNode'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'registerNode'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerOracleRouterJsonABI}__ and `eventName` set to `"NodeRegistered"`.
 */
export function useDeploymentsSynthetixOracleManagerOracleRouterJsonNodeRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
      'NodeRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    address: deploymentsSynthetixOracleManagerOracleRouterJsonAddress,
    eventName: 'NodeRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerOracleRouterJsonABI,
    'NodeRegistered'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerProxyJson(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"getImplementation"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonGetImplementation<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'getImplementation'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'getImplementation',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'getImplementation',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'getImplementation',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"nominatedOwner"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonNominatedOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'nominatedOwner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'nominatedOwner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'nominatedOwner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'nominatedOwner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"owner"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonOwner<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'owner'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'owner',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"getNode"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonGetNode<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'getNode'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'getNode',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'getNode',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'getNode',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"getNodeId"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonGetNodeId<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'getNodeId'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'getNodeId',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'getNodeId',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'getNodeId',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"process"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonProcess<
  TSelectData = ReadContractResult<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'process'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'process',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'process',
    ...config,
  } as UseContractReadConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'process',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerProxyJsonABI,
          string
        >['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerProxyJsonABI,
        TFunctionName
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    TFunctionName
  >({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonAcceptOwnership<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerProxyJsonABI,
          'acceptOwnership'
        >['abi'],
        'acceptOwnership'
      > & { functionName?: 'acceptOwnership' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerProxyJsonABI,
        'acceptOwnership'
      > & {
        abi?: never
        functionName?: 'acceptOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'acceptOwnership'
  >({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonNominateNewOwner<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerProxyJsonABI,
          'nominateNewOwner'
        >['abi'],
        'nominateNewOwner'
      > & { functionName?: 'nominateNewOwner' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerProxyJsonABI,
        'nominateNewOwner'
      > & {
        abi?: never
        functionName?: 'nominateNewOwner'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'nominateNewOwner'
  >({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonRenounceNomination<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerProxyJsonABI,
          'renounceNomination'
        >['abi'],
        'renounceNomination'
      > & { functionName?: 'renounceNomination' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerProxyJsonABI,
        'renounceNomination'
      > & {
        abi?: never
        functionName?: 'renounceNomination'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'renounceNomination'
  >({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonSimulateUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerProxyJsonABI,
          'simulateUpgradeTo'
        >['abi'],
        'simulateUpgradeTo'
      > & { functionName?: 'simulateUpgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerProxyJsonABI,
        'simulateUpgradeTo'
      > & {
        abi?: never
        functionName?: 'simulateUpgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'simulateUpgradeTo'
  >({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonUpgradeTo<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerProxyJsonABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerProxyJsonABI,
        'upgradeTo'
      > & {
        abi?: never
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'upgradeTo'
  >({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonRegisterNode<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof deploymentsSynthetixOracleManagerProxyJsonABI,
          'registerNode'
        >['abi'],
        'registerNode'
      > & { functionName?: 'registerNode' }
    : UseContractWriteConfig<
        TMode,
        typeof deploymentsSynthetixOracleManagerProxyJsonABI,
        'registerNode'
      > & {
        abi?: never
        functionName?: 'registerNode'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'registerNode'
  >({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__.
 */
export function usePrepareDeploymentsSynthetixOracleManagerProxyJsonWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      TFunctionName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerProxyJsonAcceptOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'acceptOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'acceptOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'acceptOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"nominateNewOwner"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerProxyJsonNominateNewOwner(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'nominateNewOwner'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'nominateNewOwner',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'nominateNewOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"renounceNomination"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerProxyJsonRenounceNomination(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'renounceNomination'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'renounceNomination',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'renounceNomination'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"simulateUpgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerProxyJsonSimulateUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'simulateUpgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'simulateUpgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'simulateUpgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"upgradeTo"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerProxyJsonUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'upgradeTo'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `functionName` set to `"registerNode"`.
 */
export function usePrepareDeploymentsSynthetixOracleManagerProxyJsonRegisterNode(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'registerNode'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    functionName: 'registerNode',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'registerNode'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonEvent<
  TEventName extends string,
>(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      TEventName
    >,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `eventName` set to `"OwnerChanged"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonOwnerChangedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'OwnerChanged'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    eventName: 'OwnerChanged',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'OwnerChanged'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `eventName` set to `"OwnerNominated"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonOwnerNominatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'OwnerNominated'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    eventName: 'OwnerNominated',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'OwnerNominated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `eventName` set to `"Upgraded"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonUpgradedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'Upgraded'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'Upgraded'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link deploymentsSynthetixOracleManagerProxyJsonABI}__ and `eventName` set to `"NodeRegistered"`.
 */
export function useDeploymentsSynthetixOracleManagerProxyJsonNodeRegisteredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof deploymentsSynthetixOracleManagerProxyJsonABI,
      'NodeRegistered'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: deploymentsSynthetixOracleManagerProxyJsonABI,
    address: deploymentsSynthetixOracleManagerProxyJsonAddress,
    eventName: 'NodeRegistered',
    ...config,
  } as UseContractEventConfig<
    typeof deploymentsSynthetixOracleManagerProxyJsonABI,
    'NodeRegistered'
  >)
}
